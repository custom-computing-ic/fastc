#ifdef MAXCOMPILER_VERSION_INFO
#define MAXCOMPILER_VERSION_INFO_PRESENT 1
#define MAXFILE_MAXCOMPILER_VERSION_YEAR         2012
#define MAXFILE_MAXCOMPILER_VERSION_NUM          1
#define MAXFILE_MAXCOMPILER_VERSION_POINT        0
#define MAXFILE_MAXCOMPILER_VERSION_PATCH        ""
#define MAXFILE_MAXCOMPILER_VERSION_REV          28086
#define MAXFILE_MAXCOMPILER_VERSION_RELEASE_MODE true
#endif

#ifdef MAXFILE_BUILD_INFO
#define MAXFILE_BUILD_INFO_PRESENT 1
#define MAXFILE_BUILD_NAME "SimBuilder"
#define MAXFILE_BUILD_DIR  "/mnt/data/cccad3/nx210/tools/fastcc/prj/./SimBuilder"
#endif

#ifdef PARAM
#define PARAM_PRESENT 1
PARAM(MemCtrlPro_TotalNumStreams, 8)
PARAM(MemCtrlPro_NumRdStreams, 5)
PARAM(MemCtrlPro_NumWrStreams, 3)
PARAM(MemCtrlPro_DDRType, 3)
PARAM(MemCtrlPro_BurstSizeInBytes, 384)
PARAM(MemCtrlPro_MIGBurstSize, 8)
PARAM(MemCtrlPro_Parity_Mode, 0)
PARAM(MemCtrlPro_ECC_Mode, 0)
PARAM(MemCtrlPro_ParityECC_Debug, 0)
PARAM(MemCtrlPro_ParityECC_EngineSize, 0)
PARAM(MemCtrlPro_DataBurstSizeInBytes, 384)
PARAM(MemCtrlPro_MainFIFODepth, 512)
PARAM(MemCtrlPro_BitMungeType, 2)
PARAM(MemCtrlPro_BitMungeSupports_2GB_SingleRank, 1)
PARAM(MemCtrlPro_BitMungeSupports_2GB_DualRank, 0)
PARAM(MemCtrlPro_BitMungeSupports_4GB_DualRank, 1)
PARAM(MemCtrlPro_BitMungeSupports_8GB_DualRank, 1)
PARAM(APP_ID, 0)
PARAM(REV_ID, 0)
PARAM(CHAIN_LENGTH, 3367)
PARAM(IS_SIMULATION, 1)
PARAM(MEC_SUPPORTED, 1)
PARAM(NUM_IFPGA_LINKS, 0)
#endif

#ifdef STRING_PARAM
#define STRING_PARAM_PRESENT 1
STRING_PARAM(BOARD_MODEL, "MAX3424A")
#endif

#ifdef INCLUDE_GENERATED_CPP_HEADERS
#include "Cmdhostread.h"
#endif

#ifdef INCLUDE_GENERATED_CPP_HEADERS
#include "Cmdhostwrite.h"
#endif

#ifdef INCLUDE_GENERATED_CPP_HEADERS
#include "MyApp0.h"
#endif

#ifdef INCLUDE_GENERATED_CPP_HEADERS
#include "Cmdread0.h"
#endif

#ifdef INCLUDE_GENERATED_CPP_HEADERS
#include "Cmdread1.h"
#endif

#ifdef INCLUDE_GENERATED_CPP_HEADERS
#include "Cmdread2.h"
#endif

#ifdef INCLUDE_GENERATED_CPP_HEADERS
#include "Cmdread3.h"
#endif

#ifdef INCLUDE_GENERATED_CPP_HEADERS
#include "Cmdwrite0.h"
#endif

#ifdef INCLUDE_GENERATED_CPP_HEADERS
#include "Cmdwrite1.h"
#endif



#ifdef KERNEL_HOST_CONTROLLED
#define KERNEL_HOST_CONTROLLED_PRESENT 1
KERNEL_HOST_CONTROLLED(Cmdhostread, Cmdhostread)
#endif

#ifdef KERNEL_HOST_CONTROLLED
#define KERNEL_HOST_CONTROLLED_PRESENT 1
KERNEL_HOST_CONTROLLED(Cmdhostwrite, Cmdhostwrite)
#endif

#ifdef KERNEL_HOST_CONTROLLED
#define KERNEL_HOST_CONTROLLED_PRESENT 1
KERNEL_HOST_CONTROLLED(MyApp0, MyApp0)
#endif

#ifdef KERNEL_HOST_CONTROLLED
#define KERNEL_HOST_CONTROLLED_PRESENT 1
KERNEL_HOST_CONTROLLED(Cmdread0, Cmdread0)
#endif

#ifdef KERNEL_HOST_CONTROLLED
#define KERNEL_HOST_CONTROLLED_PRESENT 1
KERNEL_HOST_CONTROLLED(Cmdread1, Cmdread1)
#endif

#ifdef KERNEL_HOST_CONTROLLED
#define KERNEL_HOST_CONTROLLED_PRESENT 1
KERNEL_HOST_CONTROLLED(Cmdread2, Cmdread2)
#endif

#ifdef KERNEL_HOST_CONTROLLED
#define KERNEL_HOST_CONTROLLED_PRESENT 1
KERNEL_HOST_CONTROLLED(Cmdread3, Cmdread3)
#endif

#ifdef KERNEL_HOST_CONTROLLED
#define KERNEL_HOST_CONTROLLED_PRESENT 1
KERNEL_HOST_CONTROLLED(Cmdwrite0, Cmdwrite0)
#endif

#ifdef KERNEL_HOST_CONTROLLED
#define KERNEL_HOST_CONTROLLED_PRESENT 1
KERNEL_HOST_CONTROLLED(Cmdwrite1, Cmdwrite1)
#endif









































































#ifdef KERNEL_CORE
#define KERNEL_CORE_PRESENT 1
KERNEL_CORE(Cmdhostread)
KERNEL_CORE(Cmdhostwrite)
KERNEL_CORE(Cmdread0)
KERNEL_CORE(Cmdread1)
KERNEL_CORE(Cmdread2)
KERNEL_CORE(Cmdread3)
KERNEL_CORE(Cmdwrite0)
KERNEL_CORE(Cmdwrite1)
KERNEL_CORE(MyApp0)
#endif

#ifdef MANAGER_NODE
#define MANAGER_NODE_PRESENT 1
MANAGER_NODE(host2mgr, PCIe_From_Host_fwd)
MANAGER_NODE(mgr2host, PCIe_To_Host_fwd)
MANAGER_NODE(Cmdhostread, Kernel)
MANAGER_NODE(Cmdhostwrite, Kernel)
MANAGER_NODE(cmd_dram2mgr, Memory_Cmd)
MANAGER_NODE(dram2mgr, From_Memory)
MANAGER_NODE(cmd_mgr2dram, Memory_Cmd)
MANAGER_NODE(mgr2dram, To_Memory)
MANAGER_NODE(MyApp0, Kernel)
MANAGER_NODE(Cmdread0, Kernel)
MANAGER_NODE(Cmdread1, Kernel)
MANAGER_NODE(Cmdread2, Kernel)
MANAGER_NODE(Cmdread3, Kernel)
MANAGER_NODE(Cmdwrite0, Kernel)
MANAGER_NODE(Cmdwrite1, Kernel)
MANAGER_NODE(cmd_dram2knl0, Memory_Cmd)
MANAGER_NODE(dram2knl0, From_Memory)
MANAGER_NODE(cmd_dram2knl1, Memory_Cmd)
MANAGER_NODE(dram2knl1, From_Memory)
MANAGER_NODE(cmd_dram2knl2, Memory_Cmd)
MANAGER_NODE(dram2knl2, From_Memory)
MANAGER_NODE(cmd_dram2knl3, Memory_Cmd)
MANAGER_NODE(dram2knl3, From_Memory)
MANAGER_NODE(cmd_knl2dram0, Memory_Cmd)
MANAGER_NODE(knl2dram0, To_Memory)
MANAGER_NODE(cmd_knl2dram1, Memory_Cmd)
MANAGER_NODE(knl2dram1, To_Memory)
MANAGER_NODE(Stream_15, DualAspectReg)
MANAGER_NODE(Stream_3, DualAspectMux)
MANAGER_NODE(Stream_55, DualAspectMux)
MANAGER_NODE(Stream_53, DualAspectMux)
MANAGER_NODE(Stream_54, DualAspectMux)
MANAGER_NODE(Stream_56, DualAspectMux)
MANAGER_NODE(Stream_47, DualAspectReg)
MANAGER_NODE(Stream_52, DualAspectReg)
MANAGER_NODE(Stream_62, StreamPullPushAdapter)
MANAGER_NODE(Stream_86, StreamPullPushAdapter)
MANAGER_NODE(Stream_90, StreamPullPushAdapter)
MANAGER_NODE(Stream_70, Fifo)
MANAGER_NODE(Stream_74, Fifo)
MANAGER_NODE(Stream_78, Fifo)
MANAGER_NODE(Stream_82, Fifo)
MANAGER_NODE(Stream_84, Fifo)
MANAGER_NODE(Stream_88, Fifo)
MANAGER_NODE(STREAMSTATUS_host2mgr_host2mgr, StreamStatus)
MANAGER_NODE(STREAMSTATUS_Cmdhostread_dram_read, StreamStatus)
MANAGER_NODE(STREAMSTATUS_Cmdhostwrite_dram_write, StreamStatus)
MANAGER_NODE(STREAMSTATUS_dram2mgr_dram2mgr, StreamStatus)
MANAGER_NODE(STREAMSTATUS_Cmdread0_dram_read, StreamStatus)
MANAGER_NODE(STREAMSTATUS_Cmdread1_dram_read, StreamStatus)
MANAGER_NODE(STREAMSTATUS_Cmdread2_dram_read, StreamStatus)
MANAGER_NODE(STREAMSTATUS_Cmdread3_dram_read, StreamStatus)
MANAGER_NODE(STREAMSTATUS_Cmdwrite0_dram_write, StreamStatus)
MANAGER_NODE(STREAMSTATUS_Cmdwrite1_dram_write, StreamStatus)
MANAGER_NODE(STREAMSTATUS_dram2knl0_dram2knl0, StreamStatus)
MANAGER_NODE(STREAMSTATUS_dram2knl1_dram2knl1, StreamStatus)
MANAGER_NODE(STREAMSTATUS_dram2knl2_dram2knl2, StreamStatus)
MANAGER_NODE(STREAMSTATUS_dram2knl3_dram2knl3, StreamStatus)
MANAGER_NODE(STREAMSTATUS_Stream_15_output, StreamStatus)
MANAGER_NODE(STREAMSTATUS_Stream_3_output, StreamStatus)
MANAGER_NODE(STREAMSTATUS_Stream_53_output, StreamStatus)
MANAGER_NODE(STREAMSTATUS_Stream_54_output, StreamStatus)
MANAGER_NODE(STREAMSTATUS_Stream_55_output, StreamStatus)
MANAGER_NODE(STREAMSTATUS_Stream_56_output, StreamStatus)
MANAGER_NODE(STREAMSTATUS_Stream_62_output, StreamStatus)
MANAGER_NODE(STREAMSTATUS_Stream_70_output, StreamStatus)
MANAGER_NODE(STREAMSTATUS_Stream_74_output, StreamStatus)
MANAGER_NODE(STREAMSTATUS_Stream_78_output, StreamStatus)
MANAGER_NODE(STREAMSTATUS_Stream_82_output, StreamStatus)
MANAGER_NODE(STREAMSTATUS_MyApp0_pp_out, StreamStatus)
MANAGER_NODE(STREAMSTATUS_MyApp0_p_out, StreamStatus)
MANAGER_NODE(STREAMSTATUS_Stream_84_output, StreamStatus)
MANAGER_NODE(STREAMSTATUS_Stream_88_output, StreamStatus)
MANAGER_NODE(STREAMSTATUS_Stream_47_output, StreamStatus)
MANAGER_NODE(STREAMSTATUS_Stream_52_output, StreamStatus)
MANAGER_NODE(STREAMSTATUS_Stream_86_output, StreamStatus)
MANAGER_NODE(STREAMSTATUS_Stream_90_output, StreamStatus)
#endif

#ifdef MANAGER_NODE_IO
#define MANAGER_NODE_IO_PRESENT 1
MANAGER_NODE_IO(host2mgr, host2mgr, OUT, STREAM, 128, PULL)
MANAGER_NODE_IO(mgr2host, mgr2host, IN, STREAM, 128, PUSH)
MANAGER_NODE_IO(Cmdhostread, dram_read, OUT, STREAM, 64, PUSH)
MANAGER_NODE_IO(Cmdhostwrite, dram_write, OUT, STREAM, 64, PUSH)
MANAGER_NODE_IO(cmd_dram2mgr, cmd_dram2mgr, IN, STREAM, 64, PUSH)
MANAGER_NODE_IO(dram2mgr, dram2mgr, OUT, STREAM, 1536, PULL)
MANAGER_NODE_IO(cmd_mgr2dram, cmd_mgr2dram, IN, STREAM, 64, PUSH)
MANAGER_NODE_IO(mgr2dram, mgr2dram, IN, STREAM, 1536, PUSH)
MANAGER_NODE_IO(MyApp0, dvv, IN, STREAM, 32, PULL)
MANAGER_NODE_IO(MyApp0, p, IN, STREAM, 32, PULL)
MANAGER_NODE_IO(MyApp0, pp, IN, STREAM, 32, PULL)
MANAGER_NODE_IO(MyApp0, source, IN, STREAM, 32, PULL)
MANAGER_NODE_IO(MyApp0, pp_out, OUT, STREAM, 32, PUSH)
MANAGER_NODE_IO(MyApp0, p_out, OUT, STREAM, 32, PUSH)
MANAGER_NODE_IO(Cmdread0, dram_read, OUT, STREAM, 64, PUSH)
MANAGER_NODE_IO(Cmdread1, dram_read, OUT, STREAM, 64, PUSH)
MANAGER_NODE_IO(Cmdread2, dram_read, OUT, STREAM, 64, PUSH)
MANAGER_NODE_IO(Cmdread3, dram_read, OUT, STREAM, 64, PUSH)
MANAGER_NODE_IO(Cmdwrite0, dram_write, OUT, STREAM, 64, PUSH)
MANAGER_NODE_IO(Cmdwrite1, dram_write, OUT, STREAM, 64, PUSH)
MANAGER_NODE_IO(cmd_dram2knl0, cmd_dram2knl0, IN, STREAM, 64, PUSH)
MANAGER_NODE_IO(dram2knl0, dram2knl0, OUT, STREAM, 1536, PULL)
MANAGER_NODE_IO(cmd_dram2knl1, cmd_dram2knl1, IN, STREAM, 64, PUSH)
MANAGER_NODE_IO(dram2knl1, dram2knl1, OUT, STREAM, 1536, PULL)
MANAGER_NODE_IO(cmd_dram2knl2, cmd_dram2knl2, IN, STREAM, 64, PUSH)
MANAGER_NODE_IO(dram2knl2, dram2knl2, OUT, STREAM, 1536, PULL)
MANAGER_NODE_IO(cmd_dram2knl3, cmd_dram2knl3, IN, STREAM, 64, PUSH)
MANAGER_NODE_IO(dram2knl3, dram2knl3, OUT, STREAM, 1536, PULL)
MANAGER_NODE_IO(cmd_knl2dram0, cmd_knl2dram0, IN, STREAM, 64, PUSH)
MANAGER_NODE_IO(knl2dram0, knl2dram0, IN, STREAM, 1536, PUSH)
MANAGER_NODE_IO(cmd_knl2dram1, cmd_knl2dram1, IN, STREAM, 64, PUSH)
MANAGER_NODE_IO(knl2dram1, knl2dram1, IN, STREAM, 1536, PUSH)
MANAGER_NODE_IO(Stream_15, input, IN, STREAM, 128, PULL)
MANAGER_NODE_IO(Stream_15, output, OUT, STREAM, 1536, PULL)
MANAGER_NODE_IO(Stream_3, input, IN, STREAM, 1536, PULL)
MANAGER_NODE_IO(Stream_3, output, OUT, STREAM, 128, PUSH)
MANAGER_NODE_IO(Stream_55, input, IN, STREAM, 1536, PULL)
MANAGER_NODE_IO(Stream_55, output, OUT, STREAM, 32, PUSH)
MANAGER_NODE_IO(Stream_53, input, IN, STREAM, 1536, PULL)
MANAGER_NODE_IO(Stream_53, output, OUT, STREAM, 32, PUSH)
MANAGER_NODE_IO(Stream_54, input, IN, STREAM, 1536, PULL)
MANAGER_NODE_IO(Stream_54, output, OUT, STREAM, 32, PUSH)
MANAGER_NODE_IO(Stream_56, input, IN, STREAM, 1536, PULL)
MANAGER_NODE_IO(Stream_56, output, OUT, STREAM, 32, PUSH)
MANAGER_NODE_IO(Stream_47, input, IN, STREAM, 32, PULL)
MANAGER_NODE_IO(Stream_47, output, OUT, STREAM, 1536, PULL)
MANAGER_NODE_IO(Stream_52, input, IN, STREAM, 32, PULL)
MANAGER_NODE_IO(Stream_52, output, OUT, STREAM, 1536, PULL)
MANAGER_NODE_IO(Stream_62, input, IN, STREAM, 1536, PULL)
MANAGER_NODE_IO(Stream_62, output, OUT, STREAM, 1536, PUSH)
MANAGER_NODE_IO(Stream_86, input, IN, STREAM, 1536, PULL)
MANAGER_NODE_IO(Stream_86, output, OUT, STREAM, 1536, PUSH)
MANAGER_NODE_IO(Stream_90, input, IN, STREAM, 1536, PULL)
MANAGER_NODE_IO(Stream_90, output, OUT, STREAM, 1536, PUSH)
MANAGER_NODE_IO(Stream_70, input, IN, STREAM, 32, PUSH)
MANAGER_NODE_IO(Stream_70, output, OUT, STREAM, 32, PULL)
MANAGER_NODE_IO(Stream_74, input, IN, STREAM, 32, PUSH)
MANAGER_NODE_IO(Stream_74, output, OUT, STREAM, 32, PULL)
MANAGER_NODE_IO(Stream_78, input, IN, STREAM, 32, PUSH)
MANAGER_NODE_IO(Stream_78, output, OUT, STREAM, 32, PULL)
MANAGER_NODE_IO(Stream_82, input, IN, STREAM, 32, PUSH)
MANAGER_NODE_IO(Stream_82, output, OUT, STREAM, 32, PULL)
MANAGER_NODE_IO(Stream_84, input, IN, STREAM, 32, PUSH)
MANAGER_NODE_IO(Stream_84, output, OUT, STREAM, 32, PULL)
MANAGER_NODE_IO(Stream_88, input, IN, STREAM, 32, PUSH)
MANAGER_NODE_IO(Stream_88, output, OUT, STREAM, 32, PULL)
MANAGER_NODE_IO(STREAMSTATUS_host2mgr_host2mgr, input, IN, STREAM, 128, PULL)
MANAGER_NODE_IO(STREAMSTATUS_host2mgr_host2mgr, output, OUT, STREAM, 128, PULL)
MANAGER_NODE_IO(STREAMSTATUS_Cmdhostread_dram_read, input, IN, STREAM, 64, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_Cmdhostread_dram_read, output, OUT, STREAM, 64, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_Cmdhostwrite_dram_write, input, IN, STREAM, 64, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_Cmdhostwrite_dram_write, output, OUT, STREAM, 64, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_dram2mgr_dram2mgr, input, IN, STREAM, 1536, PULL)
MANAGER_NODE_IO(STREAMSTATUS_dram2mgr_dram2mgr, output, OUT, STREAM, 1536, PULL)
MANAGER_NODE_IO(STREAMSTATUS_Cmdread0_dram_read, input, IN, STREAM, 64, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_Cmdread0_dram_read, output, OUT, STREAM, 64, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_Cmdread1_dram_read, input, IN, STREAM, 64, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_Cmdread1_dram_read, output, OUT, STREAM, 64, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_Cmdread2_dram_read, input, IN, STREAM, 64, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_Cmdread2_dram_read, output, OUT, STREAM, 64, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_Cmdread3_dram_read, input, IN, STREAM, 64, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_Cmdread3_dram_read, output, OUT, STREAM, 64, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_Cmdwrite0_dram_write, input, IN, STREAM, 64, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_Cmdwrite0_dram_write, output, OUT, STREAM, 64, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_Cmdwrite1_dram_write, input, IN, STREAM, 64, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_Cmdwrite1_dram_write, output, OUT, STREAM, 64, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_dram2knl0_dram2knl0, input, IN, STREAM, 1536, PULL)
MANAGER_NODE_IO(STREAMSTATUS_dram2knl0_dram2knl0, output, OUT, STREAM, 1536, PULL)
MANAGER_NODE_IO(STREAMSTATUS_dram2knl1_dram2knl1, input, IN, STREAM, 1536, PULL)
MANAGER_NODE_IO(STREAMSTATUS_dram2knl1_dram2knl1, output, OUT, STREAM, 1536, PULL)
MANAGER_NODE_IO(STREAMSTATUS_dram2knl2_dram2knl2, input, IN, STREAM, 1536, PULL)
MANAGER_NODE_IO(STREAMSTATUS_dram2knl2_dram2knl2, output, OUT, STREAM, 1536, PULL)
MANAGER_NODE_IO(STREAMSTATUS_dram2knl3_dram2knl3, input, IN, STREAM, 1536, PULL)
MANAGER_NODE_IO(STREAMSTATUS_dram2knl3_dram2knl3, output, OUT, STREAM, 1536, PULL)
MANAGER_NODE_IO(STREAMSTATUS_Stream_15_output, input, IN, STREAM, 1536, PULL)
MANAGER_NODE_IO(STREAMSTATUS_Stream_15_output, output, OUT, STREAM, 1536, PULL)
MANAGER_NODE_IO(STREAMSTATUS_Stream_3_output, input, IN, STREAM, 128, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_Stream_3_output, output, OUT, STREAM, 128, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_Stream_53_output, input, IN, STREAM, 32, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_Stream_53_output, output, OUT, STREAM, 32, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_Stream_54_output, input, IN, STREAM, 32, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_Stream_54_output, output, OUT, STREAM, 32, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_Stream_55_output, input, IN, STREAM, 32, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_Stream_55_output, output, OUT, STREAM, 32, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_Stream_56_output, input, IN, STREAM, 32, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_Stream_56_output, output, OUT, STREAM, 32, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_Stream_62_output, input, IN, STREAM, 1536, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_Stream_62_output, output, OUT, STREAM, 1536, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_Stream_70_output, input, IN, STREAM, 32, PULL)
MANAGER_NODE_IO(STREAMSTATUS_Stream_70_output, output, OUT, STREAM, 32, PULL)
MANAGER_NODE_IO(STREAMSTATUS_Stream_74_output, input, IN, STREAM, 32, PULL)
MANAGER_NODE_IO(STREAMSTATUS_Stream_74_output, output, OUT, STREAM, 32, PULL)
MANAGER_NODE_IO(STREAMSTATUS_Stream_78_output, input, IN, STREAM, 32, PULL)
MANAGER_NODE_IO(STREAMSTATUS_Stream_78_output, output, OUT, STREAM, 32, PULL)
MANAGER_NODE_IO(STREAMSTATUS_Stream_82_output, input, IN, STREAM, 32, PULL)
MANAGER_NODE_IO(STREAMSTATUS_Stream_82_output, output, OUT, STREAM, 32, PULL)
MANAGER_NODE_IO(STREAMSTATUS_MyApp0_pp_out, input, IN, STREAM, 32, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_MyApp0_pp_out, output, OUT, STREAM, 32, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_MyApp0_p_out, input, IN, STREAM, 32, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_MyApp0_p_out, output, OUT, STREAM, 32, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_Stream_84_output, input, IN, STREAM, 32, PULL)
MANAGER_NODE_IO(STREAMSTATUS_Stream_84_output, output, OUT, STREAM, 32, PULL)
MANAGER_NODE_IO(STREAMSTATUS_Stream_88_output, input, IN, STREAM, 32, PULL)
MANAGER_NODE_IO(STREAMSTATUS_Stream_88_output, output, OUT, STREAM, 32, PULL)
MANAGER_NODE_IO(STREAMSTATUS_Stream_47_output, input, IN, STREAM, 1536, PULL)
MANAGER_NODE_IO(STREAMSTATUS_Stream_47_output, output, OUT, STREAM, 1536, PULL)
MANAGER_NODE_IO(STREAMSTATUS_Stream_52_output, input, IN, STREAM, 1536, PULL)
MANAGER_NODE_IO(STREAMSTATUS_Stream_52_output, output, OUT, STREAM, 1536, PULL)
MANAGER_NODE_IO(STREAMSTATUS_Stream_86_output, input, IN, STREAM, 1536, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_Stream_86_output, output, OUT, STREAM, 1536, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_Stream_90_output, input, IN, STREAM, 1536, PUSH)
MANAGER_NODE_IO(STREAMSTATUS_Stream_90_output, output, OUT, STREAM, 1536, PUSH)
#endif

#ifdef MANAGER_STREAM
#define MANAGER_STREAM_PRESENT 1
MANAGER_STREAM(host2mgr, host2mgr, STREAMSTATUS_host2mgr_host2mgr, input, 128)
MANAGER_STREAM(Cmdhostread, dram_read, STREAMSTATUS_Cmdhostread_dram_read, input, 64)
MANAGER_STREAM(dram2mgr, dram2mgr, STREAMSTATUS_dram2mgr_dram2mgr, input, 1536)
MANAGER_STREAM(Cmdhostwrite, dram_write, STREAMSTATUS_Cmdhostwrite_dram_write, input, 64)
MANAGER_STREAM(Cmdread0, dram_read, STREAMSTATUS_Cmdread0_dram_read, input, 64)
MANAGER_STREAM(dram2knl0, dram2knl0, STREAMSTATUS_dram2knl0_dram2knl0, input, 1536)
MANAGER_STREAM(Cmdread1, dram_read, STREAMSTATUS_Cmdread1_dram_read, input, 64)
MANAGER_STREAM(dram2knl1, dram2knl1, STREAMSTATUS_dram2knl1_dram2knl1, input, 1536)
MANAGER_STREAM(Cmdread2, dram_read, STREAMSTATUS_Cmdread2_dram_read, input, 64)
MANAGER_STREAM(dram2knl2, dram2knl2, STREAMSTATUS_dram2knl2_dram2knl2, input, 1536)
MANAGER_STREAM(Cmdread3, dram_read, STREAMSTATUS_Cmdread3_dram_read, input, 64)
MANAGER_STREAM(dram2knl3, dram2knl3, STREAMSTATUS_dram2knl3_dram2knl3, input, 1536)
MANAGER_STREAM(Cmdwrite0, dram_write, STREAMSTATUS_Cmdwrite0_dram_write, input, 64)
MANAGER_STREAM(Cmdwrite1, dram_write, STREAMSTATUS_Cmdwrite1_dram_write, input, 64)
MANAGER_STREAM(MyApp0, pp_out, STREAMSTATUS_MyApp0_pp_out, input, 32)
MANAGER_STREAM(MyApp0, p_out, STREAMSTATUS_MyApp0_p_out, input, 32)
MANAGER_STREAM(Stream_15, output, STREAMSTATUS_Stream_15_output, input, 1536)
MANAGER_STREAM(Stream_3, output, STREAMSTATUS_Stream_3_output, input, 128)
MANAGER_STREAM(Stream_55, output, STREAMSTATUS_Stream_55_output, input, 32)
MANAGER_STREAM(Stream_53, output, STREAMSTATUS_Stream_53_output, input, 32)
MANAGER_STREAM(Stream_54, output, STREAMSTATUS_Stream_54_output, input, 32)
MANAGER_STREAM(Stream_56, output, STREAMSTATUS_Stream_56_output, input, 32)
MANAGER_STREAM(Stream_47, output, STREAMSTATUS_Stream_47_output, input, 1536)
MANAGER_STREAM(Stream_52, output, STREAMSTATUS_Stream_52_output, input, 1536)
MANAGER_STREAM(Stream_62, output, STREAMSTATUS_Stream_62_output, input, 1536)
MANAGER_STREAM(Stream_86, output, STREAMSTATUS_Stream_86_output, input, 1536)
MANAGER_STREAM(Stream_90, output, STREAMSTATUS_Stream_90_output, input, 1536)
MANAGER_STREAM(Stream_70, output, STREAMSTATUS_Stream_70_output, input, 32)
MANAGER_STREAM(Stream_74, output, STREAMSTATUS_Stream_74_output, input, 32)
MANAGER_STREAM(Stream_78, output, STREAMSTATUS_Stream_78_output, input, 32)
MANAGER_STREAM(Stream_82, output, STREAMSTATUS_Stream_82_output, input, 32)
MANAGER_STREAM(Stream_84, output, STREAMSTATUS_Stream_84_output, input, 32)
MANAGER_STREAM(Stream_88, output, STREAMSTATUS_Stream_88_output, input, 32)
MANAGER_STREAM(STREAMSTATUS_host2mgr_host2mgr, output, Stream_15, input, 128)
MANAGER_STREAM(STREAMSTATUS_Cmdhostread_dram_read, output, cmd_dram2mgr, cmd_dram2mgr, 64)
MANAGER_STREAM(STREAMSTATUS_Cmdhostwrite_dram_write, output, cmd_mgr2dram, cmd_mgr2dram, 64)
MANAGER_STREAM(STREAMSTATUS_dram2mgr_dram2mgr, output, Stream_3, input, 1536)
MANAGER_STREAM(STREAMSTATUS_Cmdread0_dram_read, output, cmd_dram2knl0, cmd_dram2knl0, 64)
MANAGER_STREAM(STREAMSTATUS_Cmdread1_dram_read, output, cmd_dram2knl1, cmd_dram2knl1, 64)
MANAGER_STREAM(STREAMSTATUS_Cmdread2_dram_read, output, cmd_dram2knl2, cmd_dram2knl2, 64)
MANAGER_STREAM(STREAMSTATUS_Cmdread3_dram_read, output, cmd_dram2knl3, cmd_dram2knl3, 64)
MANAGER_STREAM(STREAMSTATUS_Cmdwrite0_dram_write, output, cmd_knl2dram0, cmd_knl2dram0, 64)
MANAGER_STREAM(STREAMSTATUS_Cmdwrite1_dram_write, output, cmd_knl2dram1, cmd_knl2dram1, 64)
MANAGER_STREAM(STREAMSTATUS_dram2knl0_dram2knl0, output, Stream_53, input, 1536)
MANAGER_STREAM(STREAMSTATUS_dram2knl1_dram2knl1, output, Stream_54, input, 1536)
MANAGER_STREAM(STREAMSTATUS_dram2knl2_dram2knl2, output, Stream_55, input, 1536)
MANAGER_STREAM(STREAMSTATUS_dram2knl3_dram2knl3, output, Stream_56, input, 1536)
MANAGER_STREAM(STREAMSTATUS_Stream_15_output, output, Stream_62, input, 1536)
MANAGER_STREAM(STREAMSTATUS_Stream_3_output, output, mgr2host, mgr2host, 128)
MANAGER_STREAM(STREAMSTATUS_Stream_53_output, output, Stream_74, input, 32)
MANAGER_STREAM(STREAMSTATUS_Stream_54_output, output, Stream_78, input, 32)
MANAGER_STREAM(STREAMSTATUS_Stream_55_output, output, Stream_70, input, 32)
MANAGER_STREAM(STREAMSTATUS_Stream_56_output, output, Stream_82, input, 32)
MANAGER_STREAM(STREAMSTATUS_Stream_62_output, output, mgr2dram, mgr2dram, 1536)
MANAGER_STREAM(STREAMSTATUS_Stream_70_output, output, MyApp0, dvv, 32)
MANAGER_STREAM(STREAMSTATUS_Stream_74_output, output, MyApp0, p, 32)
MANAGER_STREAM(STREAMSTATUS_Stream_78_output, output, MyApp0, pp, 32)
MANAGER_STREAM(STREAMSTATUS_Stream_82_output, output, MyApp0, source, 32)
MANAGER_STREAM(STREAMSTATUS_MyApp0_pp_out, output, Stream_84, input, 32)
MANAGER_STREAM(STREAMSTATUS_MyApp0_p_out, output, Stream_88, input, 32)
MANAGER_STREAM(STREAMSTATUS_Stream_84_output, output, Stream_47, input, 32)
MANAGER_STREAM(STREAMSTATUS_Stream_88_output, output, Stream_52, input, 32)
MANAGER_STREAM(STREAMSTATUS_Stream_47_output, output, Stream_86, input, 1536)
MANAGER_STREAM(STREAMSTATUS_Stream_52_output, output, Stream_90, input, 1536)
MANAGER_STREAM(STREAMSTATUS_Stream_86_output, output, knl2dram0, knl2dram0, 1536)
MANAGER_STREAM(STREAMSTATUS_Stream_90_output, output, knl2dram1, knl2dram1, 1536)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(Cmdhostread, control_pipelining_depth, 2)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(Cmdhostwrite, control_pipelining_depth, 2)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(MyApp0, control_pipelining_depth, 2)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(Cmdread0, control_pipelining_depth, 2)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(Cmdread1, control_pipelining_depth, 2)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(Cmdread2, control_pipelining_depth, 2)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(Cmdread3, control_pipelining_depth, 2)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(Cmdwrite0, control_pipelining_depth, 2)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(Cmdwrite1, control_pipelining_depth, 2)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(STREAMSTATUS_host2mgr_host2mgr, chunks, 1)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(STREAMSTATUS_Cmdhostread_dram_read, chunks, 1)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(STREAMSTATUS_Cmdhostwrite_dram_write, chunks, 1)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(STREAMSTATUS_dram2mgr_dram2mgr, chunks, 1)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(STREAMSTATUS_Cmdread0_dram_read, chunks, 1)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(STREAMSTATUS_Cmdread1_dram_read, chunks, 1)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(STREAMSTATUS_Cmdread2_dram_read, chunks, 1)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(STREAMSTATUS_Cmdread3_dram_read, chunks, 1)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(STREAMSTATUS_Cmdwrite0_dram_write, chunks, 1)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(STREAMSTATUS_Cmdwrite1_dram_write, chunks, 1)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(STREAMSTATUS_dram2knl0_dram2knl0, chunks, 1)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(STREAMSTATUS_dram2knl1_dram2knl1, chunks, 1)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(STREAMSTATUS_dram2knl2_dram2knl2, chunks, 1)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(STREAMSTATUS_dram2knl3_dram2knl3, chunks, 1)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(STREAMSTATUS_Stream_15_output, chunks, 1)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(STREAMSTATUS_Stream_3_output, chunks, 1)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(STREAMSTATUS_Stream_53_output, chunks, 1)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(STREAMSTATUS_Stream_54_output, chunks, 1)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(STREAMSTATUS_Stream_55_output, chunks, 1)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(STREAMSTATUS_Stream_56_output, chunks, 1)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(STREAMSTATUS_Stream_62_output, chunks, 1)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(STREAMSTATUS_Stream_70_output, chunks, 1)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(STREAMSTATUS_Stream_74_output, chunks, 1)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(STREAMSTATUS_Stream_78_output, chunks, 1)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(STREAMSTATUS_Stream_82_output, chunks, 1)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(STREAMSTATUS_MyApp0_pp_out, chunks, 1)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(STREAMSTATUS_MyApp0_p_out, chunks, 1)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(STREAMSTATUS_Stream_84_output, chunks, 1)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(STREAMSTATUS_Stream_88_output, chunks, 1)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(STREAMSTATUS_Stream_47_output, chunks, 1)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(STREAMSTATUS_Stream_52_output, chunks, 1)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(STREAMSTATUS_Stream_86_output, chunks, 1)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(STREAMSTATUS_Stream_90_output, chunks, 1)
#endif

#ifdef MANAGER_NODE_CPP_SIM_MODEL_CTOR
#define MANAGER_NODE_CPP_SIM_MODEL_CTOR_PRESENT 1
MANAGER_NODE_CPP_SIM_MODEL_CTOR(host2mgr, PCIePullSourceSyncMax3, "host2mgr")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Cmdhostread, Cmdhostread, "Cmdhostread")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Cmdhostwrite, Cmdhostwrite, "Cmdhostwrite")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Cmdread0, Cmdread0, "Cmdread0")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Cmdread1, Cmdread1, "Cmdread1")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Cmdread2, Cmdread2, "Cmdread2")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Cmdread3, Cmdread3, "Cmdread3")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Cmdwrite0, Cmdwrite0, "Cmdwrite0")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Cmdwrite1, Cmdwrite1, "Cmdwrite1")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(STREAMSTATUS_host2mgr_host2mgr, PullStreamStatusSync, "STREAMSTATUS_host2mgr_host2mgr", 1, 128)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(STREAMSTATUS_Cmdhostread_dram_read, PushStreamStatusSync, "STREAMSTATUS_Cmdhostread_dram_read", 5, 64)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(STREAMSTATUS_Cmdhostwrite_dram_write, PushStreamStatusSync, "STREAMSTATUS_Cmdhostwrite_dram_write", 5, 64)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(STREAMSTATUS_dram2mgr_dram2mgr, PullStreamStatusSync, "STREAMSTATUS_dram2mgr_dram2mgr", 1, 1536)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(STREAMSTATUS_Cmdread0_dram_read, PushStreamStatusSync, "STREAMSTATUS_Cmdread0_dram_read", 5, 64)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(STREAMSTATUS_Cmdread1_dram_read, PushStreamStatusSync, "STREAMSTATUS_Cmdread1_dram_read", 5, 64)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(STREAMSTATUS_Cmdread2_dram_read, PushStreamStatusSync, "STREAMSTATUS_Cmdread2_dram_read", 5, 64)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(STREAMSTATUS_Cmdread3_dram_read, PushStreamStatusSync, "STREAMSTATUS_Cmdread3_dram_read", 5, 64)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(STREAMSTATUS_Cmdwrite0_dram_write, PushStreamStatusSync, "STREAMSTATUS_Cmdwrite0_dram_write", 5, 64)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(STREAMSTATUS_Cmdwrite1_dram_write, PushStreamStatusSync, "STREAMSTATUS_Cmdwrite1_dram_write", 5, 64)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(STREAMSTATUS_dram2knl0_dram2knl0, PullStreamStatusSync, "STREAMSTATUS_dram2knl0_dram2knl0", 1, 1536)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(STREAMSTATUS_dram2knl1_dram2knl1, PullStreamStatusSync, "STREAMSTATUS_dram2knl1_dram2knl1", 1, 1536)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(STREAMSTATUS_dram2knl2_dram2knl2, PullStreamStatusSync, "STREAMSTATUS_dram2knl2_dram2knl2", 1, 1536)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(STREAMSTATUS_dram2knl3_dram2knl3, PullStreamStatusSync, "STREAMSTATUS_dram2knl3_dram2knl3", 1, 1536)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_15, DualAspectRegSync, "Stream_15", 128, 12)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_3, DualAspectMuxSync, "Stream_3", 128, 12)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_53, DualAspectMuxSync, "Stream_53", 32, 48)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_54, DualAspectMuxSync, "Stream_54", 32, 48)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_55, DualAspectMuxSync, "Stream_55", 32, 48)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_56, DualAspectMuxSync, "Stream_56", 32, 48)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(STREAMSTATUS_Stream_15_output, PullStreamStatusSync, "STREAMSTATUS_Stream_15_output", 1, 1536)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(STREAMSTATUS_Stream_3_output, PushStreamStatusSync, "STREAMSTATUS_Stream_3_output", 2, 128)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(STREAMSTATUS_Stream_53_output, PushStreamStatusSync, "STREAMSTATUS_Stream_53_output", 2, 32)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(STREAMSTATUS_Stream_54_output, PushStreamStatusSync, "STREAMSTATUS_Stream_54_output", 2, 32)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(STREAMSTATUS_Stream_55_output, PushStreamStatusSync, "STREAMSTATUS_Stream_55_output", 2, 32)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(STREAMSTATUS_Stream_56_output, PushStreamStatusSync, "STREAMSTATUS_Stream_56_output", 2, 32)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_62, PullToPushAdapterSync, "Stream_62")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(mgr2host, PCIePushSinkSyncMax3, "mgr2host")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_74, FifoPushToPullSync, "Stream_74", false, 512, 32)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_78, FifoPushToPullSync, "Stream_78", false, 512, 32)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_70, FifoPushToPullSync, "Stream_70", false, 512, 32)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_82, FifoPushToPullSync, "Stream_82", false, 512, 32)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(STREAMSTATUS_Stream_62_output, PushStreamStatusSync, "STREAMSTATUS_Stream_62_output", 1, 1536)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(STREAMSTATUS_Stream_74_output, PullStreamStatusSync, "STREAMSTATUS_Stream_74_output", 1, 32)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(STREAMSTATUS_Stream_78_output, PullStreamStatusSync, "STREAMSTATUS_Stream_78_output", 1, 32)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(STREAMSTATUS_Stream_70_output, PullStreamStatusSync, "STREAMSTATUS_Stream_70_output", 1, 32)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(STREAMSTATUS_Stream_82_output, PullStreamStatusSync, "STREAMSTATUS_Stream_82_output", 1, 32)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(MyApp0, MyApp0, "MyApp0")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(STREAMSTATUS_MyApp0_pp_out, PushStreamStatusSync, "STREAMSTATUS_MyApp0_pp_out", 5, 32)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(STREAMSTATUS_MyApp0_p_out, PushStreamStatusSync, "STREAMSTATUS_MyApp0_p_out", 5, 32)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_84, FifoPushToPullSync, "Stream_84", false, 512, 32)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_88, FifoPushToPullSync, "Stream_88", false, 512, 32)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(STREAMSTATUS_Stream_84_output, PullStreamStatusSync, "STREAMSTATUS_Stream_84_output", 1, 32)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(STREAMSTATUS_Stream_88_output, PullStreamStatusSync, "STREAMSTATUS_Stream_88_output", 1, 32)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_47, DualAspectRegSync, "Stream_47", 32, 48)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_52, DualAspectRegSync, "Stream_52", 32, 48)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(STREAMSTATUS_Stream_47_output, PullStreamStatusSync, "STREAMSTATUS_Stream_47_output", 1, 1536)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(STREAMSTATUS_Stream_52_output, PullStreamStatusSync, "STREAMSTATUS_Stream_52_output", 1, 1536)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_86, PullToPushAdapterSync, "Stream_86")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_90, PullToPushAdapterSync, "Stream_90")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(STREAMSTATUS_Stream_86_output, PushStreamStatusSync, "STREAMSTATUS_Stream_86_output", 1, 1536)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(STREAMSTATUS_Stream_90_output, PushStreamStatusSync, "STREAMSTATUS_Stream_90_output", 1, 1536)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(dram2mgr, MemoryProxyPullSourceSync, "dram2mgr")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(cmd_dram2mgr, MemoryProxyCommandSinkSync, "cmd_dram2mgr")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(cmd_mgr2dram, MemoryProxyCommandSinkSync, "cmd_mgr2dram")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(dram2knl0, MemoryProxyPullSourceSync, "dram2knl0")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(cmd_dram2knl0, MemoryProxyCommandSinkSync, "cmd_dram2knl0")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(dram2knl1, MemoryProxyPullSourceSync, "dram2knl1")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(cmd_dram2knl1, MemoryProxyCommandSinkSync, "cmd_dram2knl1")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(dram2knl2, MemoryProxyPullSourceSync, "dram2knl2")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(cmd_dram2knl2, MemoryProxyCommandSinkSync, "cmd_dram2knl2")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(dram2knl3, MemoryProxyPullSourceSync, "dram2knl3")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(cmd_dram2knl3, MemoryProxyCommandSinkSync, "cmd_dram2knl3")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(cmd_knl2dram0, MemoryProxyCommandSinkSync, "cmd_knl2dram0")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(cmd_knl2dram1, MemoryProxyCommandSinkSync, "cmd_knl2dram1")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(mgr2dram, MemoryProxyPushSinkSync, "mgr2dram")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(knl2dram0, MemoryProxyPushSinkSync, "knl2dram0")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(knl2dram1, MemoryProxyPushSinkSync, "knl2dram1")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(MemoryControllerPro, MemoryControllerPro, "MemoryControllerPro", MemoryControllerConfig::getMax3Config(8,0,0,0,31), true)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(CapabilityReg, CapRegs, "CapabilityReg", 0, 1, 1, 0, 0, 0, 0, 0, 3367)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(ifpga, IFPGARegs)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(sfa, SFARegs)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(ChecksumMemory, ChecksumMem, "ChecksumMemory", "54981dcbd06f2f81d749bef5c3ff6da8badf69248eef1d7f3d0d3d253ff0fa62")
#endif

#ifdef MANAGER_NODE_CPP_SIM_MODEL_SETUP
#define MANAGER_NODE_CPP_SIM_MODEL_SETUP_PRESENT 1
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdhostread, addDebugRegister, reg_dbg_ctld_almost_empty, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdhostread, addDebugRegister, reg_dbg_ctld_done, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdhostread, addDebugRegister, reg_dbg_ctld_empty, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdhostread, addDebugRegister, reg_dbg_ctld_read, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdhostread, addDebugRegister, reg_dbg_ctld_read_pipe_dbg, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdhostread, addDebugRegister, reg_dbg_ctld_request, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdhostread, addDebugRegister, reg_dbg_done_out, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdhostread, addDebugRegister, reg_dbg_fill_level, 3, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdhostread, addDebugRegister, reg_dbg_flush_level, 3, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdhostread, addDebugRegister, reg_dbg_flush_start, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdhostread, addDebugRegister, reg_dbg_flush_start_level, 3, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdhostread, addDebugRegister, reg_dbg_flushing, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdhostread, addDebugRegister, reg_dbg_full_level, 3, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdhostread, addDebugRegister, reg_dbg_out_stall, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdhostread, addDebugRegister, reg_dbg_out_valid, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdhostread, addDebugRegister, reg_dbg_stall_vector, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdhostwrite, addDebugRegister, reg_dbg_ctld_almost_empty, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdhostwrite, addDebugRegister, reg_dbg_ctld_done, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdhostwrite, addDebugRegister, reg_dbg_ctld_empty, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdhostwrite, addDebugRegister, reg_dbg_ctld_read, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdhostwrite, addDebugRegister, reg_dbg_ctld_read_pipe_dbg, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdhostwrite, addDebugRegister, reg_dbg_ctld_request, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdhostwrite, addDebugRegister, reg_dbg_done_out, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdhostwrite, addDebugRegister, reg_dbg_fill_level, 3, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdhostwrite, addDebugRegister, reg_dbg_flush_level, 3, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdhostwrite, addDebugRegister, reg_dbg_flush_start, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdhostwrite, addDebugRegister, reg_dbg_flush_start_level, 3, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdhostwrite, addDebugRegister, reg_dbg_flushing, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdhostwrite, addDebugRegister, reg_dbg_full_level, 3, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdhostwrite, addDebugRegister, reg_dbg_out_stall, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdhostwrite, addDebugRegister, reg_dbg_out_valid, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdhostwrite, addDebugRegister, reg_dbg_stall_vector, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread0, addDebugRegister, reg_dbg_ctld_almost_empty, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread0, addDebugRegister, reg_dbg_ctld_done, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread0, addDebugRegister, reg_dbg_ctld_empty, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread0, addDebugRegister, reg_dbg_ctld_read, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread0, addDebugRegister, reg_dbg_ctld_read_pipe_dbg, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread0, addDebugRegister, reg_dbg_ctld_request, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread0, addDebugRegister, reg_dbg_done_out, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread0, addDebugRegister, reg_dbg_fill_level, 3, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread0, addDebugRegister, reg_dbg_flush_level, 3, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread0, addDebugRegister, reg_dbg_flush_start, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread0, addDebugRegister, reg_dbg_flush_start_level, 3, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread0, addDebugRegister, reg_dbg_flushing, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread0, addDebugRegister, reg_dbg_full_level, 3, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread0, addDebugRegister, reg_dbg_out_stall, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread0, addDebugRegister, reg_dbg_out_valid, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread0, addDebugRegister, reg_dbg_stall_vector, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread1, addDebugRegister, reg_dbg_ctld_almost_empty, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread1, addDebugRegister, reg_dbg_ctld_done, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread1, addDebugRegister, reg_dbg_ctld_empty, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread1, addDebugRegister, reg_dbg_ctld_read, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread1, addDebugRegister, reg_dbg_ctld_read_pipe_dbg, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread1, addDebugRegister, reg_dbg_ctld_request, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread1, addDebugRegister, reg_dbg_done_out, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread1, addDebugRegister, reg_dbg_fill_level, 3, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread1, addDebugRegister, reg_dbg_flush_level, 3, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread1, addDebugRegister, reg_dbg_flush_start, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread1, addDebugRegister, reg_dbg_flush_start_level, 3, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread1, addDebugRegister, reg_dbg_flushing, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread1, addDebugRegister, reg_dbg_full_level, 3, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread1, addDebugRegister, reg_dbg_out_stall, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread1, addDebugRegister, reg_dbg_out_valid, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread1, addDebugRegister, reg_dbg_stall_vector, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread2, addDebugRegister, reg_dbg_ctld_almost_empty, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread2, addDebugRegister, reg_dbg_ctld_done, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread2, addDebugRegister, reg_dbg_ctld_empty, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread2, addDebugRegister, reg_dbg_ctld_read, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread2, addDebugRegister, reg_dbg_ctld_read_pipe_dbg, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread2, addDebugRegister, reg_dbg_ctld_request, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread2, addDebugRegister, reg_dbg_done_out, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread2, addDebugRegister, reg_dbg_fill_level, 3, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread2, addDebugRegister, reg_dbg_flush_level, 3, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread2, addDebugRegister, reg_dbg_flush_start, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread2, addDebugRegister, reg_dbg_flush_start_level, 3, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread2, addDebugRegister, reg_dbg_flushing, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread2, addDebugRegister, reg_dbg_full_level, 3, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread2, addDebugRegister, reg_dbg_out_stall, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread2, addDebugRegister, reg_dbg_out_valid, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread2, addDebugRegister, reg_dbg_stall_vector, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread3, addDebugRegister, reg_dbg_ctld_almost_empty, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread3, addDebugRegister, reg_dbg_ctld_done, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread3, addDebugRegister, reg_dbg_ctld_empty, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread3, addDebugRegister, reg_dbg_ctld_read, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread3, addDebugRegister, reg_dbg_ctld_read_pipe_dbg, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread3, addDebugRegister, reg_dbg_ctld_request, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread3, addDebugRegister, reg_dbg_done_out, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread3, addDebugRegister, reg_dbg_fill_level, 3, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread3, addDebugRegister, reg_dbg_flush_level, 3, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread3, addDebugRegister, reg_dbg_flush_start, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread3, addDebugRegister, reg_dbg_flush_start_level, 3, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread3, addDebugRegister, reg_dbg_flushing, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread3, addDebugRegister, reg_dbg_full_level, 3, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread3, addDebugRegister, reg_dbg_out_stall, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread3, addDebugRegister, reg_dbg_out_valid, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdread3, addDebugRegister, reg_dbg_stall_vector, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdwrite0, addDebugRegister, reg_dbg_ctld_almost_empty, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdwrite0, addDebugRegister, reg_dbg_ctld_done, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdwrite0, addDebugRegister, reg_dbg_ctld_empty, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdwrite0, addDebugRegister, reg_dbg_ctld_read, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdwrite0, addDebugRegister, reg_dbg_ctld_read_pipe_dbg, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdwrite0, addDebugRegister, reg_dbg_ctld_request, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdwrite0, addDebugRegister, reg_dbg_done_out, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdwrite0, addDebugRegister, reg_dbg_fill_level, 3, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdwrite0, addDebugRegister, reg_dbg_flush_level, 3, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdwrite0, addDebugRegister, reg_dbg_flush_start, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdwrite0, addDebugRegister, reg_dbg_flush_start_level, 3, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdwrite0, addDebugRegister, reg_dbg_flushing, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdwrite0, addDebugRegister, reg_dbg_full_level, 3, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdwrite0, addDebugRegister, reg_dbg_out_stall, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdwrite0, addDebugRegister, reg_dbg_out_valid, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdwrite0, addDebugRegister, reg_dbg_stall_vector, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdwrite1, addDebugRegister, reg_dbg_ctld_almost_empty, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdwrite1, addDebugRegister, reg_dbg_ctld_done, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdwrite1, addDebugRegister, reg_dbg_ctld_empty, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdwrite1, addDebugRegister, reg_dbg_ctld_read, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdwrite1, addDebugRegister, reg_dbg_ctld_read_pipe_dbg, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdwrite1, addDebugRegister, reg_dbg_ctld_request, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdwrite1, addDebugRegister, reg_dbg_done_out, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdwrite1, addDebugRegister, reg_dbg_fill_level, 3, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdwrite1, addDebugRegister, reg_dbg_flush_level, 3, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdwrite1, addDebugRegister, reg_dbg_flush_start, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdwrite1, addDebugRegister, reg_dbg_flush_start_level, 3, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdwrite1, addDebugRegister, reg_dbg_flushing, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdwrite1, addDebugRegister, reg_dbg_full_level, 3, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdwrite1, addDebugRegister, reg_dbg_out_stall, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdwrite1, addDebugRegister, reg_dbg_out_valid, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(Cmdwrite1, addDebugRegister, reg_dbg_stall_vector, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(MyApp0, addDebugRegister, reg_dbg_ctld_almost_empty, 4, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(MyApp0, addDebugRegister, reg_dbg_ctld_done, 4, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(MyApp0, addDebugRegister, reg_dbg_ctld_empty, 4, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(MyApp0, addDebugRegister, reg_dbg_ctld_read, 4, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(MyApp0, addDebugRegister, reg_dbg_ctld_read_pipe_dbg, 12, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(MyApp0, addDebugRegister, reg_dbg_ctld_request, 4, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(MyApp0, addDebugRegister, reg_dbg_done_out, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(MyApp0, addDebugRegister, reg_dbg_fill_level, 18, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(MyApp0, addDebugRegister, reg_dbg_flush_level, 18, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(MyApp0, addDebugRegister, reg_dbg_flush_start, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(MyApp0, addDebugRegister, reg_dbg_flush_start_level, 18, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(MyApp0, addDebugRegister, reg_dbg_flushing, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(MyApp0, addDebugRegister, reg_dbg_full_level, 18, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(MyApp0, addDebugRegister, reg_dbg_out_stall, 2, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(MyApp0, addDebugRegister, reg_dbg_out_valid, 2, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(MyApp0, addDebugRegister, reg_dbg_stall_vector, 2, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(dram2mgr, setup, "dram2mgr", MemoryControllerPro::getDefaultMemoryController(), "cmd_dram2mgr", 1536)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(cmd_dram2mgr, setup, "cmd_dram2mgr", MemoryControllerPro::getDefaultMemoryController())
MANAGER_NODE_CPP_SIM_MODEL_SETUP(cmd_mgr2dram, setup, "cmd_mgr2dram", MemoryControllerPro::getDefaultMemoryController())
MANAGER_NODE_CPP_SIM_MODEL_SETUP(dram2knl0, setup, "dram2knl0", MemoryControllerPro::getDefaultMemoryController(), "cmd_dram2knl0", 1536)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(cmd_dram2knl0, setup, "cmd_dram2knl0", MemoryControllerPro::getDefaultMemoryController())
MANAGER_NODE_CPP_SIM_MODEL_SETUP(dram2knl1, setup, "dram2knl1", MemoryControllerPro::getDefaultMemoryController(), "cmd_dram2knl1", 1536)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(cmd_dram2knl1, setup, "cmd_dram2knl1", MemoryControllerPro::getDefaultMemoryController())
MANAGER_NODE_CPP_SIM_MODEL_SETUP(dram2knl2, setup, "dram2knl2", MemoryControllerPro::getDefaultMemoryController(), "cmd_dram2knl2", 1536)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(cmd_dram2knl2, setup, "cmd_dram2knl2", MemoryControllerPro::getDefaultMemoryController())
MANAGER_NODE_CPP_SIM_MODEL_SETUP(dram2knl3, setup, "dram2knl3", MemoryControllerPro::getDefaultMemoryController(), "cmd_dram2knl3", 1536)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(cmd_dram2knl3, setup, "cmd_dram2knl3", MemoryControllerPro::getDefaultMemoryController())
MANAGER_NODE_CPP_SIM_MODEL_SETUP(cmd_knl2dram0, setup, "cmd_knl2dram0", MemoryControllerPro::getDefaultMemoryController())
MANAGER_NODE_CPP_SIM_MODEL_SETUP(cmd_knl2dram1, setup, "cmd_knl2dram1", MemoryControllerPro::getDefaultMemoryController())
MANAGER_NODE_CPP_SIM_MODEL_SETUP(mgr2dram, setup, "mgr2dram", MemoryControllerPro::getDefaultMemoryController(), "cmd_mgr2dram", 1536)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(knl2dram0, setup, "knl2dram0", MemoryControllerPro::getDefaultMemoryController(), "cmd_knl2dram0", 1536)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(knl2dram1, setup, "knl2dram1", MemoryControllerPro::getDefaultMemoryController(), "cmd_knl2dram1", 1536)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(MemoryControllerPro, streamsFinalise)
#endif

#ifdef PCIE_STREAM
#define PCIE_STREAM_PRESENT 1
PCIE_STREAM(host2mgr, STREAM_FROM_HOST, 0)
PCIE_STREAM(mgr2host, STREAM_TO_HOST, 0)
#endif


#ifdef DEBUG_OUTPUT_BITS
#define DEBUG_OUTPUT_BITS_PRESENT 1
DEBUG_OUTPUT_BITS(Cmdhostread, dram_read, 0)
#endif


#ifdef DEBUG_OUTPUT_BITS
#define DEBUG_OUTPUT_BITS_PRESENT 1
DEBUG_OUTPUT_BITS(Cmdhostwrite, dram_write, 0)
#endif


#ifdef DEBUG_OUTPUT_BITS
#define DEBUG_OUTPUT_BITS_PRESENT 1
DEBUG_OUTPUT_BITS(Cmdread0, dram_read, 0)
#endif


#ifdef DEBUG_OUTPUT_BITS
#define DEBUG_OUTPUT_BITS_PRESENT 1
DEBUG_OUTPUT_BITS(Cmdread1, dram_read, 0)
#endif


#ifdef DEBUG_OUTPUT_BITS
#define DEBUG_OUTPUT_BITS_PRESENT 1
DEBUG_OUTPUT_BITS(Cmdread2, dram_read, 0)
#endif


#ifdef DEBUG_OUTPUT_BITS
#define DEBUG_OUTPUT_BITS_PRESENT 1
DEBUG_OUTPUT_BITS(Cmdread3, dram_read, 0)
#endif


#ifdef DEBUG_OUTPUT_BITS
#define DEBUG_OUTPUT_BITS_PRESENT 1
DEBUG_OUTPUT_BITS(Cmdwrite0, dram_write, 0)
#endif


#ifdef DEBUG_OUTPUT_BITS
#define DEBUG_OUTPUT_BITS_PRESENT 1
DEBUG_OUTPUT_BITS(Cmdwrite1, dram_write, 0)
#endif

#ifdef DEBUG_INPUT_BITS
#define DEBUG_INPUT_BITS_PRESENT 1
DEBUG_INPUT_BITS(MyApp0, dvv, 0)
DEBUG_INPUT_BITS(MyApp0, p, 1)
DEBUG_INPUT_BITS(MyApp0, pp, 2)
DEBUG_INPUT_BITS(MyApp0, source, 3)
#endif

#ifdef DEBUG_OUTPUT_BITS
#define DEBUG_OUTPUT_BITS_PRESENT 1
DEBUG_OUTPUT_BITS(MyApp0, pp_out, 0)
DEBUG_OUTPUT_BITS(MyApp0, p_out, 1)
#endif

#ifdef MEMCTRLPRO_STREAM
#define MEMCTRLPRO_STREAM_PRESENT 1
MEMCTRLPRO_STREAM(dram2mgr, 0, READ_FROM_MEMORY)
MEMCTRLPRO_STREAM(dram2knl0, 1, READ_FROM_MEMORY)
MEMCTRLPRO_STREAM(dram2knl1, 2, READ_FROM_MEMORY)
MEMCTRLPRO_STREAM(dram2knl2, 3, READ_FROM_MEMORY)
MEMCTRLPRO_STREAM(dram2knl3, 4, READ_FROM_MEMORY)
MEMCTRLPRO_STREAM(mgr2dram, 5, WRITE_TO_MEMORY)
MEMCTRLPRO_STREAM(knl2dram0, 6, WRITE_TO_MEMORY)
MEMCTRLPRO_STREAM(knl2dram1, 7, WRITE_TO_MEMORY)
#endif

#ifdef REG
#define REG_PRESENT 1
REG(Cmdhostread.iniBursts, 0x0, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(Cmdhostread.totalBursts, 0x4, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(Cmdhostread.wordsPerBurst, 0x8, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(Cmdhostread.Enable, 0xc, 1, hwOffsetFix(1, 0, UNSIGNED))
REG(Cmdhostread.io_dram_read_force_disabled, 0xd, 1, hwOffsetFix(1, 0, UNSIGNED))
REG(Cmdhostread.run_cycle_count, 0xe, 6, hwOffsetFix(48, 0, UNSIGNED))
REG(Cmdhostread.current_run_cycle_count, 0x14, 6, hwOffsetFix(48, 0, UNSIGNED))
REG(Cmdhostread.Cmdhostread_dbg_ctld_almost_empty, 0x1a, 1, hwBits(0))
REG(Cmdhostread.Cmdhostread_dbg_ctld_done, 0x1b, 1, hwBits(0))
REG(Cmdhostread.Cmdhostread_dbg_ctld_empty, 0x1c, 1, hwBits(0))
REG(Cmdhostread.Cmdhostread_dbg_ctld_read, 0x1d, 1, hwBits(0))
REG(Cmdhostread.Cmdhostread_dbg_ctld_read_pipe_dbg, 0x1e, 1, hwBits(0))
REG(Cmdhostread.Cmdhostread_dbg_ctld_request, 0x1f, 1, hwBits(0))
REG(Cmdhostread.Cmdhostread_dbg_done_out, 0x20, 1, hwBits(1))
REG(Cmdhostread.Cmdhostread_dbg_fill_level, 0x21, 1, hwBits(3))
REG(Cmdhostread.Cmdhostread_dbg_flush_level, 0x22, 1, hwBits(3))
REG(Cmdhostread.Cmdhostread_dbg_flush_start, 0x23, 1, hwBits(1))
REG(Cmdhostread.Cmdhostread_dbg_flush_start_level, 0x24, 1, hwBits(3))
REG(Cmdhostread.Cmdhostread_dbg_flushing, 0x25, 1, hwBits(1))
REG(Cmdhostread.Cmdhostread_dbg_full_level, 0x26, 1, hwBits(3))
REG(Cmdhostread.Cmdhostread_dbg_out_stall, 0x27, 1, hwBits(1))
REG(Cmdhostread.Cmdhostread_dbg_out_valid, 0x28, 1, hwBits(1))
REG(Cmdhostread.Cmdhostread_dbg_stall_vector, 0x29, 1, hwBits(1))
REG(Cmdhostwrite.iniBursts, 0x2a, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(Cmdhostwrite.iterations, 0x2e, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(Cmdhostwrite.totalBursts, 0x32, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(Cmdhostwrite.wordsPerBurst, 0x36, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(Cmdhostwrite.Enable, 0x3a, 1, hwOffsetFix(1, 0, UNSIGNED))
REG(Cmdhostwrite.io_dram_write_force_disabled, 0x3b, 1, hwOffsetFix(1, 0, UNSIGNED))
REG(Cmdhostwrite.run_cycle_count, 0x3c, 6, hwOffsetFix(48, 0, UNSIGNED))
REG(Cmdhostwrite.current_run_cycle_count, 0x42, 6, hwOffsetFix(48, 0, UNSIGNED))
REG(Cmdhostwrite.Cmdhostwrite_dbg_ctld_almost_empty, 0x48, 1, hwBits(0))
REG(Cmdhostwrite.Cmdhostwrite_dbg_ctld_done, 0x49, 1, hwBits(0))
REG(Cmdhostwrite.Cmdhostwrite_dbg_ctld_empty, 0x4a, 1, hwBits(0))
REG(Cmdhostwrite.Cmdhostwrite_dbg_ctld_read, 0x4b, 1, hwBits(0))
REG(Cmdhostwrite.Cmdhostwrite_dbg_ctld_read_pipe_dbg, 0x4c, 1, hwBits(0))
REG(Cmdhostwrite.Cmdhostwrite_dbg_ctld_request, 0x4d, 1, hwBits(0))
REG(Cmdhostwrite.Cmdhostwrite_dbg_done_out, 0x4e, 1, hwBits(1))
REG(Cmdhostwrite.Cmdhostwrite_dbg_fill_level, 0x4f, 1, hwBits(3))
REG(Cmdhostwrite.Cmdhostwrite_dbg_flush_level, 0x50, 1, hwBits(3))
REG(Cmdhostwrite.Cmdhostwrite_dbg_flush_start, 0x51, 1, hwBits(1))
REG(Cmdhostwrite.Cmdhostwrite_dbg_flush_start_level, 0x52, 1, hwBits(3))
REG(Cmdhostwrite.Cmdhostwrite_dbg_flushing, 0x53, 1, hwBits(1))
REG(Cmdhostwrite.Cmdhostwrite_dbg_full_level, 0x54, 1, hwBits(3))
REG(Cmdhostwrite.Cmdhostwrite_dbg_out_stall, 0x55, 1, hwBits(1))
REG(Cmdhostwrite.Cmdhostwrite_dbg_out_valid, 0x56, 1, hwBits(1))
REG(Cmdhostwrite.Cmdhostwrite_dbg_stall_vector, 0x57, 1, hwBits(1))
REG(Cmdread0.iniBursts, 0x58, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(Cmdread0.totalBursts, 0x5c, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(Cmdread0.wordsPerBurst, 0x60, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(Cmdread0.Enable, 0x64, 1, hwOffsetFix(1, 0, UNSIGNED))
REG(Cmdread0.io_dram_read_force_disabled, 0x65, 1, hwOffsetFix(1, 0, UNSIGNED))
REG(Cmdread0.run_cycle_count, 0x66, 6, hwOffsetFix(48, 0, UNSIGNED))
REG(Cmdread0.current_run_cycle_count, 0x6c, 6, hwOffsetFix(48, 0, UNSIGNED))
REG(Cmdread0.Cmdread0_dbg_ctld_almost_empty, 0x72, 1, hwBits(0))
REG(Cmdread0.Cmdread0_dbg_ctld_done, 0x73, 1, hwBits(0))
REG(Cmdread0.Cmdread0_dbg_ctld_empty, 0x74, 1, hwBits(0))
REG(Cmdread0.Cmdread0_dbg_ctld_read, 0x75, 1, hwBits(0))
REG(Cmdread0.Cmdread0_dbg_ctld_read_pipe_dbg, 0x76, 1, hwBits(0))
REG(Cmdread0.Cmdread0_dbg_ctld_request, 0x77, 1, hwBits(0))
REG(Cmdread0.Cmdread0_dbg_done_out, 0x78, 1, hwBits(1))
REG(Cmdread0.Cmdread0_dbg_fill_level, 0x79, 1, hwBits(3))
REG(Cmdread0.Cmdread0_dbg_flush_level, 0x7a, 1, hwBits(3))
REG(Cmdread0.Cmdread0_dbg_flush_start, 0x7b, 1, hwBits(1))
REG(Cmdread0.Cmdread0_dbg_flush_start_level, 0x7c, 1, hwBits(3))
REG(Cmdread0.Cmdread0_dbg_flushing, 0x7d, 1, hwBits(1))
REG(Cmdread0.Cmdread0_dbg_full_level, 0x7e, 1, hwBits(3))
REG(Cmdread0.Cmdread0_dbg_out_stall, 0x7f, 1, hwBits(1))
REG(Cmdread0.Cmdread0_dbg_out_valid, 0x80, 1, hwBits(1))
REG(Cmdread0.Cmdread0_dbg_stall_vector, 0x81, 1, hwBits(1))
REG(Cmdread1.iniBursts, 0x82, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(Cmdread1.totalBursts, 0x86, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(Cmdread1.wordsPerBurst, 0x8a, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(Cmdread1.Enable, 0x8e, 1, hwOffsetFix(1, 0, UNSIGNED))
REG(Cmdread1.io_dram_read_force_disabled, 0x8f, 1, hwOffsetFix(1, 0, UNSIGNED))
REG(Cmdread1.run_cycle_count, 0x90, 6, hwOffsetFix(48, 0, UNSIGNED))
REG(Cmdread1.current_run_cycle_count, 0x96, 6, hwOffsetFix(48, 0, UNSIGNED))
REG(Cmdread1.Cmdread1_dbg_ctld_almost_empty, 0x9c, 1, hwBits(0))
REG(Cmdread1.Cmdread1_dbg_ctld_done, 0x9d, 1, hwBits(0))
REG(Cmdread1.Cmdread1_dbg_ctld_empty, 0x9e, 1, hwBits(0))
REG(Cmdread1.Cmdread1_dbg_ctld_read, 0x9f, 1, hwBits(0))
REG(Cmdread1.Cmdread1_dbg_ctld_read_pipe_dbg, 0xa0, 1, hwBits(0))
REG(Cmdread1.Cmdread1_dbg_ctld_request, 0xa1, 1, hwBits(0))
REG(Cmdread1.Cmdread1_dbg_done_out, 0xa2, 1, hwBits(1))
REG(Cmdread1.Cmdread1_dbg_fill_level, 0xa3, 1, hwBits(3))
REG(Cmdread1.Cmdread1_dbg_flush_level, 0xa4, 1, hwBits(3))
REG(Cmdread1.Cmdread1_dbg_flush_start, 0xa5, 1, hwBits(1))
REG(Cmdread1.Cmdread1_dbg_flush_start_level, 0xa6, 1, hwBits(3))
REG(Cmdread1.Cmdread1_dbg_flushing, 0xa7, 1, hwBits(1))
REG(Cmdread1.Cmdread1_dbg_full_level, 0xa8, 1, hwBits(3))
REG(Cmdread1.Cmdread1_dbg_out_stall, 0xa9, 1, hwBits(1))
REG(Cmdread1.Cmdread1_dbg_out_valid, 0xaa, 1, hwBits(1))
REG(Cmdread1.Cmdread1_dbg_stall_vector, 0xab, 1, hwBits(1))
REG(Cmdread2.iniBursts, 0xac, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(Cmdread2.totalBursts, 0xb0, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(Cmdread2.wordsPerBurst, 0xb4, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(Cmdread2.Enable, 0xb8, 1, hwOffsetFix(1, 0, UNSIGNED))
REG(Cmdread2.io_dram_read_force_disabled, 0xb9, 1, hwOffsetFix(1, 0, UNSIGNED))
REG(Cmdread2.run_cycle_count, 0xba, 6, hwOffsetFix(48, 0, UNSIGNED))
REG(Cmdread2.current_run_cycle_count, 0xc0, 6, hwOffsetFix(48, 0, UNSIGNED))
REG(Cmdread2.Cmdread2_dbg_ctld_almost_empty, 0xc6, 1, hwBits(0))
REG(Cmdread2.Cmdread2_dbg_ctld_done, 0xc7, 1, hwBits(0))
REG(Cmdread2.Cmdread2_dbg_ctld_empty, 0xc8, 1, hwBits(0))
REG(Cmdread2.Cmdread2_dbg_ctld_read, 0xc9, 1, hwBits(0))
REG(Cmdread2.Cmdread2_dbg_ctld_read_pipe_dbg, 0xca, 1, hwBits(0))
REG(Cmdread2.Cmdread2_dbg_ctld_request, 0xcb, 1, hwBits(0))
REG(Cmdread2.Cmdread2_dbg_done_out, 0xcc, 1, hwBits(1))
REG(Cmdread2.Cmdread2_dbg_fill_level, 0xcd, 1, hwBits(3))
REG(Cmdread2.Cmdread2_dbg_flush_level, 0xce, 1, hwBits(3))
REG(Cmdread2.Cmdread2_dbg_flush_start, 0xcf, 1, hwBits(1))
REG(Cmdread2.Cmdread2_dbg_flush_start_level, 0xd0, 1, hwBits(3))
REG(Cmdread2.Cmdread2_dbg_flushing, 0xd1, 1, hwBits(1))
REG(Cmdread2.Cmdread2_dbg_full_level, 0xd2, 1, hwBits(3))
REG(Cmdread2.Cmdread2_dbg_out_stall, 0xd3, 1, hwBits(1))
REG(Cmdread2.Cmdread2_dbg_out_valid, 0xd4, 1, hwBits(1))
REG(Cmdread2.Cmdread2_dbg_stall_vector, 0xd5, 1, hwBits(1))
REG(Cmdread3.iniBursts, 0xd6, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(Cmdread3.totalBursts, 0xda, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(Cmdread3.wordsPerBurst, 0xde, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(Cmdread3.Enable, 0xe2, 1, hwOffsetFix(1, 0, UNSIGNED))
REG(Cmdread3.io_dram_read_force_disabled, 0xe3, 1, hwOffsetFix(1, 0, UNSIGNED))
REG(Cmdread3.run_cycle_count, 0xe4, 6, hwOffsetFix(48, 0, UNSIGNED))
REG(Cmdread3.current_run_cycle_count, 0xea, 6, hwOffsetFix(48, 0, UNSIGNED))
REG(Cmdread3.Cmdread3_dbg_ctld_almost_empty, 0xf0, 1, hwBits(0))
REG(Cmdread3.Cmdread3_dbg_ctld_done, 0xf1, 1, hwBits(0))
REG(Cmdread3.Cmdread3_dbg_ctld_empty, 0xf2, 1, hwBits(0))
REG(Cmdread3.Cmdread3_dbg_ctld_read, 0xf3, 1, hwBits(0))
REG(Cmdread3.Cmdread3_dbg_ctld_read_pipe_dbg, 0xf4, 1, hwBits(0))
REG(Cmdread3.Cmdread3_dbg_ctld_request, 0xf5, 1, hwBits(0))
REG(Cmdread3.Cmdread3_dbg_done_out, 0xf6, 1, hwBits(1))
REG(Cmdread3.Cmdread3_dbg_fill_level, 0xf7, 1, hwBits(3))
REG(Cmdread3.Cmdread3_dbg_flush_level, 0xf8, 1, hwBits(3))
REG(Cmdread3.Cmdread3_dbg_flush_start, 0xf9, 1, hwBits(1))
REG(Cmdread3.Cmdread3_dbg_flush_start_level, 0xfa, 1, hwBits(3))
REG(Cmdread3.Cmdread3_dbg_flushing, 0xfb, 1, hwBits(1))
REG(Cmdread3.Cmdread3_dbg_full_level, 0xfc, 1, hwBits(3))
REG(Cmdread3.Cmdread3_dbg_out_stall, 0xfd, 1, hwBits(1))
REG(Cmdread3.Cmdread3_dbg_out_valid, 0xfe, 1, hwBits(1))
REG(Cmdread3.Cmdread3_dbg_stall_vector, 0xff, 1, hwBits(1))
REG(Cmdwrite0.iniBursts, 0x100, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(Cmdwrite0.iterations, 0x104, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(Cmdwrite0.totalBursts, 0x108, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(Cmdwrite0.wordsPerBurst, 0x10c, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(Cmdwrite0.Enable, 0x110, 1, hwOffsetFix(1, 0, UNSIGNED))
REG(Cmdwrite0.io_dram_write_force_disabled, 0x111, 1, hwOffsetFix(1, 0, UNSIGNED))
REG(Cmdwrite0.run_cycle_count, 0x112, 6, hwOffsetFix(48, 0, UNSIGNED))
REG(Cmdwrite0.current_run_cycle_count, 0x118, 6, hwOffsetFix(48, 0, UNSIGNED))
REG(Cmdwrite0.Cmdwrite0_dbg_ctld_almost_empty, 0x11e, 1, hwBits(0))
REG(Cmdwrite0.Cmdwrite0_dbg_ctld_done, 0x11f, 1, hwBits(0))
REG(Cmdwrite0.Cmdwrite0_dbg_ctld_empty, 0x120, 1, hwBits(0))
REG(Cmdwrite0.Cmdwrite0_dbg_ctld_read, 0x121, 1, hwBits(0))
REG(Cmdwrite0.Cmdwrite0_dbg_ctld_read_pipe_dbg, 0x122, 1, hwBits(0))
REG(Cmdwrite0.Cmdwrite0_dbg_ctld_request, 0x123, 1, hwBits(0))
REG(Cmdwrite0.Cmdwrite0_dbg_done_out, 0x124, 1, hwBits(1))
REG(Cmdwrite0.Cmdwrite0_dbg_fill_level, 0x125, 1, hwBits(3))
REG(Cmdwrite0.Cmdwrite0_dbg_flush_level, 0x126, 1, hwBits(3))
REG(Cmdwrite0.Cmdwrite0_dbg_flush_start, 0x127, 1, hwBits(1))
REG(Cmdwrite0.Cmdwrite0_dbg_flush_start_level, 0x128, 1, hwBits(3))
REG(Cmdwrite0.Cmdwrite0_dbg_flushing, 0x129, 1, hwBits(1))
REG(Cmdwrite0.Cmdwrite0_dbg_full_level, 0x12a, 1, hwBits(3))
REG(Cmdwrite0.Cmdwrite0_dbg_out_stall, 0x12b, 1, hwBits(1))
REG(Cmdwrite0.Cmdwrite0_dbg_out_valid, 0x12c, 1, hwBits(1))
REG(Cmdwrite0.Cmdwrite0_dbg_stall_vector, 0x12d, 1, hwBits(1))
REG(Cmdwrite1.iniBursts, 0x12e, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(Cmdwrite1.iterations, 0x132, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(Cmdwrite1.totalBursts, 0x136, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(Cmdwrite1.wordsPerBurst, 0x13a, 4, hwOffsetFix(32, 0, UNSIGNED))
REG(Cmdwrite1.Enable, 0x13e, 1, hwOffsetFix(1, 0, UNSIGNED))
REG(Cmdwrite1.io_dram_write_force_disabled, 0x13f, 1, hwOffsetFix(1, 0, UNSIGNED))
REG(Cmdwrite1.run_cycle_count, 0x140, 6, hwOffsetFix(48, 0, UNSIGNED))
REG(Cmdwrite1.current_run_cycle_count, 0x146, 6, hwOffsetFix(48, 0, UNSIGNED))
REG(Cmdwrite1.Cmdwrite1_dbg_ctld_almost_empty, 0x14c, 1, hwBits(0))
REG(Cmdwrite1.Cmdwrite1_dbg_ctld_done, 0x14d, 1, hwBits(0))
REG(Cmdwrite1.Cmdwrite1_dbg_ctld_empty, 0x14e, 1, hwBits(0))
REG(Cmdwrite1.Cmdwrite1_dbg_ctld_read, 0x14f, 1, hwBits(0))
REG(Cmdwrite1.Cmdwrite1_dbg_ctld_read_pipe_dbg, 0x150, 1, hwBits(0))
REG(Cmdwrite1.Cmdwrite1_dbg_ctld_request, 0x151, 1, hwBits(0))
REG(Cmdwrite1.Cmdwrite1_dbg_done_out, 0x152, 1, hwBits(1))
REG(Cmdwrite1.Cmdwrite1_dbg_fill_level, 0x153, 1, hwBits(3))
REG(Cmdwrite1.Cmdwrite1_dbg_flush_level, 0x154, 1, hwBits(3))
REG(Cmdwrite1.Cmdwrite1_dbg_flush_start, 0x155, 1, hwBits(1))
REG(Cmdwrite1.Cmdwrite1_dbg_flush_start_level, 0x156, 1, hwBits(3))
REG(Cmdwrite1.Cmdwrite1_dbg_flushing, 0x157, 1, hwBits(1))
REG(Cmdwrite1.Cmdwrite1_dbg_full_level, 0x158, 1, hwBits(3))
REG(Cmdwrite1.Cmdwrite1_dbg_out_stall, 0x159, 1, hwBits(1))
REG(Cmdwrite1.Cmdwrite1_dbg_out_valid, 0x15a, 1, hwBits(1))
REG(Cmdwrite1.Cmdwrite1_dbg_stall_vector, 0x15b, 1, hwBits(1))
REG(STREAMSTATUS_host2mgr_host2mgr.StreamStatus_OUT_checksum0, 0x15c, 4, hwBits(32))
REG(STREAMSTATUS_host2mgr_host2mgr.StreamStatus_OUT_checksum1, 0x160, 4, hwBits(32))
REG(STREAMSTATUS_host2mgr_host2mgr.StreamStatus_OUT_checksum2, 0x164, 4, hwBits(32))
REG(STREAMSTATUS_host2mgr_host2mgr.StreamStatus_OUT_checksum3, 0x168, 4, hwBits(32))
REG(STREAMSTATUS_host2mgr_host2mgr.StreamStatus_OUT_working_cycles, 0x16c, 6, hwBits(48))
REG(STREAMSTATUS_host2mgr_host2mgr.StreamStatus_OUT_waiting_cycles, 0x172, 6, hwBits(48))
REG(STREAMSTATUS_host2mgr_host2mgr.StreamStatus_OUT_active_cycles, 0x178, 6, hwBits(48))
REG(STREAMSTATUS_host2mgr_host2mgr.StreamStatus_OUT_flags, 0x17e, 1, hwBits(8))
REG(STREAMSTATUS_Cmdhostread_dram_read.StreamStatus_OUT_checksum0, 0x17f, 4, hwBits(32))
REG(STREAMSTATUS_Cmdhostread_dram_read.StreamStatus_OUT_checksum1, 0x183, 4, hwBits(32))
REG(STREAMSTATUS_Cmdhostread_dram_read.StreamStatus_OUT_working_cycles, 0x187, 6, hwBits(48))
REG(STREAMSTATUS_Cmdhostread_dram_read.StreamStatus_OUT_waiting_cycles, 0x18d, 6, hwBits(48))
REG(STREAMSTATUS_Cmdhostread_dram_read.StreamStatus_OUT_active_cycles, 0x193, 6, hwBits(48))
REG(STREAMSTATUS_Cmdhostread_dram_read.StreamStatus_OUT_flags, 0x199, 1, hwBits(8))
REG(STREAMSTATUS_Cmdhostwrite_dram_write.StreamStatus_OUT_checksum0, 0x19a, 4, hwBits(32))
REG(STREAMSTATUS_Cmdhostwrite_dram_write.StreamStatus_OUT_checksum1, 0x19e, 4, hwBits(32))
REG(STREAMSTATUS_Cmdhostwrite_dram_write.StreamStatus_OUT_working_cycles, 0x1a2, 6, hwBits(48))
REG(STREAMSTATUS_Cmdhostwrite_dram_write.StreamStatus_OUT_waiting_cycles, 0x1a8, 6, hwBits(48))
REG(STREAMSTATUS_Cmdhostwrite_dram_write.StreamStatus_OUT_active_cycles, 0x1ae, 6, hwBits(48))
REG(STREAMSTATUS_Cmdhostwrite_dram_write.StreamStatus_OUT_flags, 0x1b4, 1, hwBits(8))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum0, 0x1b5, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum1, 0x1b9, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum2, 0x1bd, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum3, 0x1c1, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum4, 0x1c5, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum5, 0x1c9, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum6, 0x1cd, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum7, 0x1d1, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum8, 0x1d5, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum9, 0x1d9, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum10, 0x1dd, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum11, 0x1e1, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum12, 0x1e5, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum13, 0x1e9, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum14, 0x1ed, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum15, 0x1f1, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum16, 0x1f5, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum17, 0x1f9, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum18, 0x1fd, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum19, 0x201, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum20, 0x205, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum21, 0x209, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum22, 0x20d, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum23, 0x211, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum24, 0x215, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum25, 0x219, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum26, 0x21d, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum27, 0x221, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum28, 0x225, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum29, 0x229, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum30, 0x22d, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum31, 0x231, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum32, 0x235, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum33, 0x239, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum34, 0x23d, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum35, 0x241, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum36, 0x245, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum37, 0x249, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum38, 0x24d, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum39, 0x251, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum40, 0x255, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum41, 0x259, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum42, 0x25d, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum43, 0x261, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum44, 0x265, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum45, 0x269, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum46, 0x26d, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum47, 0x271, 4, hwBits(32))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_working_cycles, 0x275, 6, hwBits(48))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_waiting_cycles, 0x27b, 6, hwBits(48))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_active_cycles, 0x281, 6, hwBits(48))
REG(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_flags, 0x287, 1, hwBits(8))
REG(STREAMSTATUS_Cmdread0_dram_read.StreamStatus_OUT_checksum0, 0x288, 4, hwBits(32))
REG(STREAMSTATUS_Cmdread0_dram_read.StreamStatus_OUT_checksum1, 0x28c, 4, hwBits(32))
REG(STREAMSTATUS_Cmdread0_dram_read.StreamStatus_OUT_working_cycles, 0x290, 6, hwBits(48))
REG(STREAMSTATUS_Cmdread0_dram_read.StreamStatus_OUT_waiting_cycles, 0x296, 6, hwBits(48))
REG(STREAMSTATUS_Cmdread0_dram_read.StreamStatus_OUT_active_cycles, 0x29c, 6, hwBits(48))
REG(STREAMSTATUS_Cmdread0_dram_read.StreamStatus_OUT_flags, 0x2a2, 1, hwBits(8))
REG(STREAMSTATUS_Cmdread1_dram_read.StreamStatus_OUT_checksum0, 0x2a3, 4, hwBits(32))
REG(STREAMSTATUS_Cmdread1_dram_read.StreamStatus_OUT_checksum1, 0x2a7, 4, hwBits(32))
REG(STREAMSTATUS_Cmdread1_dram_read.StreamStatus_OUT_working_cycles, 0x2ab, 6, hwBits(48))
REG(STREAMSTATUS_Cmdread1_dram_read.StreamStatus_OUT_waiting_cycles, 0x2b1, 6, hwBits(48))
REG(STREAMSTATUS_Cmdread1_dram_read.StreamStatus_OUT_active_cycles, 0x2b7, 6, hwBits(48))
REG(STREAMSTATUS_Cmdread1_dram_read.StreamStatus_OUT_flags, 0x2bd, 1, hwBits(8))
REG(STREAMSTATUS_Cmdread2_dram_read.StreamStatus_OUT_checksum0, 0x2be, 4, hwBits(32))
REG(STREAMSTATUS_Cmdread2_dram_read.StreamStatus_OUT_checksum1, 0x2c2, 4, hwBits(32))
REG(STREAMSTATUS_Cmdread2_dram_read.StreamStatus_OUT_working_cycles, 0x2c6, 6, hwBits(48))
REG(STREAMSTATUS_Cmdread2_dram_read.StreamStatus_OUT_waiting_cycles, 0x2cc, 6, hwBits(48))
REG(STREAMSTATUS_Cmdread2_dram_read.StreamStatus_OUT_active_cycles, 0x2d2, 6, hwBits(48))
REG(STREAMSTATUS_Cmdread2_dram_read.StreamStatus_OUT_flags, 0x2d8, 1, hwBits(8))
REG(STREAMSTATUS_Cmdread3_dram_read.StreamStatus_OUT_checksum0, 0x2d9, 4, hwBits(32))
REG(STREAMSTATUS_Cmdread3_dram_read.StreamStatus_OUT_checksum1, 0x2dd, 4, hwBits(32))
REG(STREAMSTATUS_Cmdread3_dram_read.StreamStatus_OUT_working_cycles, 0x2e1, 6, hwBits(48))
REG(STREAMSTATUS_Cmdread3_dram_read.StreamStatus_OUT_waiting_cycles, 0x2e7, 6, hwBits(48))
REG(STREAMSTATUS_Cmdread3_dram_read.StreamStatus_OUT_active_cycles, 0x2ed, 6, hwBits(48))
REG(STREAMSTATUS_Cmdread3_dram_read.StreamStatus_OUT_flags, 0x2f3, 1, hwBits(8))
REG(STREAMSTATUS_Cmdwrite0_dram_write.StreamStatus_OUT_checksum0, 0x2f4, 4, hwBits(32))
REG(STREAMSTATUS_Cmdwrite0_dram_write.StreamStatus_OUT_checksum1, 0x2f8, 4, hwBits(32))
REG(STREAMSTATUS_Cmdwrite0_dram_write.StreamStatus_OUT_working_cycles, 0x2fc, 6, hwBits(48))
REG(STREAMSTATUS_Cmdwrite0_dram_write.StreamStatus_OUT_waiting_cycles, 0x302, 6, hwBits(48))
REG(STREAMSTATUS_Cmdwrite0_dram_write.StreamStatus_OUT_active_cycles, 0x308, 6, hwBits(48))
REG(STREAMSTATUS_Cmdwrite0_dram_write.StreamStatus_OUT_flags, 0x30e, 1, hwBits(8))
REG(STREAMSTATUS_Cmdwrite1_dram_write.StreamStatus_OUT_checksum0, 0x30f, 4, hwBits(32))
REG(STREAMSTATUS_Cmdwrite1_dram_write.StreamStatus_OUT_checksum1, 0x313, 4, hwBits(32))
REG(STREAMSTATUS_Cmdwrite1_dram_write.StreamStatus_OUT_working_cycles, 0x317, 6, hwBits(48))
REG(STREAMSTATUS_Cmdwrite1_dram_write.StreamStatus_OUT_waiting_cycles, 0x31d, 6, hwBits(48))
REG(STREAMSTATUS_Cmdwrite1_dram_write.StreamStatus_OUT_active_cycles, 0x323, 6, hwBits(48))
REG(STREAMSTATUS_Cmdwrite1_dram_write.StreamStatus_OUT_flags, 0x329, 1, hwBits(8))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum0, 0x32a, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum1, 0x32e, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum2, 0x332, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum3, 0x336, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum4, 0x33a, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum5, 0x33e, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum6, 0x342, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum7, 0x346, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum8, 0x34a, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum9, 0x34e, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum10, 0x352, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum11, 0x356, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum12, 0x35a, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum13, 0x35e, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum14, 0x362, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum15, 0x366, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum16, 0x36a, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum17, 0x36e, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum18, 0x372, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum19, 0x376, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum20, 0x37a, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum21, 0x37e, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum22, 0x382, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum23, 0x386, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum24, 0x38a, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum25, 0x38e, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum26, 0x392, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum27, 0x396, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum28, 0x39a, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum29, 0x39e, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum30, 0x3a2, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum31, 0x3a6, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum32, 0x3aa, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum33, 0x3ae, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum34, 0x3b2, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum35, 0x3b6, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum36, 0x3ba, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum37, 0x3be, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum38, 0x3c2, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum39, 0x3c6, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum40, 0x3ca, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum41, 0x3ce, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum42, 0x3d2, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum43, 0x3d6, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum44, 0x3da, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum45, 0x3de, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum46, 0x3e2, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum47, 0x3e6, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_working_cycles, 0x3ea, 6, hwBits(48))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_waiting_cycles, 0x3f0, 6, hwBits(48))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_active_cycles, 0x3f6, 6, hwBits(48))
REG(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_flags, 0x3fc, 1, hwBits(8))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum0, 0x3fd, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum1, 0x401, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum2, 0x405, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum3, 0x409, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum4, 0x40d, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum5, 0x411, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum6, 0x415, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum7, 0x419, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum8, 0x41d, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum9, 0x421, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum10, 0x425, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum11, 0x429, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum12, 0x42d, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum13, 0x431, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum14, 0x435, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum15, 0x439, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum16, 0x43d, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum17, 0x441, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum18, 0x445, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum19, 0x449, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum20, 0x44d, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum21, 0x451, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum22, 0x455, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum23, 0x459, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum24, 0x45d, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum25, 0x461, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum26, 0x465, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum27, 0x469, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum28, 0x46d, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum29, 0x471, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum30, 0x475, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum31, 0x479, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum32, 0x47d, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum33, 0x481, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum34, 0x485, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum35, 0x489, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum36, 0x48d, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum37, 0x491, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum38, 0x495, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum39, 0x499, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum40, 0x49d, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum41, 0x4a1, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum42, 0x4a5, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum43, 0x4a9, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum44, 0x4ad, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum45, 0x4b1, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum46, 0x4b5, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum47, 0x4b9, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_working_cycles, 0x4bd, 6, hwBits(48))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_waiting_cycles, 0x4c3, 6, hwBits(48))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_active_cycles, 0x4c9, 6, hwBits(48))
REG(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_flags, 0x4cf, 1, hwBits(8))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum0, 0x4d0, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum1, 0x4d4, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum2, 0x4d8, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum3, 0x4dc, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum4, 0x4e0, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum5, 0x4e4, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum6, 0x4e8, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum7, 0x4ec, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum8, 0x4f0, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum9, 0x4f4, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum10, 0x4f8, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum11, 0x4fc, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum12, 0x500, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum13, 0x504, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum14, 0x508, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum15, 0x50c, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum16, 0x510, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum17, 0x514, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum18, 0x518, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum19, 0x51c, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum20, 0x520, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum21, 0x524, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum22, 0x528, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum23, 0x52c, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum24, 0x530, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum25, 0x534, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum26, 0x538, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum27, 0x53c, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum28, 0x540, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum29, 0x544, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum30, 0x548, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum31, 0x54c, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum32, 0x550, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum33, 0x554, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum34, 0x558, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum35, 0x55c, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum36, 0x560, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum37, 0x564, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum38, 0x568, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum39, 0x56c, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum40, 0x570, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum41, 0x574, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum42, 0x578, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum43, 0x57c, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum44, 0x580, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum45, 0x584, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum46, 0x588, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum47, 0x58c, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_working_cycles, 0x590, 6, hwBits(48))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_waiting_cycles, 0x596, 6, hwBits(48))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_active_cycles, 0x59c, 6, hwBits(48))
REG(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_flags, 0x5a2, 1, hwBits(8))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum0, 0x5a3, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum1, 0x5a7, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum2, 0x5ab, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum3, 0x5af, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum4, 0x5b3, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum5, 0x5b7, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum6, 0x5bb, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum7, 0x5bf, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum8, 0x5c3, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum9, 0x5c7, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum10, 0x5cb, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum11, 0x5cf, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum12, 0x5d3, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum13, 0x5d7, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum14, 0x5db, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum15, 0x5df, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum16, 0x5e3, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum17, 0x5e7, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum18, 0x5eb, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum19, 0x5ef, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum20, 0x5f3, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum21, 0x5f7, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum22, 0x5fb, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum23, 0x5ff, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum24, 0x603, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum25, 0x607, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum26, 0x60b, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum27, 0x60f, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum28, 0x613, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum29, 0x617, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum30, 0x61b, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum31, 0x61f, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum32, 0x623, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum33, 0x627, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum34, 0x62b, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum35, 0x62f, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum36, 0x633, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum37, 0x637, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum38, 0x63b, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum39, 0x63f, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum40, 0x643, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum41, 0x647, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum42, 0x64b, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum43, 0x64f, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum44, 0x653, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum45, 0x657, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum46, 0x65b, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum47, 0x65f, 4, hwBits(32))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_working_cycles, 0x663, 6, hwBits(48))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_waiting_cycles, 0x669, 6, hwBits(48))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_active_cycles, 0x66f, 6, hwBits(48))
REG(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_flags, 0x675, 1, hwBits(8))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum0, 0x676, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum1, 0x67a, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum2, 0x67e, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum3, 0x682, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum4, 0x686, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum5, 0x68a, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum6, 0x68e, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum7, 0x692, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum8, 0x696, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum9, 0x69a, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum10, 0x69e, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum11, 0x6a2, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum12, 0x6a6, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum13, 0x6aa, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum14, 0x6ae, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum15, 0x6b2, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum16, 0x6b6, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum17, 0x6ba, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum18, 0x6be, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum19, 0x6c2, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum20, 0x6c6, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum21, 0x6ca, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum22, 0x6ce, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum23, 0x6d2, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum24, 0x6d6, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum25, 0x6da, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum26, 0x6de, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum27, 0x6e2, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum28, 0x6e6, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum29, 0x6ea, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum30, 0x6ee, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum31, 0x6f2, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum32, 0x6f6, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum33, 0x6fa, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum34, 0x6fe, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum35, 0x702, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum36, 0x706, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum37, 0x70a, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum38, 0x70e, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum39, 0x712, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum40, 0x716, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum41, 0x71a, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum42, 0x71e, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum43, 0x722, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum44, 0x726, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum45, 0x72a, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum46, 0x72e, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum47, 0x732, 4, hwBits(32))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_working_cycles, 0x736, 6, hwBits(48))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_waiting_cycles, 0x73c, 6, hwBits(48))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_active_cycles, 0x742, 6, hwBits(48))
REG(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_flags, 0x748, 1, hwBits(8))
REG(STREAMSTATUS_Stream_3_output.StreamStatus_OUT_checksum0, 0x749, 4, hwBits(32))
REG(STREAMSTATUS_Stream_3_output.StreamStatus_OUT_checksum1, 0x74d, 4, hwBits(32))
REG(STREAMSTATUS_Stream_3_output.StreamStatus_OUT_checksum2, 0x751, 4, hwBits(32))
REG(STREAMSTATUS_Stream_3_output.StreamStatus_OUT_checksum3, 0x755, 4, hwBits(32))
REG(STREAMSTATUS_Stream_3_output.StreamStatus_OUT_working_cycles, 0x759, 6, hwBits(48))
REG(STREAMSTATUS_Stream_3_output.StreamStatus_OUT_waiting_cycles, 0x75f, 6, hwBits(48))
REG(STREAMSTATUS_Stream_3_output.StreamStatus_OUT_active_cycles, 0x765, 6, hwBits(48))
REG(STREAMSTATUS_Stream_3_output.StreamStatus_OUT_flags, 0x76b, 1, hwBits(8))
REG(STREAMSTATUS_Stream_53_output.StreamStatus_OUT_checksum0, 0x76c, 4, hwBits(32))
REG(STREAMSTATUS_Stream_53_output.StreamStatus_OUT_working_cycles, 0x770, 6, hwBits(48))
REG(STREAMSTATUS_Stream_53_output.StreamStatus_OUT_waiting_cycles, 0x776, 6, hwBits(48))
REG(STREAMSTATUS_Stream_53_output.StreamStatus_OUT_active_cycles, 0x77c, 6, hwBits(48))
REG(STREAMSTATUS_Stream_53_output.StreamStatus_OUT_flags, 0x782, 1, hwBits(8))
REG(STREAMSTATUS_Stream_54_output.StreamStatus_OUT_checksum0, 0x783, 4, hwBits(32))
REG(STREAMSTATUS_Stream_54_output.StreamStatus_OUT_working_cycles, 0x787, 6, hwBits(48))
REG(STREAMSTATUS_Stream_54_output.StreamStatus_OUT_waiting_cycles, 0x78d, 6, hwBits(48))
REG(STREAMSTATUS_Stream_54_output.StreamStatus_OUT_active_cycles, 0x793, 6, hwBits(48))
REG(STREAMSTATUS_Stream_54_output.StreamStatus_OUT_flags, 0x799, 1, hwBits(8))
REG(STREAMSTATUS_Stream_55_output.StreamStatus_OUT_checksum0, 0x79a, 4, hwBits(32))
REG(STREAMSTATUS_Stream_55_output.StreamStatus_OUT_working_cycles, 0x79e, 6, hwBits(48))
REG(STREAMSTATUS_Stream_55_output.StreamStatus_OUT_waiting_cycles, 0x7a4, 6, hwBits(48))
REG(STREAMSTATUS_Stream_55_output.StreamStatus_OUT_active_cycles, 0x7aa, 6, hwBits(48))
REG(STREAMSTATUS_Stream_55_output.StreamStatus_OUT_flags, 0x7b0, 1, hwBits(8))
REG(STREAMSTATUS_Stream_56_output.StreamStatus_OUT_checksum0, 0x7b1, 4, hwBits(32))
REG(STREAMSTATUS_Stream_56_output.StreamStatus_OUT_working_cycles, 0x7b5, 6, hwBits(48))
REG(STREAMSTATUS_Stream_56_output.StreamStatus_OUT_waiting_cycles, 0x7bb, 6, hwBits(48))
REG(STREAMSTATUS_Stream_56_output.StreamStatus_OUT_active_cycles, 0x7c1, 6, hwBits(48))
REG(STREAMSTATUS_Stream_56_output.StreamStatus_OUT_flags, 0x7c7, 1, hwBits(8))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum0, 0x7c8, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum1, 0x7cc, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum2, 0x7d0, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum3, 0x7d4, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum4, 0x7d8, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum5, 0x7dc, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum6, 0x7e0, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum7, 0x7e4, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum8, 0x7e8, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum9, 0x7ec, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum10, 0x7f0, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum11, 0x7f4, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum12, 0x7f8, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum13, 0x7fc, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum14, 0x800, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum15, 0x804, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum16, 0x808, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum17, 0x80c, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum18, 0x810, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum19, 0x814, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum20, 0x818, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum21, 0x81c, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum22, 0x820, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum23, 0x824, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum24, 0x828, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum25, 0x82c, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum26, 0x830, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum27, 0x834, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum28, 0x838, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum29, 0x83c, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum30, 0x840, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum31, 0x844, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum32, 0x848, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum33, 0x84c, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum34, 0x850, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum35, 0x854, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum36, 0x858, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum37, 0x85c, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum38, 0x860, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum39, 0x864, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum40, 0x868, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum41, 0x86c, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum42, 0x870, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum43, 0x874, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum44, 0x878, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum45, 0x87c, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum46, 0x880, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum47, 0x884, 4, hwBits(32))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_working_cycles, 0x888, 6, hwBits(48))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_waiting_cycles, 0x88e, 6, hwBits(48))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_active_cycles, 0x894, 6, hwBits(48))
REG(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_flags, 0x89a, 1, hwBits(8))
REG(STREAMSTATUS_Stream_74_output.StreamStatus_OUT_checksum0, 0x89b, 4, hwBits(32))
REG(STREAMSTATUS_Stream_74_output.StreamStatus_OUT_working_cycles, 0x89f, 6, hwBits(48))
REG(STREAMSTATUS_Stream_74_output.StreamStatus_OUT_waiting_cycles, 0x8a5, 6, hwBits(48))
REG(STREAMSTATUS_Stream_74_output.StreamStatus_OUT_active_cycles, 0x8ab, 6, hwBits(48))
REG(STREAMSTATUS_Stream_74_output.StreamStatus_OUT_flags, 0x8b1, 1, hwBits(8))
REG(STREAMSTATUS_Stream_78_output.StreamStatus_OUT_checksum0, 0x8b2, 4, hwBits(32))
REG(STREAMSTATUS_Stream_78_output.StreamStatus_OUT_working_cycles, 0x8b6, 6, hwBits(48))
REG(STREAMSTATUS_Stream_78_output.StreamStatus_OUT_waiting_cycles, 0x8bc, 6, hwBits(48))
REG(STREAMSTATUS_Stream_78_output.StreamStatus_OUT_active_cycles, 0x8c2, 6, hwBits(48))
REG(STREAMSTATUS_Stream_78_output.StreamStatus_OUT_flags, 0x8c8, 1, hwBits(8))
REG(STREAMSTATUS_Stream_70_output.StreamStatus_OUT_checksum0, 0x8c9, 4, hwBits(32))
REG(STREAMSTATUS_Stream_70_output.StreamStatus_OUT_working_cycles, 0x8cd, 6, hwBits(48))
REG(STREAMSTATUS_Stream_70_output.StreamStatus_OUT_waiting_cycles, 0x8d3, 6, hwBits(48))
REG(STREAMSTATUS_Stream_70_output.StreamStatus_OUT_active_cycles, 0x8d9, 6, hwBits(48))
REG(STREAMSTATUS_Stream_70_output.StreamStatus_OUT_flags, 0x8df, 1, hwBits(8))
REG(STREAMSTATUS_Stream_82_output.StreamStatus_OUT_checksum0, 0x8e0, 4, hwBits(32))
REG(STREAMSTATUS_Stream_82_output.StreamStatus_OUT_working_cycles, 0x8e4, 6, hwBits(48))
REG(STREAMSTATUS_Stream_82_output.StreamStatus_OUT_waiting_cycles, 0x8ea, 6, hwBits(48))
REG(STREAMSTATUS_Stream_82_output.StreamStatus_OUT_active_cycles, 0x8f0, 6, hwBits(48))
REG(STREAMSTATUS_Stream_82_output.StreamStatus_OUT_flags, 0x8f6, 1, hwBits(8))
REG(MyApp0.io_dvv_force_disabled, 0x8f7, 1, hwOffsetFix(1, 0, UNSIGNED))
REG(MyApp0.io_p_force_disabled, 0x8f8, 1, hwOffsetFix(1, 0, UNSIGNED))
REG(MyApp0.io_pp_force_disabled, 0x8f9, 1, hwOffsetFix(1, 0, UNSIGNED))
REG(MyApp0.io_source_force_disabled, 0x8fa, 1, hwOffsetFix(1, 0, UNSIGNED))
REG(MyApp0.n1, 0x8fb, 4, hwOffsetFix(32, 0, TWOSCOMPLEMENT))
REG(MyApp0.n2, 0x8ff, 4, hwOffsetFix(32, 0, TWOSCOMPLEMENT))
REG(MyApp0.n3, 0x903, 4, hwOffsetFix(32, 0, TWOSCOMPLEMENT))
REG(MyApp0.n12, 0x907, 4, hwOffsetFix(32, 0, TWOSCOMPLEMENT))
REG(MyApp0.ORDER, 0x90b, 4, hwOffsetFix(32, 0, TWOSCOMPLEMENT))
REG(MyApp0.c_0, 0x90f, 4, hwFloat(8, 24))
REG(MyApp0.c_1_0, 0x913, 4, hwFloat(8, 24))
REG(MyApp0.c_1_1, 0x917, 4, hwFloat(8, 24))
REG(MyApp0.c_1_2, 0x91b, 4, hwFloat(8, 24))
REG(MyApp0.c_1_3, 0x91f, 4, hwFloat(8, 24))
REG(MyApp0.c_1_4, 0x923, 4, hwFloat(8, 24))
REG(MyApp0.c_2_0, 0x927, 4, hwFloat(8, 24))
REG(MyApp0.c_2_1, 0x92b, 4, hwFloat(8, 24))
REG(MyApp0.c_2_2, 0x92f, 4, hwFloat(8, 24))
REG(MyApp0.c_2_3, 0x933, 4, hwFloat(8, 24))
REG(MyApp0.c_2_4, 0x937, 4, hwFloat(8, 24))
REG(MyApp0.c_3_0, 0x93b, 4, hwFloat(8, 24))
REG(MyApp0.c_3_1, 0x93f, 4, hwFloat(8, 24))
REG(MyApp0.c_3_2, 0x943, 4, hwFloat(8, 24))
REG(MyApp0.c_3_3, 0x947, 4, hwFloat(8, 24))
REG(MyApp0.c_3_4, 0x94b, 4, hwFloat(8, 24))
REG(MyApp0.io_pp_out_force_disabled, 0x94f, 1, hwOffsetFix(1, 0, UNSIGNED))
REG(MyApp0.io_p_out_force_disabled, 0x950, 1, hwOffsetFix(1, 0, UNSIGNED))
REG(MyApp0.run_cycle_count, 0x951, 6, hwOffsetFix(48, 0, UNSIGNED))
REG(MyApp0.current_run_cycle_count, 0x957, 6, hwOffsetFix(48, 0, UNSIGNED))
REG(MyApp0.MyApp0_dbg_ctld_almost_empty, 0x95d, 1, hwBits(4))
REG(MyApp0.MyApp0_dbg_ctld_done, 0x95e, 1, hwBits(4))
REG(MyApp0.MyApp0_dbg_ctld_empty, 0x95f, 1, hwBits(4))
REG(MyApp0.MyApp0_dbg_ctld_read, 0x960, 1, hwBits(4))
REG(MyApp0.MyApp0_dbg_ctld_read_pipe_dbg, 0x961, 2, hwBits(12))
REG(MyApp0.MyApp0_dbg_ctld_request, 0x963, 1, hwBits(4))
REG(MyApp0.MyApp0_dbg_done_out, 0x964, 1, hwBits(1))
REG(MyApp0.MyApp0_dbg_fill_level, 0x965, 3, hwBits(18))
REG(MyApp0.MyApp0_dbg_flush_level, 0x968, 3, hwBits(18))
REG(MyApp0.MyApp0_dbg_flush_start, 0x96b, 1, hwBits(1))
REG(MyApp0.MyApp0_dbg_flush_start_level, 0x96c, 3, hwBits(18))
REG(MyApp0.MyApp0_dbg_flushing, 0x96f, 1, hwBits(1))
REG(MyApp0.MyApp0_dbg_full_level, 0x970, 3, hwBits(18))
REG(MyApp0.MyApp0_dbg_out_stall, 0x973, 1, hwBits(2))
REG(MyApp0.MyApp0_dbg_out_valid, 0x974, 1, hwBits(2))
REG(MyApp0.MyApp0_dbg_stall_vector, 0x975, 1, hwBits(2))
REG(STREAMSTATUS_MyApp0_pp_out.StreamStatus_OUT_checksum0, 0x976, 4, hwBits(32))
REG(STREAMSTATUS_MyApp0_pp_out.StreamStatus_OUT_working_cycles, 0x97a, 6, hwBits(48))
REG(STREAMSTATUS_MyApp0_pp_out.StreamStatus_OUT_waiting_cycles, 0x980, 6, hwBits(48))
REG(STREAMSTATUS_MyApp0_pp_out.StreamStatus_OUT_active_cycles, 0x986, 6, hwBits(48))
REG(STREAMSTATUS_MyApp0_pp_out.StreamStatus_OUT_flags, 0x98c, 1, hwBits(8))
REG(STREAMSTATUS_MyApp0_p_out.StreamStatus_OUT_checksum0, 0x98d, 4, hwBits(32))
REG(STREAMSTATUS_MyApp0_p_out.StreamStatus_OUT_working_cycles, 0x991, 6, hwBits(48))
REG(STREAMSTATUS_MyApp0_p_out.StreamStatus_OUT_waiting_cycles, 0x997, 6, hwBits(48))
REG(STREAMSTATUS_MyApp0_p_out.StreamStatus_OUT_active_cycles, 0x99d, 6, hwBits(48))
REG(STREAMSTATUS_MyApp0_p_out.StreamStatus_OUT_flags, 0x9a3, 1, hwBits(8))
REG(STREAMSTATUS_Stream_84_output.StreamStatus_OUT_checksum0, 0x9a4, 4, hwBits(32))
REG(STREAMSTATUS_Stream_84_output.StreamStatus_OUT_working_cycles, 0x9a8, 6, hwBits(48))
REG(STREAMSTATUS_Stream_84_output.StreamStatus_OUT_waiting_cycles, 0x9ae, 6, hwBits(48))
REG(STREAMSTATUS_Stream_84_output.StreamStatus_OUT_active_cycles, 0x9b4, 6, hwBits(48))
REG(STREAMSTATUS_Stream_84_output.StreamStatus_OUT_flags, 0x9ba, 1, hwBits(8))
REG(STREAMSTATUS_Stream_88_output.StreamStatus_OUT_checksum0, 0x9bb, 4, hwBits(32))
REG(STREAMSTATUS_Stream_88_output.StreamStatus_OUT_working_cycles, 0x9bf, 6, hwBits(48))
REG(STREAMSTATUS_Stream_88_output.StreamStatus_OUT_waiting_cycles, 0x9c5, 6, hwBits(48))
REG(STREAMSTATUS_Stream_88_output.StreamStatus_OUT_active_cycles, 0x9cb, 6, hwBits(48))
REG(STREAMSTATUS_Stream_88_output.StreamStatus_OUT_flags, 0x9d1, 1, hwBits(8))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum0, 0x9d2, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum1, 0x9d6, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum2, 0x9da, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum3, 0x9de, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum4, 0x9e2, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum5, 0x9e6, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum6, 0x9ea, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum7, 0x9ee, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum8, 0x9f2, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum9, 0x9f6, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum10, 0x9fa, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum11, 0x9fe, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum12, 0xa02, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum13, 0xa06, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum14, 0xa0a, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum15, 0xa0e, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum16, 0xa12, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum17, 0xa16, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum18, 0xa1a, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum19, 0xa1e, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum20, 0xa22, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum21, 0xa26, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum22, 0xa2a, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum23, 0xa2e, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum24, 0xa32, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum25, 0xa36, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum26, 0xa3a, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum27, 0xa3e, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum28, 0xa42, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum29, 0xa46, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum30, 0xa4a, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum31, 0xa4e, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum32, 0xa52, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum33, 0xa56, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum34, 0xa5a, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum35, 0xa5e, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum36, 0xa62, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum37, 0xa66, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum38, 0xa6a, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum39, 0xa6e, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum40, 0xa72, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum41, 0xa76, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum42, 0xa7a, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum43, 0xa7e, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum44, 0xa82, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum45, 0xa86, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum46, 0xa8a, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum47, 0xa8e, 4, hwBits(32))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_working_cycles, 0xa92, 6, hwBits(48))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_waiting_cycles, 0xa98, 6, hwBits(48))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_active_cycles, 0xa9e, 6, hwBits(48))
REG(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_flags, 0xaa4, 1, hwBits(8))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum0, 0xaa5, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum1, 0xaa9, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum2, 0xaad, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum3, 0xab1, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum4, 0xab5, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum5, 0xab9, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum6, 0xabd, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum7, 0xac1, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum8, 0xac5, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum9, 0xac9, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum10, 0xacd, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum11, 0xad1, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum12, 0xad5, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum13, 0xad9, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum14, 0xadd, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum15, 0xae1, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum16, 0xae5, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum17, 0xae9, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum18, 0xaed, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum19, 0xaf1, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum20, 0xaf5, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum21, 0xaf9, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum22, 0xafd, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum23, 0xb01, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum24, 0xb05, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum25, 0xb09, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum26, 0xb0d, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum27, 0xb11, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum28, 0xb15, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum29, 0xb19, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum30, 0xb1d, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum31, 0xb21, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum32, 0xb25, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum33, 0xb29, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum34, 0xb2d, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum35, 0xb31, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum36, 0xb35, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum37, 0xb39, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum38, 0xb3d, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum39, 0xb41, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum40, 0xb45, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum41, 0xb49, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum42, 0xb4d, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum43, 0xb51, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum44, 0xb55, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum45, 0xb59, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum46, 0xb5d, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum47, 0xb61, 4, hwBits(32))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_working_cycles, 0xb65, 6, hwBits(48))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_waiting_cycles, 0xb6b, 6, hwBits(48))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_active_cycles, 0xb71, 6, hwBits(48))
REG(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_flags, 0xb77, 1, hwBits(8))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum0, 0xb78, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum1, 0xb7c, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum2, 0xb80, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum3, 0xb84, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum4, 0xb88, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum5, 0xb8c, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum6, 0xb90, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum7, 0xb94, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum8, 0xb98, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum9, 0xb9c, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum10, 0xba0, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum11, 0xba4, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum12, 0xba8, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum13, 0xbac, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum14, 0xbb0, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum15, 0xbb4, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum16, 0xbb8, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum17, 0xbbc, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum18, 0xbc0, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum19, 0xbc4, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum20, 0xbc8, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum21, 0xbcc, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum22, 0xbd0, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum23, 0xbd4, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum24, 0xbd8, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum25, 0xbdc, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum26, 0xbe0, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum27, 0xbe4, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum28, 0xbe8, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum29, 0xbec, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum30, 0xbf0, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum31, 0xbf4, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum32, 0xbf8, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum33, 0xbfc, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum34, 0xc00, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum35, 0xc04, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum36, 0xc08, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum37, 0xc0c, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum38, 0xc10, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum39, 0xc14, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum40, 0xc18, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum41, 0xc1c, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum42, 0xc20, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum43, 0xc24, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum44, 0xc28, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum45, 0xc2c, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum46, 0xc30, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum47, 0xc34, 4, hwBits(32))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_working_cycles, 0xc38, 6, hwBits(48))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_waiting_cycles, 0xc3e, 6, hwBits(48))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_active_cycles, 0xc44, 6, hwBits(48))
REG(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_flags, 0xc4a, 1, hwBits(8))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum0, 0xc4b, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum1, 0xc4f, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum2, 0xc53, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum3, 0xc57, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum4, 0xc5b, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum5, 0xc5f, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum6, 0xc63, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum7, 0xc67, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum8, 0xc6b, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum9, 0xc6f, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum10, 0xc73, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum11, 0xc77, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum12, 0xc7b, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum13, 0xc7f, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum14, 0xc83, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum15, 0xc87, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum16, 0xc8b, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum17, 0xc8f, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum18, 0xc93, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum19, 0xc97, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum20, 0xc9b, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum21, 0xc9f, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum22, 0xca3, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum23, 0xca7, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum24, 0xcab, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum25, 0xcaf, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum26, 0xcb3, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum27, 0xcb7, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum28, 0xcbb, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum29, 0xcbf, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum30, 0xcc3, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum31, 0xcc7, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum32, 0xccb, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum33, 0xccf, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum34, 0xcd3, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum35, 0xcd7, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum36, 0xcdb, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum37, 0xcdf, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum38, 0xce3, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum39, 0xce7, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum40, 0xceb, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum41, 0xcef, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum42, 0xcf3, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum43, 0xcf7, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum44, 0xcfb, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum45, 0xcff, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum46, 0xd03, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum47, 0xd07, 4, hwBits(32))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_working_cycles, 0xd0b, 6, hwBits(48))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_waiting_cycles, 0xd11, 6, hwBits(48))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_active_cycles, 0xd17, 6, hwBits(48))
REG(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_flags, 0xd1d, 1, hwBits(8))
REG(MemoryControllerPro.MemoryControllerPro_Int_Enable_AND, 0xd1e, 1, hwBits(8))
REG(MemoryControllerPro.MemoryControllerPro_Int_Disable_OR, 0xd1f, 1, hwBits(8))
REG(MemoryControllerPro.MemoryControllerPro_phy_init_done, 0xd20, 1, hwBits(1))
REG(MemoryControllerPro.MemoryControllerPro_Arb_Control, 0xd21, 1, hwBits(8))
REG(ifpga.ifpga_ctrl, 0xd22, 1, hwBits(8))
REG(SignalForwardingAdapter.SFA_FORWARD_EN, 0xd23, 4, hwBits(32))
#endif

#ifdef REG_V2
#define REG_V2_PRESENT 1
REG_V2(Cmdhostread.iniBursts, 0x0, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdhostread.totalBursts, 0x4, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdhostread.wordsPerBurst, 0x8, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdhostread.Enable, 0xc, 1, hwOffsetFix(1, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdhostread.io_dram_read_force_disabled, 0xd, 1, hwOffsetFix(1, 0, UNSIGNED), HOST_WRITE_ONLY, true)
REG_V2(Cmdhostread.run_cycle_count, 0xe, 6, hwOffsetFix(48, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdhostread.current_run_cycle_count, 0x14, 6, hwOffsetFix(48, 0, UNSIGNED), HOST_READ_ONLY, false)
REG_V2(Cmdhostread.Cmdhostread_dbg_ctld_almost_empty, 0x1a, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdhostread.Cmdhostread_dbg_ctld_done, 0x1b, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdhostread.Cmdhostread_dbg_ctld_empty, 0x1c, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdhostread.Cmdhostread_dbg_ctld_read, 0x1d, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdhostread.Cmdhostread_dbg_ctld_read_pipe_dbg, 0x1e, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdhostread.Cmdhostread_dbg_ctld_request, 0x1f, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdhostread.Cmdhostread_dbg_done_out, 0x20, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdhostread.Cmdhostread_dbg_fill_level, 0x21, 1, hwBits(3), HOST_READ_ONLY, false)
REG_V2(Cmdhostread.Cmdhostread_dbg_flush_level, 0x22, 1, hwBits(3), HOST_READ_ONLY, false)
REG_V2(Cmdhostread.Cmdhostread_dbg_flush_start, 0x23, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdhostread.Cmdhostread_dbg_flush_start_level, 0x24, 1, hwBits(3), HOST_READ_ONLY, false)
REG_V2(Cmdhostread.Cmdhostread_dbg_flushing, 0x25, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdhostread.Cmdhostread_dbg_full_level, 0x26, 1, hwBits(3), HOST_READ_ONLY, false)
REG_V2(Cmdhostread.Cmdhostread_dbg_out_stall, 0x27, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdhostread.Cmdhostread_dbg_out_valid, 0x28, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdhostread.Cmdhostread_dbg_stall_vector, 0x29, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdhostwrite.iniBursts, 0x2a, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdhostwrite.iterations, 0x2e, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdhostwrite.totalBursts, 0x32, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdhostwrite.wordsPerBurst, 0x36, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdhostwrite.Enable, 0x3a, 1, hwOffsetFix(1, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdhostwrite.io_dram_write_force_disabled, 0x3b, 1, hwOffsetFix(1, 0, UNSIGNED), HOST_WRITE_ONLY, true)
REG_V2(Cmdhostwrite.run_cycle_count, 0x3c, 6, hwOffsetFix(48, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdhostwrite.current_run_cycle_count, 0x42, 6, hwOffsetFix(48, 0, UNSIGNED), HOST_READ_ONLY, false)
REG_V2(Cmdhostwrite.Cmdhostwrite_dbg_ctld_almost_empty, 0x48, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdhostwrite.Cmdhostwrite_dbg_ctld_done, 0x49, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdhostwrite.Cmdhostwrite_dbg_ctld_empty, 0x4a, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdhostwrite.Cmdhostwrite_dbg_ctld_read, 0x4b, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdhostwrite.Cmdhostwrite_dbg_ctld_read_pipe_dbg, 0x4c, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdhostwrite.Cmdhostwrite_dbg_ctld_request, 0x4d, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdhostwrite.Cmdhostwrite_dbg_done_out, 0x4e, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdhostwrite.Cmdhostwrite_dbg_fill_level, 0x4f, 1, hwBits(3), HOST_READ_ONLY, false)
REG_V2(Cmdhostwrite.Cmdhostwrite_dbg_flush_level, 0x50, 1, hwBits(3), HOST_READ_ONLY, false)
REG_V2(Cmdhostwrite.Cmdhostwrite_dbg_flush_start, 0x51, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdhostwrite.Cmdhostwrite_dbg_flush_start_level, 0x52, 1, hwBits(3), HOST_READ_ONLY, false)
REG_V2(Cmdhostwrite.Cmdhostwrite_dbg_flushing, 0x53, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdhostwrite.Cmdhostwrite_dbg_full_level, 0x54, 1, hwBits(3), HOST_READ_ONLY, false)
REG_V2(Cmdhostwrite.Cmdhostwrite_dbg_out_stall, 0x55, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdhostwrite.Cmdhostwrite_dbg_out_valid, 0x56, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdhostwrite.Cmdhostwrite_dbg_stall_vector, 0x57, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdread0.iniBursts, 0x58, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdread0.totalBursts, 0x5c, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdread0.wordsPerBurst, 0x60, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdread0.Enable, 0x64, 1, hwOffsetFix(1, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdread0.io_dram_read_force_disabled, 0x65, 1, hwOffsetFix(1, 0, UNSIGNED), HOST_WRITE_ONLY, true)
REG_V2(Cmdread0.run_cycle_count, 0x66, 6, hwOffsetFix(48, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdread0.current_run_cycle_count, 0x6c, 6, hwOffsetFix(48, 0, UNSIGNED), HOST_READ_ONLY, false)
REG_V2(Cmdread0.Cmdread0_dbg_ctld_almost_empty, 0x72, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdread0.Cmdread0_dbg_ctld_done, 0x73, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdread0.Cmdread0_dbg_ctld_empty, 0x74, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdread0.Cmdread0_dbg_ctld_read, 0x75, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdread0.Cmdread0_dbg_ctld_read_pipe_dbg, 0x76, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdread0.Cmdread0_dbg_ctld_request, 0x77, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdread0.Cmdread0_dbg_done_out, 0x78, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdread0.Cmdread0_dbg_fill_level, 0x79, 1, hwBits(3), HOST_READ_ONLY, false)
REG_V2(Cmdread0.Cmdread0_dbg_flush_level, 0x7a, 1, hwBits(3), HOST_READ_ONLY, false)
REG_V2(Cmdread0.Cmdread0_dbg_flush_start, 0x7b, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdread0.Cmdread0_dbg_flush_start_level, 0x7c, 1, hwBits(3), HOST_READ_ONLY, false)
REG_V2(Cmdread0.Cmdread0_dbg_flushing, 0x7d, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdread0.Cmdread0_dbg_full_level, 0x7e, 1, hwBits(3), HOST_READ_ONLY, false)
REG_V2(Cmdread0.Cmdread0_dbg_out_stall, 0x7f, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdread0.Cmdread0_dbg_out_valid, 0x80, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdread0.Cmdread0_dbg_stall_vector, 0x81, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdread1.iniBursts, 0x82, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdread1.totalBursts, 0x86, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdread1.wordsPerBurst, 0x8a, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdread1.Enable, 0x8e, 1, hwOffsetFix(1, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdread1.io_dram_read_force_disabled, 0x8f, 1, hwOffsetFix(1, 0, UNSIGNED), HOST_WRITE_ONLY, true)
REG_V2(Cmdread1.run_cycle_count, 0x90, 6, hwOffsetFix(48, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdread1.current_run_cycle_count, 0x96, 6, hwOffsetFix(48, 0, UNSIGNED), HOST_READ_ONLY, false)
REG_V2(Cmdread1.Cmdread1_dbg_ctld_almost_empty, 0x9c, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdread1.Cmdread1_dbg_ctld_done, 0x9d, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdread1.Cmdread1_dbg_ctld_empty, 0x9e, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdread1.Cmdread1_dbg_ctld_read, 0x9f, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdread1.Cmdread1_dbg_ctld_read_pipe_dbg, 0xa0, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdread1.Cmdread1_dbg_ctld_request, 0xa1, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdread1.Cmdread1_dbg_done_out, 0xa2, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdread1.Cmdread1_dbg_fill_level, 0xa3, 1, hwBits(3), HOST_READ_ONLY, false)
REG_V2(Cmdread1.Cmdread1_dbg_flush_level, 0xa4, 1, hwBits(3), HOST_READ_ONLY, false)
REG_V2(Cmdread1.Cmdread1_dbg_flush_start, 0xa5, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdread1.Cmdread1_dbg_flush_start_level, 0xa6, 1, hwBits(3), HOST_READ_ONLY, false)
REG_V2(Cmdread1.Cmdread1_dbg_flushing, 0xa7, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdread1.Cmdread1_dbg_full_level, 0xa8, 1, hwBits(3), HOST_READ_ONLY, false)
REG_V2(Cmdread1.Cmdread1_dbg_out_stall, 0xa9, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdread1.Cmdread1_dbg_out_valid, 0xaa, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdread1.Cmdread1_dbg_stall_vector, 0xab, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdread2.iniBursts, 0xac, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdread2.totalBursts, 0xb0, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdread2.wordsPerBurst, 0xb4, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdread2.Enable, 0xb8, 1, hwOffsetFix(1, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdread2.io_dram_read_force_disabled, 0xb9, 1, hwOffsetFix(1, 0, UNSIGNED), HOST_WRITE_ONLY, true)
REG_V2(Cmdread2.run_cycle_count, 0xba, 6, hwOffsetFix(48, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdread2.current_run_cycle_count, 0xc0, 6, hwOffsetFix(48, 0, UNSIGNED), HOST_READ_ONLY, false)
REG_V2(Cmdread2.Cmdread2_dbg_ctld_almost_empty, 0xc6, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdread2.Cmdread2_dbg_ctld_done, 0xc7, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdread2.Cmdread2_dbg_ctld_empty, 0xc8, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdread2.Cmdread2_dbg_ctld_read, 0xc9, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdread2.Cmdread2_dbg_ctld_read_pipe_dbg, 0xca, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdread2.Cmdread2_dbg_ctld_request, 0xcb, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdread2.Cmdread2_dbg_done_out, 0xcc, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdread2.Cmdread2_dbg_fill_level, 0xcd, 1, hwBits(3), HOST_READ_ONLY, false)
REG_V2(Cmdread2.Cmdread2_dbg_flush_level, 0xce, 1, hwBits(3), HOST_READ_ONLY, false)
REG_V2(Cmdread2.Cmdread2_dbg_flush_start, 0xcf, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdread2.Cmdread2_dbg_flush_start_level, 0xd0, 1, hwBits(3), HOST_READ_ONLY, false)
REG_V2(Cmdread2.Cmdread2_dbg_flushing, 0xd1, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdread2.Cmdread2_dbg_full_level, 0xd2, 1, hwBits(3), HOST_READ_ONLY, false)
REG_V2(Cmdread2.Cmdread2_dbg_out_stall, 0xd3, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdread2.Cmdread2_dbg_out_valid, 0xd4, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdread2.Cmdread2_dbg_stall_vector, 0xd5, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdread3.iniBursts, 0xd6, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdread3.totalBursts, 0xda, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdread3.wordsPerBurst, 0xde, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdread3.Enable, 0xe2, 1, hwOffsetFix(1, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdread3.io_dram_read_force_disabled, 0xe3, 1, hwOffsetFix(1, 0, UNSIGNED), HOST_WRITE_ONLY, true)
REG_V2(Cmdread3.run_cycle_count, 0xe4, 6, hwOffsetFix(48, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdread3.current_run_cycle_count, 0xea, 6, hwOffsetFix(48, 0, UNSIGNED), HOST_READ_ONLY, false)
REG_V2(Cmdread3.Cmdread3_dbg_ctld_almost_empty, 0xf0, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdread3.Cmdread3_dbg_ctld_done, 0xf1, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdread3.Cmdread3_dbg_ctld_empty, 0xf2, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdread3.Cmdread3_dbg_ctld_read, 0xf3, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdread3.Cmdread3_dbg_ctld_read_pipe_dbg, 0xf4, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdread3.Cmdread3_dbg_ctld_request, 0xf5, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdread3.Cmdread3_dbg_done_out, 0xf6, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdread3.Cmdread3_dbg_fill_level, 0xf7, 1, hwBits(3), HOST_READ_ONLY, false)
REG_V2(Cmdread3.Cmdread3_dbg_flush_level, 0xf8, 1, hwBits(3), HOST_READ_ONLY, false)
REG_V2(Cmdread3.Cmdread3_dbg_flush_start, 0xf9, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdread3.Cmdread3_dbg_flush_start_level, 0xfa, 1, hwBits(3), HOST_READ_ONLY, false)
REG_V2(Cmdread3.Cmdread3_dbg_flushing, 0xfb, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdread3.Cmdread3_dbg_full_level, 0xfc, 1, hwBits(3), HOST_READ_ONLY, false)
REG_V2(Cmdread3.Cmdread3_dbg_out_stall, 0xfd, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdread3.Cmdread3_dbg_out_valid, 0xfe, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdread3.Cmdread3_dbg_stall_vector, 0xff, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdwrite0.iniBursts, 0x100, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdwrite0.iterations, 0x104, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdwrite0.totalBursts, 0x108, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdwrite0.wordsPerBurst, 0x10c, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdwrite0.Enable, 0x110, 1, hwOffsetFix(1, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdwrite0.io_dram_write_force_disabled, 0x111, 1, hwOffsetFix(1, 0, UNSIGNED), HOST_WRITE_ONLY, true)
REG_V2(Cmdwrite0.run_cycle_count, 0x112, 6, hwOffsetFix(48, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdwrite0.current_run_cycle_count, 0x118, 6, hwOffsetFix(48, 0, UNSIGNED), HOST_READ_ONLY, false)
REG_V2(Cmdwrite0.Cmdwrite0_dbg_ctld_almost_empty, 0x11e, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdwrite0.Cmdwrite0_dbg_ctld_done, 0x11f, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdwrite0.Cmdwrite0_dbg_ctld_empty, 0x120, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdwrite0.Cmdwrite0_dbg_ctld_read, 0x121, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdwrite0.Cmdwrite0_dbg_ctld_read_pipe_dbg, 0x122, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdwrite0.Cmdwrite0_dbg_ctld_request, 0x123, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdwrite0.Cmdwrite0_dbg_done_out, 0x124, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdwrite0.Cmdwrite0_dbg_fill_level, 0x125, 1, hwBits(3), HOST_READ_ONLY, false)
REG_V2(Cmdwrite0.Cmdwrite0_dbg_flush_level, 0x126, 1, hwBits(3), HOST_READ_ONLY, false)
REG_V2(Cmdwrite0.Cmdwrite0_dbg_flush_start, 0x127, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdwrite0.Cmdwrite0_dbg_flush_start_level, 0x128, 1, hwBits(3), HOST_READ_ONLY, false)
REG_V2(Cmdwrite0.Cmdwrite0_dbg_flushing, 0x129, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdwrite0.Cmdwrite0_dbg_full_level, 0x12a, 1, hwBits(3), HOST_READ_ONLY, false)
REG_V2(Cmdwrite0.Cmdwrite0_dbg_out_stall, 0x12b, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdwrite0.Cmdwrite0_dbg_out_valid, 0x12c, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdwrite0.Cmdwrite0_dbg_stall_vector, 0x12d, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdwrite1.iniBursts, 0x12e, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdwrite1.iterations, 0x132, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdwrite1.totalBursts, 0x136, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdwrite1.wordsPerBurst, 0x13a, 4, hwOffsetFix(32, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdwrite1.Enable, 0x13e, 1, hwOffsetFix(1, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdwrite1.io_dram_write_force_disabled, 0x13f, 1, hwOffsetFix(1, 0, UNSIGNED), HOST_WRITE_ONLY, true)
REG_V2(Cmdwrite1.run_cycle_count, 0x140, 6, hwOffsetFix(48, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(Cmdwrite1.current_run_cycle_count, 0x146, 6, hwOffsetFix(48, 0, UNSIGNED), HOST_READ_ONLY, false)
REG_V2(Cmdwrite1.Cmdwrite1_dbg_ctld_almost_empty, 0x14c, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdwrite1.Cmdwrite1_dbg_ctld_done, 0x14d, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdwrite1.Cmdwrite1_dbg_ctld_empty, 0x14e, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdwrite1.Cmdwrite1_dbg_ctld_read, 0x14f, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdwrite1.Cmdwrite1_dbg_ctld_read_pipe_dbg, 0x150, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdwrite1.Cmdwrite1_dbg_ctld_request, 0x151, 1, hwBits(0), HOST_READ_ONLY, false)
REG_V2(Cmdwrite1.Cmdwrite1_dbg_done_out, 0x152, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdwrite1.Cmdwrite1_dbg_fill_level, 0x153, 1, hwBits(3), HOST_READ_ONLY, false)
REG_V2(Cmdwrite1.Cmdwrite1_dbg_flush_level, 0x154, 1, hwBits(3), HOST_READ_ONLY, false)
REG_V2(Cmdwrite1.Cmdwrite1_dbg_flush_start, 0x155, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdwrite1.Cmdwrite1_dbg_flush_start_level, 0x156, 1, hwBits(3), HOST_READ_ONLY, false)
REG_V2(Cmdwrite1.Cmdwrite1_dbg_flushing, 0x157, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdwrite1.Cmdwrite1_dbg_full_level, 0x158, 1, hwBits(3), HOST_READ_ONLY, false)
REG_V2(Cmdwrite1.Cmdwrite1_dbg_out_stall, 0x159, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdwrite1.Cmdwrite1_dbg_out_valid, 0x15a, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(Cmdwrite1.Cmdwrite1_dbg_stall_vector, 0x15b, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_host2mgr_host2mgr.StreamStatus_OUT_checksum0, 0x15c, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_host2mgr_host2mgr.StreamStatus_OUT_checksum1, 0x160, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_host2mgr_host2mgr.StreamStatus_OUT_checksum2, 0x164, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_host2mgr_host2mgr.StreamStatus_OUT_checksum3, 0x168, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_host2mgr_host2mgr.StreamStatus_OUT_working_cycles, 0x16c, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_host2mgr_host2mgr.StreamStatus_OUT_waiting_cycles, 0x172, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_host2mgr_host2mgr.StreamStatus_OUT_active_cycles, 0x178, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_host2mgr_host2mgr.StreamStatus_OUT_flags, 0x17e, 1, hwBits(8), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdhostread_dram_read.StreamStatus_OUT_checksum0, 0x17f, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdhostread_dram_read.StreamStatus_OUT_checksum1, 0x183, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdhostread_dram_read.StreamStatus_OUT_working_cycles, 0x187, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdhostread_dram_read.StreamStatus_OUT_waiting_cycles, 0x18d, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdhostread_dram_read.StreamStatus_OUT_active_cycles, 0x193, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdhostread_dram_read.StreamStatus_OUT_flags, 0x199, 1, hwBits(8), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdhostwrite_dram_write.StreamStatus_OUT_checksum0, 0x19a, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdhostwrite_dram_write.StreamStatus_OUT_checksum1, 0x19e, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdhostwrite_dram_write.StreamStatus_OUT_working_cycles, 0x1a2, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdhostwrite_dram_write.StreamStatus_OUT_waiting_cycles, 0x1a8, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdhostwrite_dram_write.StreamStatus_OUT_active_cycles, 0x1ae, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdhostwrite_dram_write.StreamStatus_OUT_flags, 0x1b4, 1, hwBits(8), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum0, 0x1b5, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum1, 0x1b9, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum2, 0x1bd, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum3, 0x1c1, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum4, 0x1c5, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum5, 0x1c9, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum6, 0x1cd, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum7, 0x1d1, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum8, 0x1d5, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum9, 0x1d9, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum10, 0x1dd, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum11, 0x1e1, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum12, 0x1e5, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum13, 0x1e9, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum14, 0x1ed, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum15, 0x1f1, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum16, 0x1f5, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum17, 0x1f9, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum18, 0x1fd, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum19, 0x201, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum20, 0x205, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum21, 0x209, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum22, 0x20d, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum23, 0x211, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum24, 0x215, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum25, 0x219, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum26, 0x21d, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum27, 0x221, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum28, 0x225, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum29, 0x229, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum30, 0x22d, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum31, 0x231, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum32, 0x235, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum33, 0x239, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum34, 0x23d, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum35, 0x241, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum36, 0x245, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum37, 0x249, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum38, 0x24d, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum39, 0x251, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum40, 0x255, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum41, 0x259, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum42, 0x25d, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum43, 0x261, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum44, 0x265, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum45, 0x269, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum46, 0x26d, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_checksum47, 0x271, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_working_cycles, 0x275, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_waiting_cycles, 0x27b, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_active_cycles, 0x281, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_flags, 0x287, 1, hwBits(8), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdread0_dram_read.StreamStatus_OUT_checksum0, 0x288, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdread0_dram_read.StreamStatus_OUT_checksum1, 0x28c, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdread0_dram_read.StreamStatus_OUT_working_cycles, 0x290, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdread0_dram_read.StreamStatus_OUT_waiting_cycles, 0x296, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdread0_dram_read.StreamStatus_OUT_active_cycles, 0x29c, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdread0_dram_read.StreamStatus_OUT_flags, 0x2a2, 1, hwBits(8), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdread1_dram_read.StreamStatus_OUT_checksum0, 0x2a3, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdread1_dram_read.StreamStatus_OUT_checksum1, 0x2a7, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdread1_dram_read.StreamStatus_OUT_working_cycles, 0x2ab, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdread1_dram_read.StreamStatus_OUT_waiting_cycles, 0x2b1, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdread1_dram_read.StreamStatus_OUT_active_cycles, 0x2b7, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdread1_dram_read.StreamStatus_OUT_flags, 0x2bd, 1, hwBits(8), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdread2_dram_read.StreamStatus_OUT_checksum0, 0x2be, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdread2_dram_read.StreamStatus_OUT_checksum1, 0x2c2, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdread2_dram_read.StreamStatus_OUT_working_cycles, 0x2c6, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdread2_dram_read.StreamStatus_OUT_waiting_cycles, 0x2cc, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdread2_dram_read.StreamStatus_OUT_active_cycles, 0x2d2, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdread2_dram_read.StreamStatus_OUT_flags, 0x2d8, 1, hwBits(8), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdread3_dram_read.StreamStatus_OUT_checksum0, 0x2d9, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdread3_dram_read.StreamStatus_OUT_checksum1, 0x2dd, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdread3_dram_read.StreamStatus_OUT_working_cycles, 0x2e1, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdread3_dram_read.StreamStatus_OUT_waiting_cycles, 0x2e7, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdread3_dram_read.StreamStatus_OUT_active_cycles, 0x2ed, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdread3_dram_read.StreamStatus_OUT_flags, 0x2f3, 1, hwBits(8), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdwrite0_dram_write.StreamStatus_OUT_checksum0, 0x2f4, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdwrite0_dram_write.StreamStatus_OUT_checksum1, 0x2f8, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdwrite0_dram_write.StreamStatus_OUT_working_cycles, 0x2fc, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdwrite0_dram_write.StreamStatus_OUT_waiting_cycles, 0x302, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdwrite0_dram_write.StreamStatus_OUT_active_cycles, 0x308, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdwrite0_dram_write.StreamStatus_OUT_flags, 0x30e, 1, hwBits(8), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdwrite1_dram_write.StreamStatus_OUT_checksum0, 0x30f, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdwrite1_dram_write.StreamStatus_OUT_checksum1, 0x313, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdwrite1_dram_write.StreamStatus_OUT_working_cycles, 0x317, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdwrite1_dram_write.StreamStatus_OUT_waiting_cycles, 0x31d, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdwrite1_dram_write.StreamStatus_OUT_active_cycles, 0x323, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Cmdwrite1_dram_write.StreamStatus_OUT_flags, 0x329, 1, hwBits(8), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum0, 0x32a, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum1, 0x32e, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum2, 0x332, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum3, 0x336, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum4, 0x33a, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum5, 0x33e, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum6, 0x342, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum7, 0x346, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum8, 0x34a, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum9, 0x34e, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum10, 0x352, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum11, 0x356, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum12, 0x35a, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum13, 0x35e, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum14, 0x362, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum15, 0x366, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum16, 0x36a, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum17, 0x36e, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum18, 0x372, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum19, 0x376, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum20, 0x37a, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum21, 0x37e, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum22, 0x382, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum23, 0x386, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum24, 0x38a, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum25, 0x38e, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum26, 0x392, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum27, 0x396, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum28, 0x39a, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum29, 0x39e, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum30, 0x3a2, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum31, 0x3a6, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum32, 0x3aa, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum33, 0x3ae, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum34, 0x3b2, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum35, 0x3b6, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum36, 0x3ba, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum37, 0x3be, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum38, 0x3c2, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum39, 0x3c6, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum40, 0x3ca, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum41, 0x3ce, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum42, 0x3d2, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum43, 0x3d6, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum44, 0x3da, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum45, 0x3de, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum46, 0x3e2, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_checksum47, 0x3e6, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_working_cycles, 0x3ea, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_waiting_cycles, 0x3f0, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_active_cycles, 0x3f6, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_flags, 0x3fc, 1, hwBits(8), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum0, 0x3fd, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum1, 0x401, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum2, 0x405, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum3, 0x409, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum4, 0x40d, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum5, 0x411, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum6, 0x415, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum7, 0x419, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum8, 0x41d, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum9, 0x421, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum10, 0x425, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum11, 0x429, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum12, 0x42d, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum13, 0x431, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum14, 0x435, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum15, 0x439, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum16, 0x43d, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum17, 0x441, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum18, 0x445, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum19, 0x449, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum20, 0x44d, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum21, 0x451, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum22, 0x455, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum23, 0x459, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum24, 0x45d, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum25, 0x461, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum26, 0x465, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum27, 0x469, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum28, 0x46d, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum29, 0x471, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum30, 0x475, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum31, 0x479, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum32, 0x47d, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum33, 0x481, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum34, 0x485, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum35, 0x489, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum36, 0x48d, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum37, 0x491, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum38, 0x495, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum39, 0x499, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum40, 0x49d, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum41, 0x4a1, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum42, 0x4a5, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum43, 0x4a9, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum44, 0x4ad, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum45, 0x4b1, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum46, 0x4b5, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_checksum47, 0x4b9, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_working_cycles, 0x4bd, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_waiting_cycles, 0x4c3, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_active_cycles, 0x4c9, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_flags, 0x4cf, 1, hwBits(8), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum0, 0x4d0, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum1, 0x4d4, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum2, 0x4d8, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum3, 0x4dc, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum4, 0x4e0, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum5, 0x4e4, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum6, 0x4e8, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum7, 0x4ec, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum8, 0x4f0, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum9, 0x4f4, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum10, 0x4f8, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum11, 0x4fc, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum12, 0x500, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum13, 0x504, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum14, 0x508, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum15, 0x50c, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum16, 0x510, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum17, 0x514, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum18, 0x518, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum19, 0x51c, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum20, 0x520, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum21, 0x524, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum22, 0x528, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum23, 0x52c, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum24, 0x530, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum25, 0x534, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum26, 0x538, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum27, 0x53c, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum28, 0x540, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum29, 0x544, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum30, 0x548, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum31, 0x54c, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum32, 0x550, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum33, 0x554, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum34, 0x558, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum35, 0x55c, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum36, 0x560, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum37, 0x564, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum38, 0x568, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum39, 0x56c, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum40, 0x570, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum41, 0x574, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum42, 0x578, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum43, 0x57c, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum44, 0x580, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum45, 0x584, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum46, 0x588, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_checksum47, 0x58c, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_working_cycles, 0x590, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_waiting_cycles, 0x596, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_active_cycles, 0x59c, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_flags, 0x5a2, 1, hwBits(8), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum0, 0x5a3, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum1, 0x5a7, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum2, 0x5ab, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum3, 0x5af, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum4, 0x5b3, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum5, 0x5b7, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum6, 0x5bb, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum7, 0x5bf, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum8, 0x5c3, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum9, 0x5c7, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum10, 0x5cb, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum11, 0x5cf, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum12, 0x5d3, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum13, 0x5d7, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum14, 0x5db, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum15, 0x5df, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum16, 0x5e3, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum17, 0x5e7, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum18, 0x5eb, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum19, 0x5ef, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum20, 0x5f3, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum21, 0x5f7, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum22, 0x5fb, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum23, 0x5ff, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum24, 0x603, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum25, 0x607, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum26, 0x60b, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum27, 0x60f, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum28, 0x613, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum29, 0x617, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum30, 0x61b, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum31, 0x61f, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum32, 0x623, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum33, 0x627, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum34, 0x62b, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum35, 0x62f, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum36, 0x633, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum37, 0x637, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum38, 0x63b, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum39, 0x63f, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum40, 0x643, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum41, 0x647, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum42, 0x64b, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum43, 0x64f, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum44, 0x653, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum45, 0x657, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum46, 0x65b, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_checksum47, 0x65f, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_working_cycles, 0x663, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_waiting_cycles, 0x669, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_active_cycles, 0x66f, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_flags, 0x675, 1, hwBits(8), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum0, 0x676, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum1, 0x67a, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum2, 0x67e, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum3, 0x682, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum4, 0x686, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum5, 0x68a, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum6, 0x68e, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum7, 0x692, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum8, 0x696, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum9, 0x69a, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum10, 0x69e, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum11, 0x6a2, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum12, 0x6a6, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum13, 0x6aa, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum14, 0x6ae, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum15, 0x6b2, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum16, 0x6b6, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum17, 0x6ba, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum18, 0x6be, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum19, 0x6c2, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum20, 0x6c6, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum21, 0x6ca, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum22, 0x6ce, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum23, 0x6d2, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum24, 0x6d6, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum25, 0x6da, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum26, 0x6de, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum27, 0x6e2, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum28, 0x6e6, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum29, 0x6ea, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum30, 0x6ee, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum31, 0x6f2, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum32, 0x6f6, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum33, 0x6fa, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum34, 0x6fe, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum35, 0x702, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum36, 0x706, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum37, 0x70a, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum38, 0x70e, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum39, 0x712, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum40, 0x716, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum41, 0x71a, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum42, 0x71e, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum43, 0x722, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum44, 0x726, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum45, 0x72a, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum46, 0x72e, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_checksum47, 0x732, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_working_cycles, 0x736, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_waiting_cycles, 0x73c, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_active_cycles, 0x742, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_flags, 0x748, 1, hwBits(8), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_3_output.StreamStatus_OUT_checksum0, 0x749, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_3_output.StreamStatus_OUT_checksum1, 0x74d, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_3_output.StreamStatus_OUT_checksum2, 0x751, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_3_output.StreamStatus_OUT_checksum3, 0x755, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_3_output.StreamStatus_OUT_working_cycles, 0x759, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_3_output.StreamStatus_OUT_waiting_cycles, 0x75f, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_3_output.StreamStatus_OUT_active_cycles, 0x765, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_3_output.StreamStatus_OUT_flags, 0x76b, 1, hwBits(8), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_53_output.StreamStatus_OUT_checksum0, 0x76c, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_53_output.StreamStatus_OUT_working_cycles, 0x770, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_53_output.StreamStatus_OUT_waiting_cycles, 0x776, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_53_output.StreamStatus_OUT_active_cycles, 0x77c, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_53_output.StreamStatus_OUT_flags, 0x782, 1, hwBits(8), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_54_output.StreamStatus_OUT_checksum0, 0x783, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_54_output.StreamStatus_OUT_working_cycles, 0x787, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_54_output.StreamStatus_OUT_waiting_cycles, 0x78d, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_54_output.StreamStatus_OUT_active_cycles, 0x793, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_54_output.StreamStatus_OUT_flags, 0x799, 1, hwBits(8), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_55_output.StreamStatus_OUT_checksum0, 0x79a, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_55_output.StreamStatus_OUT_working_cycles, 0x79e, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_55_output.StreamStatus_OUT_waiting_cycles, 0x7a4, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_55_output.StreamStatus_OUT_active_cycles, 0x7aa, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_55_output.StreamStatus_OUT_flags, 0x7b0, 1, hwBits(8), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_56_output.StreamStatus_OUT_checksum0, 0x7b1, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_56_output.StreamStatus_OUT_working_cycles, 0x7b5, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_56_output.StreamStatus_OUT_waiting_cycles, 0x7bb, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_56_output.StreamStatus_OUT_active_cycles, 0x7c1, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_56_output.StreamStatus_OUT_flags, 0x7c7, 1, hwBits(8), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum0, 0x7c8, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum1, 0x7cc, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum2, 0x7d0, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum3, 0x7d4, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum4, 0x7d8, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum5, 0x7dc, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum6, 0x7e0, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum7, 0x7e4, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum8, 0x7e8, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum9, 0x7ec, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum10, 0x7f0, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum11, 0x7f4, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum12, 0x7f8, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum13, 0x7fc, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum14, 0x800, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum15, 0x804, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum16, 0x808, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum17, 0x80c, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum18, 0x810, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum19, 0x814, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum20, 0x818, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum21, 0x81c, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum22, 0x820, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum23, 0x824, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum24, 0x828, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum25, 0x82c, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum26, 0x830, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum27, 0x834, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum28, 0x838, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum29, 0x83c, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum30, 0x840, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum31, 0x844, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum32, 0x848, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum33, 0x84c, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum34, 0x850, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum35, 0x854, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum36, 0x858, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum37, 0x85c, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum38, 0x860, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum39, 0x864, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum40, 0x868, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum41, 0x86c, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum42, 0x870, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum43, 0x874, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum44, 0x878, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum45, 0x87c, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum46, 0x880, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_checksum47, 0x884, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_working_cycles, 0x888, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_waiting_cycles, 0x88e, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_active_cycles, 0x894, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_flags, 0x89a, 1, hwBits(8), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_74_output.StreamStatus_OUT_checksum0, 0x89b, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_74_output.StreamStatus_OUT_working_cycles, 0x89f, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_74_output.StreamStatus_OUT_waiting_cycles, 0x8a5, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_74_output.StreamStatus_OUT_active_cycles, 0x8ab, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_74_output.StreamStatus_OUT_flags, 0x8b1, 1, hwBits(8), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_78_output.StreamStatus_OUT_checksum0, 0x8b2, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_78_output.StreamStatus_OUT_working_cycles, 0x8b6, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_78_output.StreamStatus_OUT_waiting_cycles, 0x8bc, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_78_output.StreamStatus_OUT_active_cycles, 0x8c2, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_78_output.StreamStatus_OUT_flags, 0x8c8, 1, hwBits(8), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_70_output.StreamStatus_OUT_checksum0, 0x8c9, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_70_output.StreamStatus_OUT_working_cycles, 0x8cd, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_70_output.StreamStatus_OUT_waiting_cycles, 0x8d3, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_70_output.StreamStatus_OUT_active_cycles, 0x8d9, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_70_output.StreamStatus_OUT_flags, 0x8df, 1, hwBits(8), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_82_output.StreamStatus_OUT_checksum0, 0x8e0, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_82_output.StreamStatus_OUT_working_cycles, 0x8e4, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_82_output.StreamStatus_OUT_waiting_cycles, 0x8ea, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_82_output.StreamStatus_OUT_active_cycles, 0x8f0, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_82_output.StreamStatus_OUT_flags, 0x8f6, 1, hwBits(8), HOST_READ_ONLY, false)
REG_V2(MyApp0.io_dvv_force_disabled, 0x8f7, 1, hwOffsetFix(1, 0, UNSIGNED), HOST_WRITE_ONLY, true)
REG_V2(MyApp0.io_p_force_disabled, 0x8f8, 1, hwOffsetFix(1, 0, UNSIGNED), HOST_WRITE_ONLY, true)
REG_V2(MyApp0.io_pp_force_disabled, 0x8f9, 1, hwOffsetFix(1, 0, UNSIGNED), HOST_WRITE_ONLY, true)
REG_V2(MyApp0.io_source_force_disabled, 0x8fa, 1, hwOffsetFix(1, 0, UNSIGNED), HOST_WRITE_ONLY, true)
REG_V2(MyApp0.n1, 0x8fb, 4, hwOffsetFix(32, 0, TWOSCOMPLEMENT), HOST_WRITE_ONLY, false)
REG_V2(MyApp0.n2, 0x8ff, 4, hwOffsetFix(32, 0, TWOSCOMPLEMENT), HOST_WRITE_ONLY, false)
REG_V2(MyApp0.n3, 0x903, 4, hwOffsetFix(32, 0, TWOSCOMPLEMENT), HOST_WRITE_ONLY, false)
REG_V2(MyApp0.n12, 0x907, 4, hwOffsetFix(32, 0, TWOSCOMPLEMENT), HOST_WRITE_ONLY, false)
REG_V2(MyApp0.ORDER, 0x90b, 4, hwOffsetFix(32, 0, TWOSCOMPLEMENT), HOST_WRITE_ONLY, false)
REG_V2(MyApp0.c_0, 0x90f, 4, hwFloat(8, 24), HOST_WRITE_ONLY, false)
REG_V2(MyApp0.c_1_0, 0x913, 4, hwFloat(8, 24), HOST_WRITE_ONLY, false)
REG_V2(MyApp0.c_1_1, 0x917, 4, hwFloat(8, 24), HOST_WRITE_ONLY, false)
REG_V2(MyApp0.c_1_2, 0x91b, 4, hwFloat(8, 24), HOST_WRITE_ONLY, false)
REG_V2(MyApp0.c_1_3, 0x91f, 4, hwFloat(8, 24), HOST_WRITE_ONLY, false)
REG_V2(MyApp0.c_1_4, 0x923, 4, hwFloat(8, 24), HOST_WRITE_ONLY, false)
REG_V2(MyApp0.c_2_0, 0x927, 4, hwFloat(8, 24), HOST_WRITE_ONLY, false)
REG_V2(MyApp0.c_2_1, 0x92b, 4, hwFloat(8, 24), HOST_WRITE_ONLY, false)
REG_V2(MyApp0.c_2_2, 0x92f, 4, hwFloat(8, 24), HOST_WRITE_ONLY, false)
REG_V2(MyApp0.c_2_3, 0x933, 4, hwFloat(8, 24), HOST_WRITE_ONLY, false)
REG_V2(MyApp0.c_2_4, 0x937, 4, hwFloat(8, 24), HOST_WRITE_ONLY, false)
REG_V2(MyApp0.c_3_0, 0x93b, 4, hwFloat(8, 24), HOST_WRITE_ONLY, false)
REG_V2(MyApp0.c_3_1, 0x93f, 4, hwFloat(8, 24), HOST_WRITE_ONLY, false)
REG_V2(MyApp0.c_3_2, 0x943, 4, hwFloat(8, 24), HOST_WRITE_ONLY, false)
REG_V2(MyApp0.c_3_3, 0x947, 4, hwFloat(8, 24), HOST_WRITE_ONLY, false)
REG_V2(MyApp0.c_3_4, 0x94b, 4, hwFloat(8, 24), HOST_WRITE_ONLY, false)
REG_V2(MyApp0.io_pp_out_force_disabled, 0x94f, 1, hwOffsetFix(1, 0, UNSIGNED), HOST_WRITE_ONLY, true)
REG_V2(MyApp0.io_p_out_force_disabled, 0x950, 1, hwOffsetFix(1, 0, UNSIGNED), HOST_WRITE_ONLY, true)
REG_V2(MyApp0.run_cycle_count, 0x951, 6, hwOffsetFix(48, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(MyApp0.current_run_cycle_count, 0x957, 6, hwOffsetFix(48, 0, UNSIGNED), HOST_READ_ONLY, false)
REG_V2(MyApp0.MyApp0_dbg_ctld_almost_empty, 0x95d, 1, hwBits(4), HOST_READ_ONLY, false)
REG_V2(MyApp0.MyApp0_dbg_ctld_done, 0x95e, 1, hwBits(4), HOST_READ_ONLY, false)
REG_V2(MyApp0.MyApp0_dbg_ctld_empty, 0x95f, 1, hwBits(4), HOST_READ_ONLY, false)
REG_V2(MyApp0.MyApp0_dbg_ctld_read, 0x960, 1, hwBits(4), HOST_READ_ONLY, false)
REG_V2(MyApp0.MyApp0_dbg_ctld_read_pipe_dbg, 0x961, 2, hwBits(12), HOST_READ_ONLY, false)
REG_V2(MyApp0.MyApp0_dbg_ctld_request, 0x963, 1, hwBits(4), HOST_READ_ONLY, false)
REG_V2(MyApp0.MyApp0_dbg_done_out, 0x964, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(MyApp0.MyApp0_dbg_fill_level, 0x965, 3, hwBits(18), HOST_READ_ONLY, false)
REG_V2(MyApp0.MyApp0_dbg_flush_level, 0x968, 3, hwBits(18), HOST_READ_ONLY, false)
REG_V2(MyApp0.MyApp0_dbg_flush_start, 0x96b, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(MyApp0.MyApp0_dbg_flush_start_level, 0x96c, 3, hwBits(18), HOST_READ_ONLY, false)
REG_V2(MyApp0.MyApp0_dbg_flushing, 0x96f, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(MyApp0.MyApp0_dbg_full_level, 0x970, 3, hwBits(18), HOST_READ_ONLY, false)
REG_V2(MyApp0.MyApp0_dbg_out_stall, 0x973, 1, hwBits(2), HOST_READ_ONLY, false)
REG_V2(MyApp0.MyApp0_dbg_out_valid, 0x974, 1, hwBits(2), HOST_READ_ONLY, false)
REG_V2(MyApp0.MyApp0_dbg_stall_vector, 0x975, 1, hwBits(2), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_MyApp0_pp_out.StreamStatus_OUT_checksum0, 0x976, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_MyApp0_pp_out.StreamStatus_OUT_working_cycles, 0x97a, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_MyApp0_pp_out.StreamStatus_OUT_waiting_cycles, 0x980, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_MyApp0_pp_out.StreamStatus_OUT_active_cycles, 0x986, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_MyApp0_pp_out.StreamStatus_OUT_flags, 0x98c, 1, hwBits(8), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_MyApp0_p_out.StreamStatus_OUT_checksum0, 0x98d, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_MyApp0_p_out.StreamStatus_OUT_working_cycles, 0x991, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_MyApp0_p_out.StreamStatus_OUT_waiting_cycles, 0x997, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_MyApp0_p_out.StreamStatus_OUT_active_cycles, 0x99d, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_MyApp0_p_out.StreamStatus_OUT_flags, 0x9a3, 1, hwBits(8), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_84_output.StreamStatus_OUT_checksum0, 0x9a4, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_84_output.StreamStatus_OUT_working_cycles, 0x9a8, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_84_output.StreamStatus_OUT_waiting_cycles, 0x9ae, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_84_output.StreamStatus_OUT_active_cycles, 0x9b4, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_84_output.StreamStatus_OUT_flags, 0x9ba, 1, hwBits(8), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_88_output.StreamStatus_OUT_checksum0, 0x9bb, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_88_output.StreamStatus_OUT_working_cycles, 0x9bf, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_88_output.StreamStatus_OUT_waiting_cycles, 0x9c5, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_88_output.StreamStatus_OUT_active_cycles, 0x9cb, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_88_output.StreamStatus_OUT_flags, 0x9d1, 1, hwBits(8), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum0, 0x9d2, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum1, 0x9d6, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum2, 0x9da, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum3, 0x9de, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum4, 0x9e2, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum5, 0x9e6, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum6, 0x9ea, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum7, 0x9ee, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum8, 0x9f2, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum9, 0x9f6, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum10, 0x9fa, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum11, 0x9fe, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum12, 0xa02, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum13, 0xa06, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum14, 0xa0a, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum15, 0xa0e, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum16, 0xa12, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum17, 0xa16, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum18, 0xa1a, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum19, 0xa1e, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum20, 0xa22, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum21, 0xa26, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum22, 0xa2a, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum23, 0xa2e, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum24, 0xa32, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum25, 0xa36, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum26, 0xa3a, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum27, 0xa3e, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum28, 0xa42, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum29, 0xa46, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum30, 0xa4a, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum31, 0xa4e, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum32, 0xa52, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum33, 0xa56, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum34, 0xa5a, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum35, 0xa5e, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum36, 0xa62, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum37, 0xa66, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum38, 0xa6a, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum39, 0xa6e, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum40, 0xa72, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum41, 0xa76, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum42, 0xa7a, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum43, 0xa7e, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum44, 0xa82, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum45, 0xa86, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum46, 0xa8a, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_checksum47, 0xa8e, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_working_cycles, 0xa92, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_waiting_cycles, 0xa98, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_active_cycles, 0xa9e, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_flags, 0xaa4, 1, hwBits(8), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum0, 0xaa5, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum1, 0xaa9, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum2, 0xaad, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum3, 0xab1, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum4, 0xab5, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum5, 0xab9, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum6, 0xabd, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum7, 0xac1, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum8, 0xac5, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum9, 0xac9, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum10, 0xacd, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum11, 0xad1, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum12, 0xad5, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum13, 0xad9, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum14, 0xadd, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum15, 0xae1, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum16, 0xae5, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum17, 0xae9, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum18, 0xaed, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum19, 0xaf1, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum20, 0xaf5, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum21, 0xaf9, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum22, 0xafd, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum23, 0xb01, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum24, 0xb05, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum25, 0xb09, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum26, 0xb0d, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum27, 0xb11, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum28, 0xb15, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum29, 0xb19, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum30, 0xb1d, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum31, 0xb21, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum32, 0xb25, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum33, 0xb29, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum34, 0xb2d, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum35, 0xb31, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum36, 0xb35, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum37, 0xb39, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum38, 0xb3d, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum39, 0xb41, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum40, 0xb45, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum41, 0xb49, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum42, 0xb4d, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum43, 0xb51, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum44, 0xb55, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum45, 0xb59, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum46, 0xb5d, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_checksum47, 0xb61, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_working_cycles, 0xb65, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_waiting_cycles, 0xb6b, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_active_cycles, 0xb71, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_flags, 0xb77, 1, hwBits(8), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum0, 0xb78, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum1, 0xb7c, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum2, 0xb80, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum3, 0xb84, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum4, 0xb88, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum5, 0xb8c, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum6, 0xb90, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum7, 0xb94, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum8, 0xb98, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum9, 0xb9c, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum10, 0xba0, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum11, 0xba4, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum12, 0xba8, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum13, 0xbac, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum14, 0xbb0, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum15, 0xbb4, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum16, 0xbb8, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum17, 0xbbc, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum18, 0xbc0, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum19, 0xbc4, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum20, 0xbc8, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum21, 0xbcc, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum22, 0xbd0, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum23, 0xbd4, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum24, 0xbd8, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum25, 0xbdc, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum26, 0xbe0, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum27, 0xbe4, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum28, 0xbe8, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum29, 0xbec, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum30, 0xbf0, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum31, 0xbf4, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum32, 0xbf8, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum33, 0xbfc, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum34, 0xc00, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum35, 0xc04, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum36, 0xc08, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum37, 0xc0c, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum38, 0xc10, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum39, 0xc14, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum40, 0xc18, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum41, 0xc1c, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum42, 0xc20, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum43, 0xc24, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum44, 0xc28, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum45, 0xc2c, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum46, 0xc30, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_checksum47, 0xc34, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_working_cycles, 0xc38, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_waiting_cycles, 0xc3e, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_active_cycles, 0xc44, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_flags, 0xc4a, 1, hwBits(8), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum0, 0xc4b, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum1, 0xc4f, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum2, 0xc53, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum3, 0xc57, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum4, 0xc5b, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum5, 0xc5f, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum6, 0xc63, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum7, 0xc67, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum8, 0xc6b, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum9, 0xc6f, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum10, 0xc73, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum11, 0xc77, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum12, 0xc7b, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum13, 0xc7f, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum14, 0xc83, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum15, 0xc87, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum16, 0xc8b, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum17, 0xc8f, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum18, 0xc93, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum19, 0xc97, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum20, 0xc9b, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum21, 0xc9f, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum22, 0xca3, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum23, 0xca7, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum24, 0xcab, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum25, 0xcaf, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum26, 0xcb3, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum27, 0xcb7, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum28, 0xcbb, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum29, 0xcbf, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum30, 0xcc3, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum31, 0xcc7, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum32, 0xccb, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum33, 0xccf, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum34, 0xcd3, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum35, 0xcd7, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum36, 0xcdb, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum37, 0xcdf, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum38, 0xce3, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum39, 0xce7, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum40, 0xceb, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum41, 0xcef, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum42, 0xcf3, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum43, 0xcf7, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum44, 0xcfb, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum45, 0xcff, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum46, 0xd03, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_checksum47, 0xd07, 4, hwBits(32), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_working_cycles, 0xd0b, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_waiting_cycles, 0xd11, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_active_cycles, 0xd17, 6, hwBits(48), HOST_READ_ONLY, false)
REG_V2(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_flags, 0xd1d, 1, hwBits(8), HOST_READ_ONLY, false)
REG_V2(MemoryControllerPro.MemoryControllerPro_Int_Enable_AND, 0xd1e, 1, hwBits(8), HOST_WRITE_ONLY, false)
REG_V2(MemoryControllerPro.MemoryControllerPro_Int_Disable_OR, 0xd1f, 1, hwBits(8), HOST_WRITE_ONLY, false)
REG_V2(MemoryControllerPro.MemoryControllerPro_phy_init_done, 0xd20, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(MemoryControllerPro.MemoryControllerPro_Arb_Control, 0xd21, 1, hwBits(8), HOST_READ_WRITE, false)
REG_V2(ifpga.ifpga_ctrl, 0xd22, 1, hwBits(8), HOST_READ_WRITE, false)
REG_V2(SignalForwardingAdapter.SFA_FORWARD_EN, 0xd23, 4, hwBits(32), HOST_READ_WRITE, false)
#endif

#ifdef REG_BITFIELD
#define REG_BITFIELD_PRESENT 1
REG_BITFIELD(STREAMSTATUS_host2mgr_host2mgr.StreamStatus_OUT_flags, error_working_and_waiting, 0, 1)
REG_BITFIELD(STREAMSTATUS_host2mgr_host2mgr.StreamStatus_OUT_flags, error_working_after_done, 1, 1)
REG_BITFIELD(STREAMSTATUS_host2mgr_host2mgr.StreamStatus_OUT_flags, error_fifo_overflow, 2, 1)
REG_BITFIELD(STREAMSTATUS_host2mgr_host2mgr.StreamStatus_OUT_flags, error_fifo_underflow, 3, 1)
REG_BITFIELD(STREAMSTATUS_host2mgr_host2mgr.StreamStatus_OUT_flags, is_push_interface, 4, 1)
REG_BITFIELD(STREAMSTATUS_host2mgr_host2mgr.StreamStatus_OUT_flags, is_waiting, 5, 1)
REG_BITFIELD(STREAMSTATUS_host2mgr_host2mgr.StreamStatus_OUT_flags, is_done, 6, 1)
REG_BITFIELD(STREAMSTATUS_host2mgr_host2mgr.StreamStatus_OUT_flags, fifo_exists, 7, 1)
REG_BITFIELD(STREAMSTATUS_Cmdhostread_dram_read.StreamStatus_OUT_flags, error_working_and_waiting, 0, 1)
REG_BITFIELD(STREAMSTATUS_Cmdhostread_dram_read.StreamStatus_OUT_flags, error_working_after_done, 1, 1)
REG_BITFIELD(STREAMSTATUS_Cmdhostread_dram_read.StreamStatus_OUT_flags, error_fifo_overflow, 2, 1)
REG_BITFIELD(STREAMSTATUS_Cmdhostread_dram_read.StreamStatus_OUT_flags, error_fifo_underflow, 3, 1)
REG_BITFIELD(STREAMSTATUS_Cmdhostread_dram_read.StreamStatus_OUT_flags, is_push_interface, 4, 1)
REG_BITFIELD(STREAMSTATUS_Cmdhostread_dram_read.StreamStatus_OUT_flags, is_waiting, 5, 1)
REG_BITFIELD(STREAMSTATUS_Cmdhostread_dram_read.StreamStatus_OUT_flags, is_done, 6, 1)
REG_BITFIELD(STREAMSTATUS_Cmdhostread_dram_read.StreamStatus_OUT_flags, fifo_exists, 7, 1)
REG_BITFIELD(STREAMSTATUS_Cmdhostwrite_dram_write.StreamStatus_OUT_flags, error_working_and_waiting, 0, 1)
REG_BITFIELD(STREAMSTATUS_Cmdhostwrite_dram_write.StreamStatus_OUT_flags, error_working_after_done, 1, 1)
REG_BITFIELD(STREAMSTATUS_Cmdhostwrite_dram_write.StreamStatus_OUT_flags, error_fifo_overflow, 2, 1)
REG_BITFIELD(STREAMSTATUS_Cmdhostwrite_dram_write.StreamStatus_OUT_flags, error_fifo_underflow, 3, 1)
REG_BITFIELD(STREAMSTATUS_Cmdhostwrite_dram_write.StreamStatus_OUT_flags, is_push_interface, 4, 1)
REG_BITFIELD(STREAMSTATUS_Cmdhostwrite_dram_write.StreamStatus_OUT_flags, is_waiting, 5, 1)
REG_BITFIELD(STREAMSTATUS_Cmdhostwrite_dram_write.StreamStatus_OUT_flags, is_done, 6, 1)
REG_BITFIELD(STREAMSTATUS_Cmdhostwrite_dram_write.StreamStatus_OUT_flags, fifo_exists, 7, 1)
REG_BITFIELD(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_flags, error_working_and_waiting, 0, 1)
REG_BITFIELD(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_flags, error_working_after_done, 1, 1)
REG_BITFIELD(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_flags, error_fifo_overflow, 2, 1)
REG_BITFIELD(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_flags, error_fifo_underflow, 3, 1)
REG_BITFIELD(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_flags, is_push_interface, 4, 1)
REG_BITFIELD(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_flags, is_waiting, 5, 1)
REG_BITFIELD(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_flags, is_done, 6, 1)
REG_BITFIELD(STREAMSTATUS_dram2mgr_dram2mgr.StreamStatus_OUT_flags, fifo_exists, 7, 1)
REG_BITFIELD(STREAMSTATUS_Cmdread0_dram_read.StreamStatus_OUT_flags, error_working_and_waiting, 0, 1)
REG_BITFIELD(STREAMSTATUS_Cmdread0_dram_read.StreamStatus_OUT_flags, error_working_after_done, 1, 1)
REG_BITFIELD(STREAMSTATUS_Cmdread0_dram_read.StreamStatus_OUT_flags, error_fifo_overflow, 2, 1)
REG_BITFIELD(STREAMSTATUS_Cmdread0_dram_read.StreamStatus_OUT_flags, error_fifo_underflow, 3, 1)
REG_BITFIELD(STREAMSTATUS_Cmdread0_dram_read.StreamStatus_OUT_flags, is_push_interface, 4, 1)
REG_BITFIELD(STREAMSTATUS_Cmdread0_dram_read.StreamStatus_OUT_flags, is_waiting, 5, 1)
REG_BITFIELD(STREAMSTATUS_Cmdread0_dram_read.StreamStatus_OUT_flags, is_done, 6, 1)
REG_BITFIELD(STREAMSTATUS_Cmdread0_dram_read.StreamStatus_OUT_flags, fifo_exists, 7, 1)
REG_BITFIELD(STREAMSTATUS_Cmdread1_dram_read.StreamStatus_OUT_flags, error_working_and_waiting, 0, 1)
REG_BITFIELD(STREAMSTATUS_Cmdread1_dram_read.StreamStatus_OUT_flags, error_working_after_done, 1, 1)
REG_BITFIELD(STREAMSTATUS_Cmdread1_dram_read.StreamStatus_OUT_flags, error_fifo_overflow, 2, 1)
REG_BITFIELD(STREAMSTATUS_Cmdread1_dram_read.StreamStatus_OUT_flags, error_fifo_underflow, 3, 1)
REG_BITFIELD(STREAMSTATUS_Cmdread1_dram_read.StreamStatus_OUT_flags, is_push_interface, 4, 1)
REG_BITFIELD(STREAMSTATUS_Cmdread1_dram_read.StreamStatus_OUT_flags, is_waiting, 5, 1)
REG_BITFIELD(STREAMSTATUS_Cmdread1_dram_read.StreamStatus_OUT_flags, is_done, 6, 1)
REG_BITFIELD(STREAMSTATUS_Cmdread1_dram_read.StreamStatus_OUT_flags, fifo_exists, 7, 1)
REG_BITFIELD(STREAMSTATUS_Cmdread2_dram_read.StreamStatus_OUT_flags, error_working_and_waiting, 0, 1)
REG_BITFIELD(STREAMSTATUS_Cmdread2_dram_read.StreamStatus_OUT_flags, error_working_after_done, 1, 1)
REG_BITFIELD(STREAMSTATUS_Cmdread2_dram_read.StreamStatus_OUT_flags, error_fifo_overflow, 2, 1)
REG_BITFIELD(STREAMSTATUS_Cmdread2_dram_read.StreamStatus_OUT_flags, error_fifo_underflow, 3, 1)
REG_BITFIELD(STREAMSTATUS_Cmdread2_dram_read.StreamStatus_OUT_flags, is_push_interface, 4, 1)
REG_BITFIELD(STREAMSTATUS_Cmdread2_dram_read.StreamStatus_OUT_flags, is_waiting, 5, 1)
REG_BITFIELD(STREAMSTATUS_Cmdread2_dram_read.StreamStatus_OUT_flags, is_done, 6, 1)
REG_BITFIELD(STREAMSTATUS_Cmdread2_dram_read.StreamStatus_OUT_flags, fifo_exists, 7, 1)
REG_BITFIELD(STREAMSTATUS_Cmdread3_dram_read.StreamStatus_OUT_flags, error_working_and_waiting, 0, 1)
REG_BITFIELD(STREAMSTATUS_Cmdread3_dram_read.StreamStatus_OUT_flags, error_working_after_done, 1, 1)
REG_BITFIELD(STREAMSTATUS_Cmdread3_dram_read.StreamStatus_OUT_flags, error_fifo_overflow, 2, 1)
REG_BITFIELD(STREAMSTATUS_Cmdread3_dram_read.StreamStatus_OUT_flags, error_fifo_underflow, 3, 1)
REG_BITFIELD(STREAMSTATUS_Cmdread3_dram_read.StreamStatus_OUT_flags, is_push_interface, 4, 1)
REG_BITFIELD(STREAMSTATUS_Cmdread3_dram_read.StreamStatus_OUT_flags, is_waiting, 5, 1)
REG_BITFIELD(STREAMSTATUS_Cmdread3_dram_read.StreamStatus_OUT_flags, is_done, 6, 1)
REG_BITFIELD(STREAMSTATUS_Cmdread3_dram_read.StreamStatus_OUT_flags, fifo_exists, 7, 1)
REG_BITFIELD(STREAMSTATUS_Cmdwrite0_dram_write.StreamStatus_OUT_flags, error_working_and_waiting, 0, 1)
REG_BITFIELD(STREAMSTATUS_Cmdwrite0_dram_write.StreamStatus_OUT_flags, error_working_after_done, 1, 1)
REG_BITFIELD(STREAMSTATUS_Cmdwrite0_dram_write.StreamStatus_OUT_flags, error_fifo_overflow, 2, 1)
REG_BITFIELD(STREAMSTATUS_Cmdwrite0_dram_write.StreamStatus_OUT_flags, error_fifo_underflow, 3, 1)
REG_BITFIELD(STREAMSTATUS_Cmdwrite0_dram_write.StreamStatus_OUT_flags, is_push_interface, 4, 1)
REG_BITFIELD(STREAMSTATUS_Cmdwrite0_dram_write.StreamStatus_OUT_flags, is_waiting, 5, 1)
REG_BITFIELD(STREAMSTATUS_Cmdwrite0_dram_write.StreamStatus_OUT_flags, is_done, 6, 1)
REG_BITFIELD(STREAMSTATUS_Cmdwrite0_dram_write.StreamStatus_OUT_flags, fifo_exists, 7, 1)
REG_BITFIELD(STREAMSTATUS_Cmdwrite1_dram_write.StreamStatus_OUT_flags, error_working_and_waiting, 0, 1)
REG_BITFIELD(STREAMSTATUS_Cmdwrite1_dram_write.StreamStatus_OUT_flags, error_working_after_done, 1, 1)
REG_BITFIELD(STREAMSTATUS_Cmdwrite1_dram_write.StreamStatus_OUT_flags, error_fifo_overflow, 2, 1)
REG_BITFIELD(STREAMSTATUS_Cmdwrite1_dram_write.StreamStatus_OUT_flags, error_fifo_underflow, 3, 1)
REG_BITFIELD(STREAMSTATUS_Cmdwrite1_dram_write.StreamStatus_OUT_flags, is_push_interface, 4, 1)
REG_BITFIELD(STREAMSTATUS_Cmdwrite1_dram_write.StreamStatus_OUT_flags, is_waiting, 5, 1)
REG_BITFIELD(STREAMSTATUS_Cmdwrite1_dram_write.StreamStatus_OUT_flags, is_done, 6, 1)
REG_BITFIELD(STREAMSTATUS_Cmdwrite1_dram_write.StreamStatus_OUT_flags, fifo_exists, 7, 1)
REG_BITFIELD(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_flags, error_working_and_waiting, 0, 1)
REG_BITFIELD(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_flags, error_working_after_done, 1, 1)
REG_BITFIELD(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_flags, error_fifo_overflow, 2, 1)
REG_BITFIELD(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_flags, error_fifo_underflow, 3, 1)
REG_BITFIELD(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_flags, is_push_interface, 4, 1)
REG_BITFIELD(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_flags, is_waiting, 5, 1)
REG_BITFIELD(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_flags, is_done, 6, 1)
REG_BITFIELD(STREAMSTATUS_dram2knl0_dram2knl0.StreamStatus_OUT_flags, fifo_exists, 7, 1)
REG_BITFIELD(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_flags, error_working_and_waiting, 0, 1)
REG_BITFIELD(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_flags, error_working_after_done, 1, 1)
REG_BITFIELD(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_flags, error_fifo_overflow, 2, 1)
REG_BITFIELD(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_flags, error_fifo_underflow, 3, 1)
REG_BITFIELD(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_flags, is_push_interface, 4, 1)
REG_BITFIELD(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_flags, is_waiting, 5, 1)
REG_BITFIELD(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_flags, is_done, 6, 1)
REG_BITFIELD(STREAMSTATUS_dram2knl1_dram2knl1.StreamStatus_OUT_flags, fifo_exists, 7, 1)
REG_BITFIELD(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_flags, error_working_and_waiting, 0, 1)
REG_BITFIELD(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_flags, error_working_after_done, 1, 1)
REG_BITFIELD(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_flags, error_fifo_overflow, 2, 1)
REG_BITFIELD(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_flags, error_fifo_underflow, 3, 1)
REG_BITFIELD(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_flags, is_push_interface, 4, 1)
REG_BITFIELD(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_flags, is_waiting, 5, 1)
REG_BITFIELD(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_flags, is_done, 6, 1)
REG_BITFIELD(STREAMSTATUS_dram2knl2_dram2knl2.StreamStatus_OUT_flags, fifo_exists, 7, 1)
REG_BITFIELD(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_flags, error_working_and_waiting, 0, 1)
REG_BITFIELD(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_flags, error_working_after_done, 1, 1)
REG_BITFIELD(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_flags, error_fifo_overflow, 2, 1)
REG_BITFIELD(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_flags, error_fifo_underflow, 3, 1)
REG_BITFIELD(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_flags, is_push_interface, 4, 1)
REG_BITFIELD(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_flags, is_waiting, 5, 1)
REG_BITFIELD(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_flags, is_done, 6, 1)
REG_BITFIELD(STREAMSTATUS_dram2knl3_dram2knl3.StreamStatus_OUT_flags, fifo_exists, 7, 1)
REG_BITFIELD(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_flags, error_working_and_waiting, 0, 1)
REG_BITFIELD(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_flags, error_working_after_done, 1, 1)
REG_BITFIELD(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_flags, error_fifo_overflow, 2, 1)
REG_BITFIELD(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_flags, error_fifo_underflow, 3, 1)
REG_BITFIELD(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_flags, is_push_interface, 4, 1)
REG_BITFIELD(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_flags, is_waiting, 5, 1)
REG_BITFIELD(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_flags, is_done, 6, 1)
REG_BITFIELD(STREAMSTATUS_Stream_15_output.StreamStatus_OUT_flags, fifo_exists, 7, 1)
REG_BITFIELD(STREAMSTATUS_Stream_3_output.StreamStatus_OUT_flags, error_working_and_waiting, 0, 1)
REG_BITFIELD(STREAMSTATUS_Stream_3_output.StreamStatus_OUT_flags, error_working_after_done, 1, 1)
REG_BITFIELD(STREAMSTATUS_Stream_3_output.StreamStatus_OUT_flags, error_fifo_overflow, 2, 1)
REG_BITFIELD(STREAMSTATUS_Stream_3_output.StreamStatus_OUT_flags, error_fifo_underflow, 3, 1)
REG_BITFIELD(STREAMSTATUS_Stream_3_output.StreamStatus_OUT_flags, is_push_interface, 4, 1)
REG_BITFIELD(STREAMSTATUS_Stream_3_output.StreamStatus_OUT_flags, is_waiting, 5, 1)
REG_BITFIELD(STREAMSTATUS_Stream_3_output.StreamStatus_OUT_flags, is_done, 6, 1)
REG_BITFIELD(STREAMSTATUS_Stream_3_output.StreamStatus_OUT_flags, fifo_exists, 7, 1)
REG_BITFIELD(STREAMSTATUS_Stream_53_output.StreamStatus_OUT_flags, error_working_and_waiting, 0, 1)
REG_BITFIELD(STREAMSTATUS_Stream_53_output.StreamStatus_OUT_flags, error_working_after_done, 1, 1)
REG_BITFIELD(STREAMSTATUS_Stream_53_output.StreamStatus_OUT_flags, error_fifo_overflow, 2, 1)
REG_BITFIELD(STREAMSTATUS_Stream_53_output.StreamStatus_OUT_flags, error_fifo_underflow, 3, 1)
REG_BITFIELD(STREAMSTATUS_Stream_53_output.StreamStatus_OUT_flags, is_push_interface, 4, 1)
REG_BITFIELD(STREAMSTATUS_Stream_53_output.StreamStatus_OUT_flags, is_waiting, 5, 1)
REG_BITFIELD(STREAMSTATUS_Stream_53_output.StreamStatus_OUT_flags, is_done, 6, 1)
REG_BITFIELD(STREAMSTATUS_Stream_53_output.StreamStatus_OUT_flags, fifo_exists, 7, 1)
REG_BITFIELD(STREAMSTATUS_Stream_54_output.StreamStatus_OUT_flags, error_working_and_waiting, 0, 1)
REG_BITFIELD(STREAMSTATUS_Stream_54_output.StreamStatus_OUT_flags, error_working_after_done, 1, 1)
REG_BITFIELD(STREAMSTATUS_Stream_54_output.StreamStatus_OUT_flags, error_fifo_overflow, 2, 1)
REG_BITFIELD(STREAMSTATUS_Stream_54_output.StreamStatus_OUT_flags, error_fifo_underflow, 3, 1)
REG_BITFIELD(STREAMSTATUS_Stream_54_output.StreamStatus_OUT_flags, is_push_interface, 4, 1)
REG_BITFIELD(STREAMSTATUS_Stream_54_output.StreamStatus_OUT_flags, is_waiting, 5, 1)
REG_BITFIELD(STREAMSTATUS_Stream_54_output.StreamStatus_OUT_flags, is_done, 6, 1)
REG_BITFIELD(STREAMSTATUS_Stream_54_output.StreamStatus_OUT_flags, fifo_exists, 7, 1)
REG_BITFIELD(STREAMSTATUS_Stream_55_output.StreamStatus_OUT_flags, error_working_and_waiting, 0, 1)
REG_BITFIELD(STREAMSTATUS_Stream_55_output.StreamStatus_OUT_flags, error_working_after_done, 1, 1)
REG_BITFIELD(STREAMSTATUS_Stream_55_output.StreamStatus_OUT_flags, error_fifo_overflow, 2, 1)
REG_BITFIELD(STREAMSTATUS_Stream_55_output.StreamStatus_OUT_flags, error_fifo_underflow, 3, 1)
REG_BITFIELD(STREAMSTATUS_Stream_55_output.StreamStatus_OUT_flags, is_push_interface, 4, 1)
REG_BITFIELD(STREAMSTATUS_Stream_55_output.StreamStatus_OUT_flags, is_waiting, 5, 1)
REG_BITFIELD(STREAMSTATUS_Stream_55_output.StreamStatus_OUT_flags, is_done, 6, 1)
REG_BITFIELD(STREAMSTATUS_Stream_55_output.StreamStatus_OUT_flags, fifo_exists, 7, 1)
REG_BITFIELD(STREAMSTATUS_Stream_56_output.StreamStatus_OUT_flags, error_working_and_waiting, 0, 1)
REG_BITFIELD(STREAMSTATUS_Stream_56_output.StreamStatus_OUT_flags, error_working_after_done, 1, 1)
REG_BITFIELD(STREAMSTATUS_Stream_56_output.StreamStatus_OUT_flags, error_fifo_overflow, 2, 1)
REG_BITFIELD(STREAMSTATUS_Stream_56_output.StreamStatus_OUT_flags, error_fifo_underflow, 3, 1)
REG_BITFIELD(STREAMSTATUS_Stream_56_output.StreamStatus_OUT_flags, is_push_interface, 4, 1)
REG_BITFIELD(STREAMSTATUS_Stream_56_output.StreamStatus_OUT_flags, is_waiting, 5, 1)
REG_BITFIELD(STREAMSTATUS_Stream_56_output.StreamStatus_OUT_flags, is_done, 6, 1)
REG_BITFIELD(STREAMSTATUS_Stream_56_output.StreamStatus_OUT_flags, fifo_exists, 7, 1)
REG_BITFIELD(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_flags, error_working_and_waiting, 0, 1)
REG_BITFIELD(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_flags, error_working_after_done, 1, 1)
REG_BITFIELD(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_flags, error_fifo_overflow, 2, 1)
REG_BITFIELD(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_flags, error_fifo_underflow, 3, 1)
REG_BITFIELD(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_flags, is_push_interface, 4, 1)
REG_BITFIELD(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_flags, is_waiting, 5, 1)
REG_BITFIELD(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_flags, is_done, 6, 1)
REG_BITFIELD(STREAMSTATUS_Stream_62_output.StreamStatus_OUT_flags, fifo_exists, 7, 1)
REG_BITFIELD(STREAMSTATUS_Stream_74_output.StreamStatus_OUT_flags, error_working_and_waiting, 0, 1)
REG_BITFIELD(STREAMSTATUS_Stream_74_output.StreamStatus_OUT_flags, error_working_after_done, 1, 1)
REG_BITFIELD(STREAMSTATUS_Stream_74_output.StreamStatus_OUT_flags, error_fifo_overflow, 2, 1)
REG_BITFIELD(STREAMSTATUS_Stream_74_output.StreamStatus_OUT_flags, error_fifo_underflow, 3, 1)
REG_BITFIELD(STREAMSTATUS_Stream_74_output.StreamStatus_OUT_flags, is_push_interface, 4, 1)
REG_BITFIELD(STREAMSTATUS_Stream_74_output.StreamStatus_OUT_flags, is_waiting, 5, 1)
REG_BITFIELD(STREAMSTATUS_Stream_74_output.StreamStatus_OUT_flags, is_done, 6, 1)
REG_BITFIELD(STREAMSTATUS_Stream_74_output.StreamStatus_OUT_flags, fifo_exists, 7, 1)
REG_BITFIELD(STREAMSTATUS_Stream_78_output.StreamStatus_OUT_flags, error_working_and_waiting, 0, 1)
REG_BITFIELD(STREAMSTATUS_Stream_78_output.StreamStatus_OUT_flags, error_working_after_done, 1, 1)
REG_BITFIELD(STREAMSTATUS_Stream_78_output.StreamStatus_OUT_flags, error_fifo_overflow, 2, 1)
REG_BITFIELD(STREAMSTATUS_Stream_78_output.StreamStatus_OUT_flags, error_fifo_underflow, 3, 1)
REG_BITFIELD(STREAMSTATUS_Stream_78_output.StreamStatus_OUT_flags, is_push_interface, 4, 1)
REG_BITFIELD(STREAMSTATUS_Stream_78_output.StreamStatus_OUT_flags, is_waiting, 5, 1)
REG_BITFIELD(STREAMSTATUS_Stream_78_output.StreamStatus_OUT_flags, is_done, 6, 1)
REG_BITFIELD(STREAMSTATUS_Stream_78_output.StreamStatus_OUT_flags, fifo_exists, 7, 1)
REG_BITFIELD(STREAMSTATUS_Stream_70_output.StreamStatus_OUT_flags, error_working_and_waiting, 0, 1)
REG_BITFIELD(STREAMSTATUS_Stream_70_output.StreamStatus_OUT_flags, error_working_after_done, 1, 1)
REG_BITFIELD(STREAMSTATUS_Stream_70_output.StreamStatus_OUT_flags, error_fifo_overflow, 2, 1)
REG_BITFIELD(STREAMSTATUS_Stream_70_output.StreamStatus_OUT_flags, error_fifo_underflow, 3, 1)
REG_BITFIELD(STREAMSTATUS_Stream_70_output.StreamStatus_OUT_flags, is_push_interface, 4, 1)
REG_BITFIELD(STREAMSTATUS_Stream_70_output.StreamStatus_OUT_flags, is_waiting, 5, 1)
REG_BITFIELD(STREAMSTATUS_Stream_70_output.StreamStatus_OUT_flags, is_done, 6, 1)
REG_BITFIELD(STREAMSTATUS_Stream_70_output.StreamStatus_OUT_flags, fifo_exists, 7, 1)
REG_BITFIELD(STREAMSTATUS_Stream_82_output.StreamStatus_OUT_flags, error_working_and_waiting, 0, 1)
REG_BITFIELD(STREAMSTATUS_Stream_82_output.StreamStatus_OUT_flags, error_working_after_done, 1, 1)
REG_BITFIELD(STREAMSTATUS_Stream_82_output.StreamStatus_OUT_flags, error_fifo_overflow, 2, 1)
REG_BITFIELD(STREAMSTATUS_Stream_82_output.StreamStatus_OUT_flags, error_fifo_underflow, 3, 1)
REG_BITFIELD(STREAMSTATUS_Stream_82_output.StreamStatus_OUT_flags, is_push_interface, 4, 1)
REG_BITFIELD(STREAMSTATUS_Stream_82_output.StreamStatus_OUT_flags, is_waiting, 5, 1)
REG_BITFIELD(STREAMSTATUS_Stream_82_output.StreamStatus_OUT_flags, is_done, 6, 1)
REG_BITFIELD(STREAMSTATUS_Stream_82_output.StreamStatus_OUT_flags, fifo_exists, 7, 1)
REG_BITFIELD(STREAMSTATUS_MyApp0_pp_out.StreamStatus_OUT_flags, error_working_and_waiting, 0, 1)
REG_BITFIELD(STREAMSTATUS_MyApp0_pp_out.StreamStatus_OUT_flags, error_working_after_done, 1, 1)
REG_BITFIELD(STREAMSTATUS_MyApp0_pp_out.StreamStatus_OUT_flags, error_fifo_overflow, 2, 1)
REG_BITFIELD(STREAMSTATUS_MyApp0_pp_out.StreamStatus_OUT_flags, error_fifo_underflow, 3, 1)
REG_BITFIELD(STREAMSTATUS_MyApp0_pp_out.StreamStatus_OUT_flags, is_push_interface, 4, 1)
REG_BITFIELD(STREAMSTATUS_MyApp0_pp_out.StreamStatus_OUT_flags, is_waiting, 5, 1)
REG_BITFIELD(STREAMSTATUS_MyApp0_pp_out.StreamStatus_OUT_flags, is_done, 6, 1)
REG_BITFIELD(STREAMSTATUS_MyApp0_pp_out.StreamStatus_OUT_flags, fifo_exists, 7, 1)
REG_BITFIELD(STREAMSTATUS_MyApp0_p_out.StreamStatus_OUT_flags, error_working_and_waiting, 0, 1)
REG_BITFIELD(STREAMSTATUS_MyApp0_p_out.StreamStatus_OUT_flags, error_working_after_done, 1, 1)
REG_BITFIELD(STREAMSTATUS_MyApp0_p_out.StreamStatus_OUT_flags, error_fifo_overflow, 2, 1)
REG_BITFIELD(STREAMSTATUS_MyApp0_p_out.StreamStatus_OUT_flags, error_fifo_underflow, 3, 1)
REG_BITFIELD(STREAMSTATUS_MyApp0_p_out.StreamStatus_OUT_flags, is_push_interface, 4, 1)
REG_BITFIELD(STREAMSTATUS_MyApp0_p_out.StreamStatus_OUT_flags, is_waiting, 5, 1)
REG_BITFIELD(STREAMSTATUS_MyApp0_p_out.StreamStatus_OUT_flags, is_done, 6, 1)
REG_BITFIELD(STREAMSTATUS_MyApp0_p_out.StreamStatus_OUT_flags, fifo_exists, 7, 1)
REG_BITFIELD(STREAMSTATUS_Stream_84_output.StreamStatus_OUT_flags, error_working_and_waiting, 0, 1)
REG_BITFIELD(STREAMSTATUS_Stream_84_output.StreamStatus_OUT_flags, error_working_after_done, 1, 1)
REG_BITFIELD(STREAMSTATUS_Stream_84_output.StreamStatus_OUT_flags, error_fifo_overflow, 2, 1)
REG_BITFIELD(STREAMSTATUS_Stream_84_output.StreamStatus_OUT_flags, error_fifo_underflow, 3, 1)
REG_BITFIELD(STREAMSTATUS_Stream_84_output.StreamStatus_OUT_flags, is_push_interface, 4, 1)
REG_BITFIELD(STREAMSTATUS_Stream_84_output.StreamStatus_OUT_flags, is_waiting, 5, 1)
REG_BITFIELD(STREAMSTATUS_Stream_84_output.StreamStatus_OUT_flags, is_done, 6, 1)
REG_BITFIELD(STREAMSTATUS_Stream_84_output.StreamStatus_OUT_flags, fifo_exists, 7, 1)
REG_BITFIELD(STREAMSTATUS_Stream_88_output.StreamStatus_OUT_flags, error_working_and_waiting, 0, 1)
REG_BITFIELD(STREAMSTATUS_Stream_88_output.StreamStatus_OUT_flags, error_working_after_done, 1, 1)
REG_BITFIELD(STREAMSTATUS_Stream_88_output.StreamStatus_OUT_flags, error_fifo_overflow, 2, 1)
REG_BITFIELD(STREAMSTATUS_Stream_88_output.StreamStatus_OUT_flags, error_fifo_underflow, 3, 1)
REG_BITFIELD(STREAMSTATUS_Stream_88_output.StreamStatus_OUT_flags, is_push_interface, 4, 1)
REG_BITFIELD(STREAMSTATUS_Stream_88_output.StreamStatus_OUT_flags, is_waiting, 5, 1)
REG_BITFIELD(STREAMSTATUS_Stream_88_output.StreamStatus_OUT_flags, is_done, 6, 1)
REG_BITFIELD(STREAMSTATUS_Stream_88_output.StreamStatus_OUT_flags, fifo_exists, 7, 1)
REG_BITFIELD(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_flags, error_working_and_waiting, 0, 1)
REG_BITFIELD(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_flags, error_working_after_done, 1, 1)
REG_BITFIELD(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_flags, error_fifo_overflow, 2, 1)
REG_BITFIELD(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_flags, error_fifo_underflow, 3, 1)
REG_BITFIELD(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_flags, is_push_interface, 4, 1)
REG_BITFIELD(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_flags, is_waiting, 5, 1)
REG_BITFIELD(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_flags, is_done, 6, 1)
REG_BITFIELD(STREAMSTATUS_Stream_47_output.StreamStatus_OUT_flags, fifo_exists, 7, 1)
REG_BITFIELD(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_flags, error_working_and_waiting, 0, 1)
REG_BITFIELD(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_flags, error_working_after_done, 1, 1)
REG_BITFIELD(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_flags, error_fifo_overflow, 2, 1)
REG_BITFIELD(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_flags, error_fifo_underflow, 3, 1)
REG_BITFIELD(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_flags, is_push_interface, 4, 1)
REG_BITFIELD(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_flags, is_waiting, 5, 1)
REG_BITFIELD(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_flags, is_done, 6, 1)
REG_BITFIELD(STREAMSTATUS_Stream_52_output.StreamStatus_OUT_flags, fifo_exists, 7, 1)
REG_BITFIELD(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_flags, error_working_and_waiting, 0, 1)
REG_BITFIELD(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_flags, error_working_after_done, 1, 1)
REG_BITFIELD(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_flags, error_fifo_overflow, 2, 1)
REG_BITFIELD(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_flags, error_fifo_underflow, 3, 1)
REG_BITFIELD(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_flags, is_push_interface, 4, 1)
REG_BITFIELD(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_flags, is_waiting, 5, 1)
REG_BITFIELD(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_flags, is_done, 6, 1)
REG_BITFIELD(STREAMSTATUS_Stream_86_output.StreamStatus_OUT_flags, fifo_exists, 7, 1)
REG_BITFIELD(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_flags, error_working_and_waiting, 0, 1)
REG_BITFIELD(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_flags, error_working_after_done, 1, 1)
REG_BITFIELD(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_flags, error_fifo_overflow, 2, 1)
REG_BITFIELD(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_flags, error_fifo_underflow, 3, 1)
REG_BITFIELD(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_flags, is_push_interface, 4, 1)
REG_BITFIELD(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_flags, is_waiting, 5, 1)
REG_BITFIELD(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_flags, is_done, 6, 1)
REG_BITFIELD(STREAMSTATUS_Stream_90_output.StreamStatus_OUT_flags, fifo_exists, 7, 1)
#endif



#ifdef CHECKSUM
#define CHECKSUM_PRESENT 1
CHECKSUM("54981dcbd06f2f81d749bef5c3ff6da8badf69248eef1d7f3d0d3d253ff0fa62")
#endif

#ifdef MANAGER_MEMCTL
#define MANAGER_MEMCTL_PRESENT 1
MANAGER_MEMCTL(max3_sodimms, MemoryControllerPro.MemoryControllerPro, 384)
#endif

#ifdef MANAGER_MEMCTL_CONTROL_GROUP
#define MANAGER_MEMCTL_CONTROL_GROUP_PRESENT 1
MANAGER_MEMCTL_CONTROL_GROUP(max3_sodimms, cmd_dram2mgr, addrgen_cmd_dram2mgr., STREAM)
MANAGER_MEMCTL_CONTROL_GROUP(max3_sodimms, cmd_mgr2dram, addrgen_cmd_mgr2dram., STREAM)
MANAGER_MEMCTL_CONTROL_GROUP(max3_sodimms, cmd_dram2knl0, addrgen_cmd_dram2knl0., STREAM)
MANAGER_MEMCTL_CONTROL_GROUP(max3_sodimms, cmd_dram2knl1, addrgen_cmd_dram2knl1., STREAM)
MANAGER_MEMCTL_CONTROL_GROUP(max3_sodimms, cmd_dram2knl2, addrgen_cmd_dram2knl2., STREAM)
MANAGER_MEMCTL_CONTROL_GROUP(max3_sodimms, cmd_dram2knl3, addrgen_cmd_dram2knl3., STREAM)
MANAGER_MEMCTL_CONTROL_GROUP(max3_sodimms, cmd_knl2dram0, addrgen_cmd_knl2dram0., STREAM)
MANAGER_MEMCTL_CONTROL_GROUP(max3_sodimms, cmd_knl2dram1, addrgen_cmd_knl2dram1., STREAM)
#endif

#ifdef MANAGER_MEMCTL_DATA_STREAM
#define MANAGER_MEMCTL_DATA_STREAM_PRESENT 1
MANAGER_MEMCTL_DATA_STREAM(max3_sodimms, cmd_dram2mgr, dram2mgr, 0, 0, READ_FROM_MEMORY)
MANAGER_MEMCTL_DATA_STREAM(max3_sodimms, cmd_dram2knl0, dram2knl0, 0, 1, READ_FROM_MEMORY)
MANAGER_MEMCTL_DATA_STREAM(max3_sodimms, cmd_dram2knl1, dram2knl1, 0, 2, READ_FROM_MEMORY)
MANAGER_MEMCTL_DATA_STREAM(max3_sodimms, cmd_dram2knl2, dram2knl2, 0, 3, READ_FROM_MEMORY)
MANAGER_MEMCTL_DATA_STREAM(max3_sodimms, cmd_dram2knl3, dram2knl3, 0, 4, READ_FROM_MEMORY)
MANAGER_MEMCTL_DATA_STREAM(max3_sodimms, cmd_mgr2dram, mgr2dram, 0, 5, WRITE_TO_MEMORY)
MANAGER_MEMCTL_DATA_STREAM(max3_sodimms, cmd_knl2dram0, knl2dram0, 0, 6, WRITE_TO_MEMORY)
MANAGER_MEMCTL_DATA_STREAM(max3_sodimms, cmd_knl2dram1, knl2dram1, 0, 7, WRITE_TO_MEMORY)
#endif

#ifdef CAPABILITY
#define CAPABILITY_PRESENT 1
CAPABILITY(MAX3REV, MAX3REVA)
CAPABILITY(MAX3RAM, DDR3_24GB)
CAPABILITY(MAX3FPGA, SXT475_2ES)
#endif

#ifdef DEFINE_DESIGN_NAME
#define DESIGN_NAME SimBuilder
#endif /* DEFINE_DESIGN_NAME */










#ifndef SLIC_NO_DECLARATIONS
/**\file */
#ifndef SLIC_DECLARATIONS_SimBuilder_H
#define SLIC_DECLARATIONS_SimBuilder_H
#include "MaxSLiCInterface.h"
#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/**
 * \brief Simple static function for the mode 'default'
 * 
 * \param [in] ticks_Cmdhostread Scalar parameter
 * \param [in] ticks_Cmdhostwrite Scalar parameter
 * \param [in] ticks_Cmdread0 Scalar parameter
 * \param [in] ticks_Cmdread1 Scalar parameter
 * \param [in] ticks_Cmdread2 Scalar parameter
 * \param [in] ticks_Cmdread3 Scalar parameter
 * \param [in] ticks_Cmdwrite0 Scalar parameter
 * \param [in] ticks_Cmdwrite1 Scalar parameter
 * \param [in] ticks_MyApp0 Scalar parameter
 * \param [in] inscalar_Cmdhostread_Enable Scalar parameter
 * \param [in] inscalar_Cmdhostread_iniBursts Scalar parameter
 * \param [in] inscalar_Cmdhostread_totalBursts Scalar parameter
 * \param [in] inscalar_Cmdhostread_wordsPerBurst Scalar parameter
 * \param [in] inscalar_Cmdhostwrite_Enable Scalar parameter
 * \param [in] inscalar_Cmdhostwrite_iniBursts Scalar parameter
 * \param [in] inscalar_Cmdhostwrite_iterations Scalar parameter
 * \param [in] inscalar_Cmdhostwrite_totalBursts Scalar parameter
 * \param [in] inscalar_Cmdhostwrite_wordsPerBurst Scalar parameter
 * \param [in] inscalar_Cmdread0_Enable Scalar parameter
 * \param [in] inscalar_Cmdread0_iniBursts Scalar parameter
 * \param [in] inscalar_Cmdread0_totalBursts Scalar parameter
 * \param [in] inscalar_Cmdread0_wordsPerBurst Scalar parameter
 * \param [in] inscalar_Cmdread1_Enable Scalar parameter
 * \param [in] inscalar_Cmdread1_iniBursts Scalar parameter
 * \param [in] inscalar_Cmdread1_totalBursts Scalar parameter
 * \param [in] inscalar_Cmdread1_wordsPerBurst Scalar parameter
 * \param [in] inscalar_Cmdread2_Enable Scalar parameter
 * \param [in] inscalar_Cmdread2_iniBursts Scalar parameter
 * \param [in] inscalar_Cmdread2_totalBursts Scalar parameter
 * \param [in] inscalar_Cmdread2_wordsPerBurst Scalar parameter
 * \param [in] inscalar_Cmdread3_Enable Scalar parameter
 * \param [in] inscalar_Cmdread3_iniBursts Scalar parameter
 * \param [in] inscalar_Cmdread3_totalBursts Scalar parameter
 * \param [in] inscalar_Cmdread3_wordsPerBurst Scalar parameter
 * \param [in] inscalar_Cmdwrite0_Enable Scalar parameter
 * \param [in] inscalar_Cmdwrite0_iniBursts Scalar parameter
 * \param [in] inscalar_Cmdwrite0_iterations Scalar parameter
 * \param [in] inscalar_Cmdwrite0_totalBursts Scalar parameter
 * \param [in] inscalar_Cmdwrite0_wordsPerBurst Scalar parameter
 * \param [in] inscalar_Cmdwrite1_Enable Scalar parameter
 * \param [in] inscalar_Cmdwrite1_iniBursts Scalar parameter
 * \param [in] inscalar_Cmdwrite1_iterations Scalar parameter
 * \param [in] inscalar_Cmdwrite1_totalBursts Scalar parameter
 * \param [in] inscalar_Cmdwrite1_wordsPerBurst Scalar parameter
 * \param [in] inscalar_MyApp0_ORDER Scalar parameter
 * \param [in] inscalar_MyApp0_c_0 Scalar parameter
 * \param [in] inscalar_MyApp0_c_1_0 Scalar parameter
 * \param [in] inscalar_MyApp0_c_1_1 Scalar parameter
 * \param [in] inscalar_MyApp0_c_1_2 Scalar parameter
 * \param [in] inscalar_MyApp0_c_1_3 Scalar parameter
 * \param [in] inscalar_MyApp0_c_1_4 Scalar parameter
 * \param [in] inscalar_MyApp0_c_2_0 Scalar parameter
 * \param [in] inscalar_MyApp0_c_2_1 Scalar parameter
 * \param [in] inscalar_MyApp0_c_2_2 Scalar parameter
 * \param [in] inscalar_MyApp0_c_2_3 Scalar parameter
 * \param [in] inscalar_MyApp0_c_2_4 Scalar parameter
 * \param [in] inscalar_MyApp0_c_3_0 Scalar parameter
 * \param [in] inscalar_MyApp0_c_3_1 Scalar parameter
 * \param [in] inscalar_MyApp0_c_3_2 Scalar parameter
 * \param [in] inscalar_MyApp0_c_3_3 Scalar parameter
 * \param [in] inscalar_MyApp0_c_3_4 Scalar parameter
 * \param [in] inscalar_MyApp0_n1 Scalar parameter
 * \param [in] inscalar_MyApp0_n12 Scalar parameter
 * \param [in] inscalar_MyApp0_n2 Scalar parameter
 * \param [in] inscalar_MyApp0_n3 Scalar parameter
 * \param [in] instream_host2mgr stream host2mgr
 * \param [in] instream_size_host2mgr size of the stream instream_host2mgr in bytes
 * \param [out] outstream_mgr2host stream mgr2host
 * \param [in] outstream_size_mgr2host size of the stream outstream_mgr2host in bytes
 */
void SimBuilder(
	uint64_t ticks_Cmdhostread,
	uint64_t ticks_Cmdhostwrite,
	uint64_t ticks_Cmdread0,
	uint64_t ticks_Cmdread1,
	uint64_t ticks_Cmdread2,
	uint64_t ticks_Cmdread3,
	uint64_t ticks_Cmdwrite0,
	uint64_t ticks_Cmdwrite1,
	uint64_t ticks_MyApp0,
	uint64_t inscalar_Cmdhostread_Enable,
	uint64_t inscalar_Cmdhostread_iniBursts,
	uint64_t inscalar_Cmdhostread_totalBursts,
	uint64_t inscalar_Cmdhostread_wordsPerBurst,
	uint64_t inscalar_Cmdhostwrite_Enable,
	uint64_t inscalar_Cmdhostwrite_iniBursts,
	uint64_t inscalar_Cmdhostwrite_iterations,
	uint64_t inscalar_Cmdhostwrite_totalBursts,
	uint64_t inscalar_Cmdhostwrite_wordsPerBurst,
	uint64_t inscalar_Cmdread0_Enable,
	uint64_t inscalar_Cmdread0_iniBursts,
	uint64_t inscalar_Cmdread0_totalBursts,
	uint64_t inscalar_Cmdread0_wordsPerBurst,
	uint64_t inscalar_Cmdread1_Enable,
	uint64_t inscalar_Cmdread1_iniBursts,
	uint64_t inscalar_Cmdread1_totalBursts,
	uint64_t inscalar_Cmdread1_wordsPerBurst,
	uint64_t inscalar_Cmdread2_Enable,
	uint64_t inscalar_Cmdread2_iniBursts,
	uint64_t inscalar_Cmdread2_totalBursts,
	uint64_t inscalar_Cmdread2_wordsPerBurst,
	uint64_t inscalar_Cmdread3_Enable,
	uint64_t inscalar_Cmdread3_iniBursts,
	uint64_t inscalar_Cmdread3_totalBursts,
	uint64_t inscalar_Cmdread3_wordsPerBurst,
	uint64_t inscalar_Cmdwrite0_Enable,
	uint64_t inscalar_Cmdwrite0_iniBursts,
	uint64_t inscalar_Cmdwrite0_iterations,
	uint64_t inscalar_Cmdwrite0_totalBursts,
	uint64_t inscalar_Cmdwrite0_wordsPerBurst,
	uint64_t inscalar_Cmdwrite1_Enable,
	uint64_t inscalar_Cmdwrite1_iniBursts,
	uint64_t inscalar_Cmdwrite1_iterations,
	uint64_t inscalar_Cmdwrite1_totalBursts,
	uint64_t inscalar_Cmdwrite1_wordsPerBurst,
	uint64_t inscalar_MyApp0_ORDER,
	double inscalar_MyApp0_c_0,
	double inscalar_MyApp0_c_1_0,
	double inscalar_MyApp0_c_1_1,
	double inscalar_MyApp0_c_1_2,
	double inscalar_MyApp0_c_1_3,
	double inscalar_MyApp0_c_1_4,
	double inscalar_MyApp0_c_2_0,
	double inscalar_MyApp0_c_2_1,
	double inscalar_MyApp0_c_2_2,
	double inscalar_MyApp0_c_2_3,
	double inscalar_MyApp0_c_2_4,
	double inscalar_MyApp0_c_3_0,
	double inscalar_MyApp0_c_3_1,
	double inscalar_MyApp0_c_3_2,
	double inscalar_MyApp0_c_3_3,
	double inscalar_MyApp0_c_3_4,
	uint64_t inscalar_MyApp0_n1,
	uint64_t inscalar_MyApp0_n12,
	uint64_t inscalar_MyApp0_n2,
	uint64_t inscalar_MyApp0_n3,
	const void *instream_host2mgr,
	size_t instream_size_host2mgr,
	void *outstream_mgr2host,
	size_t outstream_size_mgr2host);

/**
 * \brief Advanced static interface, structure for the mode 'default'
 * 
 */
typedef struct { 
	uint64_t ticks_Cmdhostread; /**<  [in] Scalar parameter */
	uint64_t ticks_Cmdhostwrite; /**<  [in] Scalar parameter */
	uint64_t ticks_Cmdread0; /**<  [in] Scalar parameter */
	uint64_t ticks_Cmdread1; /**<  [in] Scalar parameter */
	uint64_t ticks_Cmdread2; /**<  [in] Scalar parameter */
	uint64_t ticks_Cmdread3; /**<  [in] Scalar parameter */
	uint64_t ticks_Cmdwrite0; /**<  [in] Scalar parameter */
	uint64_t ticks_Cmdwrite1; /**<  [in] Scalar parameter */
	uint64_t ticks_MyApp0; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdhostread_Enable; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdhostread_iniBursts; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdhostread_totalBursts; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdhostread_wordsPerBurst; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdhostwrite_Enable; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdhostwrite_iniBursts; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdhostwrite_iterations; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdhostwrite_totalBursts; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdhostwrite_wordsPerBurst; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdread0_Enable; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdread0_iniBursts; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdread0_totalBursts; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdread0_wordsPerBurst; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdread1_Enable; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdread1_iniBursts; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdread1_totalBursts; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdread1_wordsPerBurst; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdread2_Enable; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdread2_iniBursts; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdread2_totalBursts; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdread2_wordsPerBurst; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdread3_Enable; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdread3_iniBursts; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdread3_totalBursts; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdread3_wordsPerBurst; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdwrite0_Enable; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdwrite0_iniBursts; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdwrite0_iterations; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdwrite0_totalBursts; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdwrite0_wordsPerBurst; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdwrite1_Enable; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdwrite1_iniBursts; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdwrite1_iterations; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdwrite1_totalBursts; /**<  [in] Scalar parameter */
	uint64_t inscalar_Cmdwrite1_wordsPerBurst; /**<  [in] Scalar parameter */
	uint64_t inscalar_MyApp0_ORDER; /**<  [in] Scalar parameter */
	double inscalar_MyApp0_c_0; /**<  [in] Scalar parameter */
	double inscalar_MyApp0_c_1_0; /**<  [in] Scalar parameter */
	double inscalar_MyApp0_c_1_1; /**<  [in] Scalar parameter */
	double inscalar_MyApp0_c_1_2; /**<  [in] Scalar parameter */
	double inscalar_MyApp0_c_1_3; /**<  [in] Scalar parameter */
	double inscalar_MyApp0_c_1_4; /**<  [in] Scalar parameter */
	double inscalar_MyApp0_c_2_0; /**<  [in] Scalar parameter */
	double inscalar_MyApp0_c_2_1; /**<  [in] Scalar parameter */
	double inscalar_MyApp0_c_2_2; /**<  [in] Scalar parameter */
	double inscalar_MyApp0_c_2_3; /**<  [in] Scalar parameter */
	double inscalar_MyApp0_c_2_4; /**<  [in] Scalar parameter */
	double inscalar_MyApp0_c_3_0; /**<  [in] Scalar parameter */
	double inscalar_MyApp0_c_3_1; /**<  [in] Scalar parameter */
	double inscalar_MyApp0_c_3_2; /**<  [in] Scalar parameter */
	double inscalar_MyApp0_c_3_3; /**<  [in] Scalar parameter */
	double inscalar_MyApp0_c_3_4; /**<  [in] Scalar parameter */
	uint64_t inscalar_MyApp0_n1; /**<  [in] Scalar parameter */
	uint64_t inscalar_MyApp0_n12; /**<  [in] Scalar parameter */
	uint64_t inscalar_MyApp0_n2; /**<  [in] Scalar parameter */
	uint64_t inscalar_MyApp0_n3; /**<  [in] Scalar parameter */
	const void *instream_host2mgr; /**<  [in] stream host2mgr */
	size_t instream_size_host2mgr; /**<  [in] size of the stream instream_host2mgr in bytes */
	void *outstream_mgr2host; /**<  [out] stream mgr2host */
	size_t outstream_size_mgr2host; /**<  [in] size of the stream outstream_mgr2host in bytes */
} SimBuilder_actions_t;

/**
 * \brief Advanced static function for the mode 'default'
 * \param [in] engine the engine on which the actions will be executed
 * \param [in,out] mode_actions actions to be executed
 */
void SimBuilder_run(
	max_engine_t *engine,
	SimBuilder_actions_t *mode_actions);

/**
 * \brief Group run advanced static function for the mode 'default'
 * \param group group to use
 * \param mode_actions actions to run
 *
 * Run the actions on the first device available in the group.
 */
void SimBuilder_run_group(max_group_t *group, SimBuilder_actions_t *mode_actions);

/**
 * \brief Array run advanced static function for the mode 'default'
 * \param engarray the array of devices to use
 * \param mode_actions the array of actions to run
 *
 * Run the array of actions on the array of engines.  The length of mode_actions
 * must match the size of engarray.
 */
void SimBuilder_run_array(max_engarray_t *engarray, SimBuilder_actions_t *mode_actions[]);

max_actions_t* SimBuilder_convert(max_file_t *maxfile, SimBuilder_actions_t *mode_actions);

/**
 * \brief Turn debugging on for the functions in the static 
 *          interface of this maxfile.
 * \param debug_directory directory for the generated files
 */
void SimBuilder_debug(const char *debug_directory);

/**
 * \brief Initialise a maxfile.
 */
max_file_t* SimBuilder_init(void);
#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* SLIC_DECLARATIONS_SimBuilder_H */

#endif /* SLIC_NO_DECLARATIONS */

#ifdef PHOTON_NODE_DATA
#define PHOTON_NODE_DATA_PRESENT 1
PHOTON_NODE_DATA(Cmdhostread, 3, NodeInputMappedReg, "Scalar input (Enable)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:21)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 2, NodeInputMappedReg, "Scalar input (wordsPerBurst)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:20)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 4, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:355)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:28)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 56, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x00000000; 0.0", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.eq(HWVar.java:498)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:38)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 7, NodeEq, "==", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.eq(HWVar.java:498)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:38)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 9, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:38)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 10, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:38)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 8, NodeAnd, "&", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:38)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 11, NodeReinterpret, "<{HWOffsetFix:1, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:38)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 30, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 27, NodeInputMappedReg, "Scalar input (io_dram_read_force_disabled)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 28, NodeNot, "~", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 31, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 29, NodeAnd, "&", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 32, NodeReinterpret, "<{HWOffsetFix:1, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 16, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Constant.var(Constant.java:81)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:46)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 41, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 51, NodeConstantRawBits, "{HWRawBits:15}\n0x0001", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 25, NodeReinterpret, "<{HWOffsetFix:15, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 26, NodeReinterpret, "<{HWRawBits:15}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 53, NodeConstantRawBits, "{HWOffsetFix:8, 0, UNSIGNED}\n0x01; 1.0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 37, NodeReinterpret, "<{HWRawBits:8}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 13, NodeConstantRawBits, "{HWOffsetFix:8, 0, UNSIGNED}\n0x01; 1.0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Constant.var(Constant.java:100)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:43)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 35, NodeReinterpret, "<{HWRawBits:8}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 54, NodeFIFO, "FIFO(1)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(Cmdhostread, 1, NodeInputMappedReg, "Scalar input (totalBursts)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:19)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 5, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:355)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:35)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 0, NodeInputMappedReg, "Scalar input (iniBursts)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:18)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 12, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:42)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 34, NodeReinterpret, "<{HWRawBits:32}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 36, NodeCat, "@", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 38, NodeCat, "@", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 40, NodeCat, "@", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 42, NodeCat, "@", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 33, NodeOutput, "Output(dram_read)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 46, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 55, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 44, NodeConstantRawBits, "{HWOffsetFix:49, 0, UNSIGNED}\n0x1000000000000; 2.81474976710656E14", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 45, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 47, NodeOutputMappedReg, "Scalar output (current_run_cycle_count)", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 49, NodeInputMappedReg, "Scalar input (run_cycle_count)", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 50, NodeEq, "==", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostread, 48, NodeFlush, "Flush", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:22)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
#endif

#ifdef PHOTON_NODE_DATA
#define PHOTON_NODE_DATA_PRESENT 1
PHOTON_NODE_DATA(Cmdhostwrite, 4, NodeInputMappedReg, "Scalar input (Enable)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:21)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 3, NodeInputMappedReg, "Scalar input (wordsPerBurst)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:20)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 5, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:355)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:28)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 75, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x00000000; 0.0", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.eq(HWVar.java:498)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:45)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 9, NodeEq, "==", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.eq(HWVar.java:498)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:45)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 11, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:45)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 12, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:45)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 10, NodeAnd, "&", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:45)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 13, NodeReinterpret, "<{HWOffsetFix:1, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:45)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 41, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 38, NodeInputMappedReg, "Scalar input (io_dram_write_force_disabled)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 39, NodeNot, "~", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 42, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 40, NodeAnd, "&", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 43, NodeReinterpret, "<{HWOffsetFix:1, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 2, NodeInputMappedReg, "Scalar input (totalBursts)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:19)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 6, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:355)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:35)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 74, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x00000001; 1.0", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.sub(HWVar.java:779)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:53)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 19, NodeSub, "-", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.sub(HWVar.java:779)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:53)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 20, NodeEq, "==", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.eq(HWVar.java:486)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:53)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 25, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:53)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 1, NodeInputMappedReg, "Scalar input (iterations)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:18)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 7, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:355)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:42)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 73, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x00000001; 1.0", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.sub(HWVar.java:779)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:53)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 22, NodeSub, "-", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.sub(HWVar.java:779)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:53)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 23, NodeEq, "==", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.eq(HWVar.java:486)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:53)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 26, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:53)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 24, NodeAnd, "&", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:53)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 27, NodeReinterpret, "<{HWOffsetFix:1, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:53)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 52, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 67, NodeConstantRawBits, "{HWRawBits:15}\n0x0001", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 36, NodeReinterpret, "<{HWOffsetFix:15, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 37, NodeReinterpret, "<{HWRawBits:15}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 69, NodeConstantRawBits, "{HWOffsetFix:8, 0, UNSIGNED}\n0x01; 1.0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 48, NodeReinterpret, "<{HWRawBits:8}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 15, NodeConstantRawBits, "{HWOffsetFix:8, 0, UNSIGNED}\n0x01; 1.0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Constant.var(Constant.java:100)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:50)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 46, NodeReinterpret, "<{HWRawBits:8}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 70, NodeFIFO, "FIFO(1)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 0, NodeInputMappedReg, "Scalar input (iniBursts)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:17)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 14, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:49)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 45, NodeReinterpret, "<{HWRawBits:32}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 47, NodeCat, "@", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 49, NodeCat, "@", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 51, NodeCat, "@", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 53, NodeCat, "@", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 44, NodeOutput, "Output(dram_write)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 57, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v1.kernelcompiler.Debug.printf(Debug.java:314)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:57)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 54, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:57)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 72, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x00000001; 1.0", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.sub(HWVar.java:779)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:57)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 56, NodeSub, "-", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.sub(HWVar.java:779)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:57)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 58, NodePrintf, "NodePrintf", "com.maxeler.maxcompiler.v1.kernelcompiler.Debug.printf(Debug.java:316)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:57)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 62, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 71, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 60, NodeConstantRawBits, "{HWOffsetFix:49, 0, UNSIGNED}\n0x1000000000000; 2.81474976710656E14", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 61, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 63, NodeOutputMappedReg, "Scalar output (current_run_cycle_count)", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 65, NodeInputMappedReg, "Scalar input (run_cycle_count)", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 66, NodeEq, "==", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdhostwrite, 64, NodeFlush, "Flush", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:23)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
#endif

#ifdef PHOTON_NODE_DATA
#define PHOTON_NODE_DATA_PRESENT 1
PHOTON_NODE_DATA(MyApp0, 155, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.output(IO.java:670)\nMyApp_pkg.do_forward.<init>(do_forward.java:60)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 159, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.output(IO.java:670)\nMyApp_pkg.do_forward.<init>(do_forward.java:60)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 156, NodeInputMappedReg, "Scalar input (io_pp_out_force_disabled)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.output(IO.java:670)\nMyApp_pkg.do_forward.<init>(do_forward.java:60)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 157, NodeNot, "~", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.output(IO.java:670)\nMyApp_pkg.do_forward.<init>(do_forward.java:60)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 160, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.output(IO.java:670)\nMyApp_pkg.do_forward.<init>(do_forward.java:60)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 158, NodeAnd, "&", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.output(IO.java:670)\nMyApp_pkg.do_forward.<init>(do_forward.java:60)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 161, NodeReinterpret, "<{HWOffsetFix:1, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.output(IO.java:670)\nMyApp_pkg.do_forward.<init>(do_forward.java:60)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 33, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Count.makeCounterChain(Count.java:438)\nMyApp_pkg.do_forward.<init>(do_forward.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 250, NodeConstantRawBits, "{HWOffsetFix:9, 0, UNSIGNED}\n0x080; 128.0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.CounterChain.addCounter(CounterChain.java:501)\nMyApp_pkg.do_forward.<init>(do_forward.java:50)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 41, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.CounterChain.addCounter(CounterChain.java:501)\nMyApp_pkg.do_forward.<init>(do_forward.java:50)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 249, NodeConstantRawBits, "{HWOffsetFix:9, 0, UNSIGNED}\n0x080; 128.0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.CounterChain.addCounter(CounterChain.java:501)\nMyApp_pkg.do_forward.<init>(do_forward.java:49)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 38, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.CounterChain.addCounter(CounterChain.java:501)\nMyApp_pkg.do_forward.<init>(do_forward.java:49)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 248, NodeConstantRawBits, "{HWOffsetFix:9, 0, UNSIGNED}\n0x080; 128.0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.CounterChain.addCounter(CounterChain.java:501)\nMyApp_pkg.do_forward.<init>(do_forward.java:48)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 35, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.CounterChain.addCounter(CounterChain.java:501)\nMyApp_pkg.do_forward.<init>(do_forward.java:48)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 36, NodeCast, "{HWOffsetFix:32, 0, TWOSCOMPLEMENT}", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.cast(HWVar.java:160)\nMyApp_pkg.do_forward.<init>(do_forward.java:48)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 14, NodeInputMappedReg, "Scalar input (n3)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.do_forward.<init>(do_forward.java:24)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 16, NodeInputMappedReg, "Scalar input (ORDER)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.do_forward.<init>(do_forward.java:26)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 43, NodeSub, "-", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.sub(HWVar.java:767)\nMyApp_pkg.do_forward.<init>(do_forward.java:51)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 44, NodeLt, "<", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.lt(HWVar.java:693)\nMyApp_pkg.do_forward.<init>(do_forward.java:51)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 47, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.do_forward.<init>(do_forward.java:51)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 45, NodeGte, ">=", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.gte(HWVar.java:619)\nMyApp_pkg.do_forward.<init>(do_forward.java:51)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 48, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.do_forward.<init>(do_forward.java:51)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 46, NodeAnd, "&", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.do_forward.<init>(do_forward.java:51)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 49, NodeReinterpret, "<{HWOffsetFix:1, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.do_forward.<init>(do_forward.java:51)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 53, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.do_forward.<init>(do_forward.java:51)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 39, NodeCast, "{HWOffsetFix:32, 0, TWOSCOMPLEMENT}", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.cast(HWVar.java:160)\nMyApp_pkg.do_forward.<init>(do_forward.java:49)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 13, NodeInputMappedReg, "Scalar input (n2)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.do_forward.<init>(do_forward.java:23)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 50, NodeSub, "-", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.sub(HWVar.java:767)\nMyApp_pkg.do_forward.<init>(do_forward.java:51)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 51, NodeLt, "<", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.lt(HWVar.java:693)\nMyApp_pkg.do_forward.<init>(do_forward.java:51)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 54, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.do_forward.<init>(do_forward.java:51)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 180, NodeFIFO, "FIFO(1)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 52, NodeAnd, "&", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.do_forward.<init>(do_forward.java:51)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 55, NodeReinterpret, "<{HWOffsetFix:1, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.do_forward.<init>(do_forward.java:51)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 58, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.do_forward.<init>(do_forward.java:51)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 56, NodeGte, ">=", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.gte(HWVar.java:619)\nMyApp_pkg.do_forward.<init>(do_forward.java:51)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 181, NodeFIFO, "FIFO(2)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 59, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.do_forward.<init>(do_forward.java:51)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 57, NodeAnd, "&", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.do_forward.<init>(do_forward.java:51)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 60, NodeReinterpret, "<{HWOffsetFix:1, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.do_forward.<init>(do_forward.java:51)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 64, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.do_forward.<init>(do_forward.java:51)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 42, NodeCast, "{HWOffsetFix:32, 0, TWOSCOMPLEMENT}", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.cast(HWVar.java:160)\nMyApp_pkg.do_forward.<init>(do_forward.java:50)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 12, NodeInputMappedReg, "Scalar input (n1)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.do_forward.<init>(do_forward.java:22)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 61, NodeSub, "-", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.sub(HWVar.java:767)\nMyApp_pkg.do_forward.<init>(do_forward.java:51)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 62, NodeLt, "<", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.lt(HWVar.java:693)\nMyApp_pkg.do_forward.<init>(do_forward.java:51)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 182, NodeFIFO, "FIFO(3)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 65, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.do_forward.<init>(do_forward.java:51)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 63, NodeAnd, "&", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.do_forward.<init>(do_forward.java:51)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 66, NodeReinterpret, "<{HWOffsetFix:1, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.do_forward.<init>(do_forward.java:51)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 69, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.do_forward.<init>(do_forward.java:51)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 67, NodeGte, ">=", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.gte(HWVar.java:619)\nMyApp_pkg.do_forward.<init>(do_forward.java:51)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 70, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.do_forward.<init>(do_forward.java:51)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 183, NodeFIFO, "FIFO(4)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 68, NodeAnd, "&", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.do_forward.<init>(do_forward.java:51)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 71, NodeReinterpret, "<{HWOffsetFix:1, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.do_forward.<init>(do_forward.java:51)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 3, NodeInputMappedReg, "Scalar input (io_p_force_disabled)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.input(IO.java:475)\nMyApp_pkg.do_forward.<init>(do_forward.java:19)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 4, NodeNot, "~", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.input(IO.java:475)\nMyApp_pkg.do_forward.<init>(do_forward.java:19)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 5, NodeInput, "Input(p)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.input(IO.java:475)\nMyApp_pkg.do_forward.<init>(do_forward.java:19)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 212, NodeFIFO, "FIFO(16372)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 217, NodeFIFO, "FIFO(16372)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 218, NodeFIFO, "FIFO(16372)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 219, NodeFIFO, "FIFO(16372)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 220, NodeFIFO, "FIFO(15732)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 221, NodeFIFO, "FIFO(116)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 222, NodeFIFO, "FIFO(116)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 223, NodeFIFO, "FIFO(116)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 224, NodeFIFO, "FIFO(116)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 225, NodeFIFO, "FIFO(67)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 226, NodeFIFO, "FIFO(2)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 227, NodeFIFO, "FIFO(9)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 228, NodeFIFO, "FIFO(2)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 229, NodeFIFO, "FIFO(2)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 230, NodeFIFO, "FIFO(7)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 231, NodeFIFO, "FIFO(6)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 232, NodeFIFO, "FIFO(5)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 233, NodeFIFO, "FIFO(8)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 234, NodeFIFO, "FIFO(3)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 235, NodeFIFO, "FIFO(10)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 236, NodeFIFO, "FIFO(130)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 237, NodeFIFO, "FIFO(5)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 238, NodeFIFO, "FIFO(32)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 179, NodePO2FPMult, "PO2FPMult_N1", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.mulAsRHS(HWVar.java:824)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 6, NodeInputMappedReg, "Scalar input (io_pp_force_disabled)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.input(IO.java:475)\nMyApp_pkg.do_forward.<init>(do_forward.java:20)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 7, NodeNot, "~", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.input(IO.java:475)\nMyApp_pkg.do_forward.<init>(do_forward.java:20)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 8, NodeInput, "Input(pp)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.input(IO.java:475)\nMyApp_pkg.do_forward.<init>(do_forward.java:20)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 74, NodeSub, "-", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.sub(HWVar.java:767)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 9, NodeInputMappedReg, "Scalar input (io_source_force_disabled)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.input(IO.java:475)\nMyApp_pkg.do_forward.<init>(do_forward.java:21)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 10, NodeNot, "~", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.input(IO.java:475)\nMyApp_pkg.do_forward.<init>(do_forward.java:21)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 11, NodeInput, "Input(source)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.input(IO.java:475)\nMyApp_pkg.do_forward.<init>(do_forward.java:21)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 75, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 0, NodeInputMappedReg, "Scalar input (io_dvv_force_disabled)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.input(IO.java:475)\nMyApp_pkg.do_forward.<init>(do_forward.java:18)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 1, NodeNot, "~", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.input(IO.java:475)\nMyApp_pkg.do_forward.<init>(do_forward.java:18)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 2, NodeInput, "Input(dvv)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.input(IO.java:475)\nMyApp_pkg.do_forward.<init>(do_forward.java:18)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 17, NodeInputMappedReg, "Scalar input (c_0)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.do_forward.<init>(do_forward.java:27)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 76, NodeMul, "*", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.mul(HWVar.java:804)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 18, NodeInputMappedReg, "Scalar input (c_1_0)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.do_forward.<init>(do_forward.java:28)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 77, NodeStreamOffset, "stream offset: 1", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Stream.offset(Stream.java:210)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 78, NodeStreamOffset, "stream offset: -1", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Stream.offset(Stream.java:210)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 79, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 80, NodeMul, "*", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.mul(HWVar.java:804)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 81, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 19, NodeInputMappedReg, "Scalar input (c_1_1)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.do_forward.<init>(do_forward.java:29)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 82, NodeStreamOffset, "stream offset: 2", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Stream.offset(Stream.java:210)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 83, NodeStreamOffset, "stream offset: -2", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Stream.offset(Stream.java:210)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 84, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 85, NodeMul, "*", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.mul(HWVar.java:804)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 86, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 20, NodeInputMappedReg, "Scalar input (c_1_2)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.do_forward.<init>(do_forward.java:30)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 87, NodeStreamOffset, "stream offset: 3", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Stream.offset(Stream.java:210)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 88, NodeStreamOffset, "stream offset: -3", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Stream.offset(Stream.java:210)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 89, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 90, NodeMul, "*", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.mul(HWVar.java:804)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 91, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 21, NodeInputMappedReg, "Scalar input (c_1_3)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.do_forward.<init>(do_forward.java:31)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 92, NodeStreamOffset, "stream offset: 4", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Stream.offset(Stream.java:210)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 93, NodeStreamOffset, "stream offset: -4", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Stream.offset(Stream.java:210)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 94, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 95, NodeMul, "*", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.mul(HWVar.java:804)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 96, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 22, NodeInputMappedReg, "Scalar input (c_1_4)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.do_forward.<init>(do_forward.java:32)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 97, NodeStreamOffset, "stream offset: 5", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Stream.offset(Stream.java:210)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 98, NodeStreamOffset, "stream offset: -5", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Stream.offset(Stream.java:210)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 99, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 100, NodeMul, "*", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.mul(HWVar.java:804)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 101, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 23, NodeInputMappedReg, "Scalar input (c_2_0)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.do_forward.<init>(do_forward.java:33)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 102, NodeStreamOffset, "stream offset: 128", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Stream.offset(Stream.java:210)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 103, NodeStreamOffset, "stream offset: -128", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Stream.offset(Stream.java:210)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 104, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 105, NodeMul, "*", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.mul(HWVar.java:804)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 106, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 24, NodeInputMappedReg, "Scalar input (c_2_1)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.do_forward.<init>(do_forward.java:34)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 107, NodeStreamOffset, "stream offset: 256", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Stream.offset(Stream.java:210)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 239, NodeFIFO, "FIFO(108)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 108, NodeStreamOffset, "stream offset: -256", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Stream.offset(Stream.java:210)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 109, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 110, NodeMul, "*", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.mul(HWVar.java:804)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 111, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 25, NodeInputMappedReg, "Scalar input (c_2_2)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.do_forward.<init>(do_forward.java:35)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 112, NodeStreamOffset, "stream offset: 384", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Stream.offset(Stream.java:210)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 240, NodeFIFO, "FIFO(140)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 113, NodeStreamOffset, "stream offset: -384", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Stream.offset(Stream.java:210)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 114, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 115, NodeMul, "*", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.mul(HWVar.java:804)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 116, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 26, NodeInputMappedReg, "Scalar input (c_2_3)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.do_forward.<init>(do_forward.java:36)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 117, NodeStreamOffset, "stream offset: 512", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Stream.offset(Stream.java:210)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 241, NodeFIFO, "FIFO(140)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 118, NodeStreamOffset, "stream offset: -512", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Stream.offset(Stream.java:210)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 119, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 120, NodeMul, "*", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.mul(HWVar.java:804)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 121, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 27, NodeInputMappedReg, "Scalar input (c_2_4)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.do_forward.<init>(do_forward.java:37)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 122, NodeStreamOffset, "stream offset: 640", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Stream.offset(Stream.java:210)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 242, NodeFIFO, "FIFO(140)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 123, NodeStreamOffset, "stream offset: -640", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Stream.offset(Stream.java:210)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 124, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 125, NodeMul, "*", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.mul(HWVar.java:804)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 126, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 28, NodeInputMappedReg, "Scalar input (c_3_0)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.do_forward.<init>(do_forward.java:38)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 127, NodeStreamOffset, "stream offset: 16384", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Stream.offset(Stream.java:210)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 243, NodeFIFO, "FIFO(15756)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 128, NodeStreamOffset, "stream offset: -16384", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Stream.offset(Stream.java:210)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 129, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 130, NodeMul, "*", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.mul(HWVar.java:804)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 131, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 29, NodeInputMappedReg, "Scalar input (c_3_1)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.do_forward.<init>(do_forward.java:39)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 132, NodeStreamOffset, "stream offset: 32768", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Stream.offset(Stream.java:210)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 244, NodeFIFO, "FIFO(16396)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 133, NodeStreamOffset, "stream offset: -32768", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Stream.offset(Stream.java:210)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 134, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 135, NodeMul, "*", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.mul(HWVar.java:804)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 136, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 30, NodeInputMappedReg, "Scalar input (c_3_2)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.do_forward.<init>(do_forward.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 137, NodeStreamOffset, "stream offset: 49152", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Stream.offset(Stream.java:210)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 245, NodeFIFO, "FIFO(16396)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 138, NodeStreamOffset, "stream offset: -49152", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Stream.offset(Stream.java:210)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 139, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 140, NodeMul, "*", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.mul(HWVar.java:804)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 141, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 31, NodeInputMappedReg, "Scalar input (c_3_3)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.do_forward.<init>(do_forward.java:41)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 142, NodeStreamOffset, "stream offset: 65536", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Stream.offset(Stream.java:210)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 246, NodeFIFO, "FIFO(16396)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 143, NodeStreamOffset, "stream offset: -65536", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Stream.offset(Stream.java:210)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 144, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 145, NodeMul, "*", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.mul(HWVar.java:804)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 146, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 32, NodeInputMappedReg, "Scalar input (c_3_4)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.do_forward.<init>(do_forward.java:42)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 147, NodeStreamOffset, "stream offset: 81920", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Stream.offset(Stream.java:210)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 148, NodeStreamOffset, "stream offset: -81920", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Stream.offset(Stream.java:210)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 215, NodeFIFO, "FIFO(16396)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(MyApp0, 149, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 150, NodeMul, "*", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.mul(HWVar.java:804)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 151, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 152, NodeMul, "*", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.mul(HWVar.java:804)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 153, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.do_forward.<init>(do_forward.java:55)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 154, NodeMux, "MUX", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.ternaryIf(HWVar.java:976)\nMyApp_pkg.do_forward.<init>(do_forward.java:60)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 162, NodeOutput, "Output(pp_out)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.output(IO.java:670)\nMyApp_pkg.do_forward.<init>(do_forward.java:60)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 163, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.output(IO.java:670)\nMyApp_pkg.do_forward.<init>(do_forward.java:61)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 167, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.output(IO.java:670)\nMyApp_pkg.do_forward.<init>(do_forward.java:61)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 164, NodeInputMappedReg, "Scalar input (io_p_out_force_disabled)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.output(IO.java:670)\nMyApp_pkg.do_forward.<init>(do_forward.java:61)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 165, NodeNot, "~", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.output(IO.java:670)\nMyApp_pkg.do_forward.<init>(do_forward.java:61)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 168, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.output(IO.java:670)\nMyApp_pkg.do_forward.<init>(do_forward.java:61)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 166, NodeAnd, "&", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.output(IO.java:670)\nMyApp_pkg.do_forward.<init>(do_forward.java:61)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 169, NodeReinterpret, "<{HWOffsetFix:1, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.output(IO.java:670)\nMyApp_pkg.do_forward.<init>(do_forward.java:61)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 170, NodeOutput, "Output(p_out)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.output(IO.java:670)\nMyApp_pkg.do_forward.<init>(do_forward.java:61)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 174, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 247, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 172, NodeConstantRawBits, "{HWOffsetFix:49, 0, UNSIGNED}\n0x1000000000000; 2.81474976710656E14", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 173, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 175, NodeOutputMappedReg, "Scalar output (current_run_cycle_count)", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 177, NodeInputMappedReg, "Scalar input (run_cycle_count)", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 178, NodeEq, "==", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 176, NodeFlush, "Flush", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(MyApp0, 15, NodeInputMappedReg, "Scalar input (n12)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.do_forward.<init>(do_forward.java:25)\nMyApp_pkg.AppManager.<init>(AppManager.java:35)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
#endif

#ifdef PHOTON_NODE_DATA
#define PHOTON_NODE_DATA_PRESENT 1
PHOTON_NODE_DATA(Cmdread0, 3, NodeInputMappedReg, "Scalar input (Enable)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:21)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 2, NodeInputMappedReg, "Scalar input (wordsPerBurst)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:20)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 4, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:355)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:28)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 56, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x00000000; 0.0", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.eq(HWVar.java:498)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:38)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 7, NodeEq, "==", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.eq(HWVar.java:498)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:38)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 9, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:38)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 10, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:38)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 8, NodeAnd, "&", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:38)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 11, NodeReinterpret, "<{HWOffsetFix:1, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:38)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 30, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 27, NodeInputMappedReg, "Scalar input (io_dram_read_force_disabled)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 28, NodeNot, "~", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 31, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 29, NodeAnd, "&", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 32, NodeReinterpret, "<{HWOffsetFix:1, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 16, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Constant.var(Constant.java:81)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:46)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 41, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 51, NodeConstantRawBits, "{HWRawBits:15}\n0x0001", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 25, NodeReinterpret, "<{HWOffsetFix:15, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 26, NodeReinterpret, "<{HWRawBits:15}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 53, NodeConstantRawBits, "{HWOffsetFix:8, 0, UNSIGNED}\n0x01; 1.0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 37, NodeReinterpret, "<{HWRawBits:8}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 13, NodeConstantRawBits, "{HWOffsetFix:8, 0, UNSIGNED}\n0x01; 1.0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Constant.var(Constant.java:100)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:43)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 35, NodeReinterpret, "<{HWRawBits:8}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 54, NodeFIFO, "FIFO(1)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(Cmdread0, 1, NodeInputMappedReg, "Scalar input (totalBursts)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:19)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 5, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:355)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:35)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 0, NodeInputMappedReg, "Scalar input (iniBursts)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:18)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 12, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:42)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 34, NodeReinterpret, "<{HWRawBits:32}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 36, NodeCat, "@", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 38, NodeCat, "@", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 40, NodeCat, "@", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 42, NodeCat, "@", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 33, NodeOutput, "Output(dram_read)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 46, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 55, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 44, NodeConstantRawBits, "{HWOffsetFix:49, 0, UNSIGNED}\n0x1000000000000; 2.81474976710656E14", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 45, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 47, NodeOutputMappedReg, "Scalar output (current_run_cycle_count)", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 49, NodeInputMappedReg, "Scalar input (run_cycle_count)", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 50, NodeEq, "==", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread0, 48, NodeFlush, "Flush", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:37)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
#endif

#ifdef PHOTON_NODE_DATA
#define PHOTON_NODE_DATA_PRESENT 1
PHOTON_NODE_DATA(Cmdread1, 3, NodeInputMappedReg, "Scalar input (Enable)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:21)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 2, NodeInputMappedReg, "Scalar input (wordsPerBurst)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:20)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 4, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:355)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:28)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 56, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x00000000; 0.0", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.eq(HWVar.java:498)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:38)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 7, NodeEq, "==", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.eq(HWVar.java:498)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:38)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 9, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:38)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 10, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:38)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 8, NodeAnd, "&", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:38)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 11, NodeReinterpret, "<{HWOffsetFix:1, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:38)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 30, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 27, NodeInputMappedReg, "Scalar input (io_dram_read_force_disabled)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 28, NodeNot, "~", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 31, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 29, NodeAnd, "&", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 32, NodeReinterpret, "<{HWOffsetFix:1, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 16, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Constant.var(Constant.java:81)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:46)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 41, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 51, NodeConstantRawBits, "{HWRawBits:15}\n0x0001", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 25, NodeReinterpret, "<{HWOffsetFix:15, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 26, NodeReinterpret, "<{HWRawBits:15}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 53, NodeConstantRawBits, "{HWOffsetFix:8, 0, UNSIGNED}\n0x01; 1.0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 37, NodeReinterpret, "<{HWRawBits:8}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 13, NodeConstantRawBits, "{HWOffsetFix:8, 0, UNSIGNED}\n0x01; 1.0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Constant.var(Constant.java:100)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:43)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 35, NodeReinterpret, "<{HWRawBits:8}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 54, NodeFIFO, "FIFO(1)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(Cmdread1, 1, NodeInputMappedReg, "Scalar input (totalBursts)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:19)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 5, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:355)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:35)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 0, NodeInputMappedReg, "Scalar input (iniBursts)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:18)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 12, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:42)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 34, NodeReinterpret, "<{HWRawBits:32}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 36, NodeCat, "@", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 38, NodeCat, "@", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 40, NodeCat, "@", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 42, NodeCat, "@", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 33, NodeOutput, "Output(dram_read)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 46, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 55, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 44, NodeConstantRawBits, "{HWOffsetFix:49, 0, UNSIGNED}\n0x1000000000000; 2.81474976710656E14", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 45, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 47, NodeOutputMappedReg, "Scalar output (current_run_cycle_count)", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 49, NodeInputMappedReg, "Scalar input (run_cycle_count)", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 50, NodeEq, "==", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread1, 48, NodeFlush, "Flush", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:38)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
#endif

#ifdef PHOTON_NODE_DATA
#define PHOTON_NODE_DATA_PRESENT 1
PHOTON_NODE_DATA(Cmdread2, 3, NodeInputMappedReg, "Scalar input (Enable)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:21)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 2, NodeInputMappedReg, "Scalar input (wordsPerBurst)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:20)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 4, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:355)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:28)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 56, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x00000000; 0.0", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.eq(HWVar.java:498)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:38)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 7, NodeEq, "==", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.eq(HWVar.java:498)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:38)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 9, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:38)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 10, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:38)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 8, NodeAnd, "&", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:38)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 11, NodeReinterpret, "<{HWOffsetFix:1, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:38)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 30, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 27, NodeInputMappedReg, "Scalar input (io_dram_read_force_disabled)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 28, NodeNot, "~", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 31, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 29, NodeAnd, "&", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 32, NodeReinterpret, "<{HWOffsetFix:1, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 16, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Constant.var(Constant.java:81)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:46)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 41, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 51, NodeConstantRawBits, "{HWRawBits:15}\n0x0001", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 25, NodeReinterpret, "<{HWOffsetFix:15, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 26, NodeReinterpret, "<{HWRawBits:15}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 53, NodeConstantRawBits, "{HWOffsetFix:8, 0, UNSIGNED}\n0x01; 1.0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 37, NodeReinterpret, "<{HWRawBits:8}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 13, NodeConstantRawBits, "{HWOffsetFix:8, 0, UNSIGNED}\n0x01; 1.0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Constant.var(Constant.java:100)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:43)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 35, NodeReinterpret, "<{HWRawBits:8}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 54, NodeFIFO, "FIFO(1)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(Cmdread2, 1, NodeInputMappedReg, "Scalar input (totalBursts)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:19)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 5, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:355)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:35)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 0, NodeInputMappedReg, "Scalar input (iniBursts)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:18)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 12, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:42)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 34, NodeReinterpret, "<{HWRawBits:32}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 36, NodeCat, "@", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 38, NodeCat, "@", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 40, NodeCat, "@", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 42, NodeCat, "@", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 33, NodeOutput, "Output(dram_read)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 46, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 55, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 44, NodeConstantRawBits, "{HWOffsetFix:49, 0, UNSIGNED}\n0x1000000000000; 2.81474976710656E14", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 45, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 47, NodeOutputMappedReg, "Scalar output (current_run_cycle_count)", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 49, NodeInputMappedReg, "Scalar input (run_cycle_count)", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 50, NodeEq, "==", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread2, 48, NodeFlush, "Flush", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:39)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
#endif

#ifdef PHOTON_NODE_DATA
#define PHOTON_NODE_DATA_PRESENT 1
PHOTON_NODE_DATA(Cmdread3, 3, NodeInputMappedReg, "Scalar input (Enable)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:21)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 2, NodeInputMappedReg, "Scalar input (wordsPerBurst)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:20)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 4, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:355)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:28)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 56, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x00000000; 0.0", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.eq(HWVar.java:498)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:38)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 7, NodeEq, "==", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.eq(HWVar.java:498)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:38)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 9, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:38)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 10, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:38)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 8, NodeAnd, "&", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:38)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 11, NodeReinterpret, "<{HWOffsetFix:1, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:38)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 30, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 27, NodeInputMappedReg, "Scalar input (io_dram_read_force_disabled)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 28, NodeNot, "~", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 31, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 29, NodeAnd, "&", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 32, NodeReinterpret, "<{HWOffsetFix:1, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 16, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Constant.var(Constant.java:81)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:46)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 41, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 51, NodeConstantRawBits, "{HWRawBits:15}\n0x0001", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 25, NodeReinterpret, "<{HWOffsetFix:15, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 26, NodeReinterpret, "<{HWRawBits:15}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 53, NodeConstantRawBits, "{HWOffsetFix:8, 0, UNSIGNED}\n0x01; 1.0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 37, NodeReinterpret, "<{HWRawBits:8}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 13, NodeConstantRawBits, "{HWOffsetFix:8, 0, UNSIGNED}\n0x01; 1.0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Constant.var(Constant.java:100)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:43)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 35, NodeReinterpret, "<{HWRawBits:8}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 54, NodeFIFO, "FIFO(1)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(Cmdread3, 1, NodeInputMappedReg, "Scalar input (totalBursts)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:19)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 5, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:355)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:35)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 0, NodeInputMappedReg, "Scalar input (iniBursts)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:18)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 12, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:42)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 34, NodeReinterpret, "<{HWRawBits:32}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 36, NodeCat, "@", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 38, NodeCat, "@", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 40, NodeCat, "@", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 42, NodeCat, "@", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 33, NodeOutput, "Output(dram_read)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdread.<init>(Cmdread.java:40)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 46, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 55, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 44, NodeConstantRawBits, "{HWOffsetFix:49, 0, UNSIGNED}\n0x1000000000000; 2.81474976710656E14", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 45, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 47, NodeOutputMappedReg, "Scalar output (current_run_cycle_count)", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 49, NodeInputMappedReg, "Scalar input (run_cycle_count)", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 50, NodeEq, "==", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdread3, 48, NodeFlush, "Flush", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:40)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
#endif

#ifdef PHOTON_NODE_DATA
#define PHOTON_NODE_DATA_PRESENT 1
PHOTON_NODE_DATA(Cmdwrite0, 4, NodeInputMappedReg, "Scalar input (Enable)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:21)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 3, NodeInputMappedReg, "Scalar input (wordsPerBurst)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:20)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 5, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:355)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:28)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 75, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x00000000; 0.0", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.eq(HWVar.java:498)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:45)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 9, NodeEq, "==", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.eq(HWVar.java:498)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:45)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 11, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:45)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 12, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:45)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 10, NodeAnd, "&", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:45)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 13, NodeReinterpret, "<{HWOffsetFix:1, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:45)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 41, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 38, NodeInputMappedReg, "Scalar input (io_dram_write_force_disabled)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 39, NodeNot, "~", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 42, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 40, NodeAnd, "&", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 43, NodeReinterpret, "<{HWOffsetFix:1, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 2, NodeInputMappedReg, "Scalar input (totalBursts)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:19)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 6, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:355)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:35)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 74, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x00000001; 1.0", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.sub(HWVar.java:779)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:53)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 19, NodeSub, "-", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.sub(HWVar.java:779)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:53)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 20, NodeEq, "==", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.eq(HWVar.java:486)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:53)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 25, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:53)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 1, NodeInputMappedReg, "Scalar input (iterations)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:18)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 7, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:355)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:42)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 73, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x00000001; 1.0", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.sub(HWVar.java:779)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:53)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 22, NodeSub, "-", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.sub(HWVar.java:779)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:53)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 23, NodeEq, "==", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.eq(HWVar.java:486)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:53)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 26, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:53)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 24, NodeAnd, "&", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:53)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 27, NodeReinterpret, "<{HWOffsetFix:1, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:53)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 52, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 67, NodeConstantRawBits, "{HWRawBits:15}\n0x0001", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 36, NodeReinterpret, "<{HWOffsetFix:15, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 37, NodeReinterpret, "<{HWRawBits:15}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 69, NodeConstantRawBits, "{HWOffsetFix:8, 0, UNSIGNED}\n0x01; 1.0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 48, NodeReinterpret, "<{HWRawBits:8}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 15, NodeConstantRawBits, "{HWOffsetFix:8, 0, UNSIGNED}\n0x01; 1.0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Constant.var(Constant.java:100)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:50)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 46, NodeReinterpret, "<{HWRawBits:8}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 70, NodeFIFO, "FIFO(1)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(Cmdwrite0, 0, NodeInputMappedReg, "Scalar input (iniBursts)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:17)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 14, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:49)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 45, NodeReinterpret, "<{HWRawBits:32}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 47, NodeCat, "@", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 49, NodeCat, "@", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 51, NodeCat, "@", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 53, NodeCat, "@", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 44, NodeOutput, "Output(dram_write)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 57, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v1.kernelcompiler.Debug.printf(Debug.java:314)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:57)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 54, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:57)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 72, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x00000001; 1.0", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.sub(HWVar.java:779)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:57)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 56, NodeSub, "-", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.sub(HWVar.java:779)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:57)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 58, NodePrintf, "NodePrintf", "com.maxeler.maxcompiler.v1.kernelcompiler.Debug.printf(Debug.java:316)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:57)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 62, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 71, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 60, NodeConstantRawBits, "{HWOffsetFix:49, 0, UNSIGNED}\n0x1000000000000; 2.81474976710656E14", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 61, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 63, NodeOutputMappedReg, "Scalar output (current_run_cycle_count)", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 65, NodeInputMappedReg, "Scalar input (run_cycle_count)", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 66, NodeEq, "==", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite0, 64, NodeFlush, "Flush", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:42)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
#endif

#ifdef PHOTON_NODE_DATA
#define PHOTON_NODE_DATA_PRESENT 1
PHOTON_NODE_DATA(Cmdwrite1, 4, NodeInputMappedReg, "Scalar input (Enable)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:21)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 3, NodeInputMappedReg, "Scalar input (wordsPerBurst)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:20)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 5, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:355)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:28)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 75, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x00000000; 0.0", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.eq(HWVar.java:498)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:45)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 9, NodeEq, "==", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.eq(HWVar.java:498)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:45)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 11, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:45)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 12, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:45)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 10, NodeAnd, "&", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:45)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 13, NodeReinterpret, "<{HWOffsetFix:1, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:45)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 41, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 38, NodeInputMappedReg, "Scalar input (io_dram_write_force_disabled)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 39, NodeNot, "~", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 42, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 40, NodeAnd, "&", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 43, NodeReinterpret, "<{HWOffsetFix:1, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 2, NodeInputMappedReg, "Scalar input (totalBursts)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:19)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 6, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:355)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:35)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 74, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x00000001; 1.0", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.sub(HWVar.java:779)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:53)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 19, NodeSub, "-", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.sub(HWVar.java:779)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:53)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 20, NodeEq, "==", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.eq(HWVar.java:486)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:53)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 25, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:53)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 1, NodeInputMappedReg, "Scalar input (iterations)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:18)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 7, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:355)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:42)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 73, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x00000001; 1.0", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.sub(HWVar.java:779)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:53)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 22, NodeSub, "-", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.sub(HWVar.java:779)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:53)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 23, NodeEq, "==", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.eq(HWVar.java:486)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:53)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 26, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:53)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 24, NodeAnd, "&", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:53)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 27, NodeReinterpret, "<{HWOffsetFix:1, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:53)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 52, NodeReinterpret, "<{HWRawBits:1}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 67, NodeConstantRawBits, "{HWRawBits:15}\n0x0001", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 36, NodeReinterpret, "<{HWOffsetFix:15, 0, UNSIGNED}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 37, NodeReinterpret, "<{HWRawBits:15}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 69, NodeConstantRawBits, "{HWOffsetFix:8, 0, UNSIGNED}\n0x01; 1.0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 48, NodeReinterpret, "<{HWRawBits:8}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 15, NodeConstantRawBits, "{HWOffsetFix:8, 0, UNSIGNED}\n0x01; 1.0", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Constant.var(Constant.java:100)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:50)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 46, NodeReinterpret, "<{HWRawBits:8}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 70, NodeFIFO, "FIFO(1)", "com.maxeler.maxcompiler.v1.managers.FPGAManager.build(FPGAManager.java:226)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:24)\n")
PHOTON_NODE_DATA(Cmdwrite1, 0, NodeInputMappedReg, "Scalar input (iniBursts)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:17)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 14, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:49)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 45, NodeReinterpret, "<{HWRawBits:32}>", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 47, NodeCat, "@", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 49, NodeCat, "@", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 51, NodeCat, "@", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 53, NodeCat, "@", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 44, NodeOutput, "Output(dram_write)", "com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:47)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 57, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v1.kernelcompiler.Debug.printf(Debug.java:314)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:57)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 54, NodeAdd, "+", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:57)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 72, NodeConstantRawBits, "{HWOffsetFix:32, 0, UNSIGNED}\n0x00000001; 1.0", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.sub(HWVar.java:779)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:57)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 56, NodeSub, "-", "com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.sub(HWVar.java:779)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:57)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 58, NodePrintf, "NodePrintf", "com.maxeler.maxcompiler.v1.kernelcompiler.Debug.printf(Debug.java:316)\nMyApp_pkg.Cmdwrite.<init>(Cmdwrite.java:57)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 62, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 71, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 60, NodeConstantRawBits, "{HWOffsetFix:49, 0, UNSIGNED}\n0x1000000000000; 2.81474976710656E14", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 61, NodeCounterV1, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 63, NodeOutputMappedReg, "Scalar output (current_run_cycle_count)", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 65, NodeInputMappedReg, "Scalar input (run_cycle_count)", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 66, NodeEq, "==", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
PHOTON_NODE_DATA(Cmdwrite1, 64, NodeFlush, "Flush", "com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)\nMyApp_pkg.AppManager.<init>(AppManager.java:43)\nMyApp_pkg.SimBuilder.main(SimBuilder.java:13)\n")
#endif

#ifdef SLIC_USE_DEFINITIONS
#include <stdio.h>
#include <math.h>
#include <pthread.h>
#include <string.h>
static max_file_t *stored_maxfile = NULL;
static max_engine_t *stored_engine = NULL;
static pthread_once_t slic_bs_is_initialised = PTHREAD_ONCE_INIT;
static char *stored_debug_dir = NULL;
static int   stored_use_debug_dir = 0;

static void SimBuilder_static_init(void) 
{
	stored_maxfile = SimBuilder_init();
	if(stored_maxfile == NULL) abort();
	stored_engine = max_load(stored_maxfile, "*");
	if(stored_engine == NULL) abort();
}

__attribute__((destructor)) static void SimBuilder_static_cleanup(void)
{
	if(stored_engine != NULL)
		max_unload(stored_engine);
	if(stored_maxfile != NULL)
		max_file_free(stored_maxfile);
	free(stored_debug_dir);
}
void SimBuilder(
	uint64_t ticks_Cmdhostread,
	uint64_t ticks_Cmdhostwrite,
	uint64_t ticks_Cmdread0,
	uint64_t ticks_Cmdread1,
	uint64_t ticks_Cmdread2,
	uint64_t ticks_Cmdread3,
	uint64_t ticks_Cmdwrite0,
	uint64_t ticks_Cmdwrite1,
	uint64_t ticks_MyApp0,
	uint64_t inscalar_Cmdhostread_Enable,
	uint64_t inscalar_Cmdhostread_iniBursts,
	uint64_t inscalar_Cmdhostread_totalBursts,
	uint64_t inscalar_Cmdhostread_wordsPerBurst,
	uint64_t inscalar_Cmdhostwrite_Enable,
	uint64_t inscalar_Cmdhostwrite_iniBursts,
	uint64_t inscalar_Cmdhostwrite_iterations,
	uint64_t inscalar_Cmdhostwrite_totalBursts,
	uint64_t inscalar_Cmdhostwrite_wordsPerBurst,
	uint64_t inscalar_Cmdread0_Enable,
	uint64_t inscalar_Cmdread0_iniBursts,
	uint64_t inscalar_Cmdread0_totalBursts,
	uint64_t inscalar_Cmdread0_wordsPerBurst,
	uint64_t inscalar_Cmdread1_Enable,
	uint64_t inscalar_Cmdread1_iniBursts,
	uint64_t inscalar_Cmdread1_totalBursts,
	uint64_t inscalar_Cmdread1_wordsPerBurst,
	uint64_t inscalar_Cmdread2_Enable,
	uint64_t inscalar_Cmdread2_iniBursts,
	uint64_t inscalar_Cmdread2_totalBursts,
	uint64_t inscalar_Cmdread2_wordsPerBurst,
	uint64_t inscalar_Cmdread3_Enable,
	uint64_t inscalar_Cmdread3_iniBursts,
	uint64_t inscalar_Cmdread3_totalBursts,
	uint64_t inscalar_Cmdread3_wordsPerBurst,
	uint64_t inscalar_Cmdwrite0_Enable,
	uint64_t inscalar_Cmdwrite0_iniBursts,
	uint64_t inscalar_Cmdwrite0_iterations,
	uint64_t inscalar_Cmdwrite0_totalBursts,
	uint64_t inscalar_Cmdwrite0_wordsPerBurst,
	uint64_t inscalar_Cmdwrite1_Enable,
	uint64_t inscalar_Cmdwrite1_iniBursts,
	uint64_t inscalar_Cmdwrite1_iterations,
	uint64_t inscalar_Cmdwrite1_totalBursts,
	uint64_t inscalar_Cmdwrite1_wordsPerBurst,
	uint64_t inscalar_MyApp0_ORDER,
	double inscalar_MyApp0_c_0,
	double inscalar_MyApp0_c_1_0,
	double inscalar_MyApp0_c_1_1,
	double inscalar_MyApp0_c_1_2,
	double inscalar_MyApp0_c_1_3,
	double inscalar_MyApp0_c_1_4,
	double inscalar_MyApp0_c_2_0,
	double inscalar_MyApp0_c_2_1,
	double inscalar_MyApp0_c_2_2,
	double inscalar_MyApp0_c_2_3,
	double inscalar_MyApp0_c_2_4,
	double inscalar_MyApp0_c_3_0,
	double inscalar_MyApp0_c_3_1,
	double inscalar_MyApp0_c_3_2,
	double inscalar_MyApp0_c_3_3,
	double inscalar_MyApp0_c_3_4,
	uint64_t inscalar_MyApp0_n1,
	uint64_t inscalar_MyApp0_n12,
	uint64_t inscalar_MyApp0_n2,
	uint64_t inscalar_MyApp0_n3,
	const void *instream_host2mgr,
	size_t instream_size_host2mgr,
	void *outstream_mgr2host,
	size_t outstream_size_mgr2host)
{
	SimBuilder_actions_t mode_actions;
	mode_actions.ticks_Cmdhostread = ticks_Cmdhostread;
	mode_actions.ticks_Cmdhostwrite = ticks_Cmdhostwrite;
	mode_actions.ticks_Cmdread0 = ticks_Cmdread0;
	mode_actions.ticks_Cmdread1 = ticks_Cmdread1;
	mode_actions.ticks_Cmdread2 = ticks_Cmdread2;
	mode_actions.ticks_Cmdread3 = ticks_Cmdread3;
	mode_actions.ticks_Cmdwrite0 = ticks_Cmdwrite0;
	mode_actions.ticks_Cmdwrite1 = ticks_Cmdwrite1;
	mode_actions.ticks_MyApp0 = ticks_MyApp0;
	mode_actions.inscalar_Cmdhostread_Enable = inscalar_Cmdhostread_Enable;
	mode_actions.inscalar_Cmdhostread_iniBursts = inscalar_Cmdhostread_iniBursts;
	mode_actions.inscalar_Cmdhostread_totalBursts = inscalar_Cmdhostread_totalBursts;
	mode_actions.inscalar_Cmdhostread_wordsPerBurst = inscalar_Cmdhostread_wordsPerBurst;
	mode_actions.inscalar_Cmdhostwrite_Enable = inscalar_Cmdhostwrite_Enable;
	mode_actions.inscalar_Cmdhostwrite_iniBursts = inscalar_Cmdhostwrite_iniBursts;
	mode_actions.inscalar_Cmdhostwrite_iterations = inscalar_Cmdhostwrite_iterations;
	mode_actions.inscalar_Cmdhostwrite_totalBursts = inscalar_Cmdhostwrite_totalBursts;
	mode_actions.inscalar_Cmdhostwrite_wordsPerBurst = inscalar_Cmdhostwrite_wordsPerBurst;
	mode_actions.inscalar_Cmdread0_Enable = inscalar_Cmdread0_Enable;
	mode_actions.inscalar_Cmdread0_iniBursts = inscalar_Cmdread0_iniBursts;
	mode_actions.inscalar_Cmdread0_totalBursts = inscalar_Cmdread0_totalBursts;
	mode_actions.inscalar_Cmdread0_wordsPerBurst = inscalar_Cmdread0_wordsPerBurst;
	mode_actions.inscalar_Cmdread1_Enable = inscalar_Cmdread1_Enable;
	mode_actions.inscalar_Cmdread1_iniBursts = inscalar_Cmdread1_iniBursts;
	mode_actions.inscalar_Cmdread1_totalBursts = inscalar_Cmdread1_totalBursts;
	mode_actions.inscalar_Cmdread1_wordsPerBurst = inscalar_Cmdread1_wordsPerBurst;
	mode_actions.inscalar_Cmdread2_Enable = inscalar_Cmdread2_Enable;
	mode_actions.inscalar_Cmdread2_iniBursts = inscalar_Cmdread2_iniBursts;
	mode_actions.inscalar_Cmdread2_totalBursts = inscalar_Cmdread2_totalBursts;
	mode_actions.inscalar_Cmdread2_wordsPerBurst = inscalar_Cmdread2_wordsPerBurst;
	mode_actions.inscalar_Cmdread3_Enable = inscalar_Cmdread3_Enable;
	mode_actions.inscalar_Cmdread3_iniBursts = inscalar_Cmdread3_iniBursts;
	mode_actions.inscalar_Cmdread3_totalBursts = inscalar_Cmdread3_totalBursts;
	mode_actions.inscalar_Cmdread3_wordsPerBurst = inscalar_Cmdread3_wordsPerBurst;
	mode_actions.inscalar_Cmdwrite0_Enable = inscalar_Cmdwrite0_Enable;
	mode_actions.inscalar_Cmdwrite0_iniBursts = inscalar_Cmdwrite0_iniBursts;
	mode_actions.inscalar_Cmdwrite0_iterations = inscalar_Cmdwrite0_iterations;
	mode_actions.inscalar_Cmdwrite0_totalBursts = inscalar_Cmdwrite0_totalBursts;
	mode_actions.inscalar_Cmdwrite0_wordsPerBurst = inscalar_Cmdwrite0_wordsPerBurst;
	mode_actions.inscalar_Cmdwrite1_Enable = inscalar_Cmdwrite1_Enable;
	mode_actions.inscalar_Cmdwrite1_iniBursts = inscalar_Cmdwrite1_iniBursts;
	mode_actions.inscalar_Cmdwrite1_iterations = inscalar_Cmdwrite1_iterations;
	mode_actions.inscalar_Cmdwrite1_totalBursts = inscalar_Cmdwrite1_totalBursts;
	mode_actions.inscalar_Cmdwrite1_wordsPerBurst = inscalar_Cmdwrite1_wordsPerBurst;
	mode_actions.inscalar_MyApp0_ORDER = inscalar_MyApp0_ORDER;
	mode_actions.inscalar_MyApp0_c_0 = inscalar_MyApp0_c_0;
	mode_actions.inscalar_MyApp0_c_1_0 = inscalar_MyApp0_c_1_0;
	mode_actions.inscalar_MyApp0_c_1_1 = inscalar_MyApp0_c_1_1;
	mode_actions.inscalar_MyApp0_c_1_2 = inscalar_MyApp0_c_1_2;
	mode_actions.inscalar_MyApp0_c_1_3 = inscalar_MyApp0_c_1_3;
	mode_actions.inscalar_MyApp0_c_1_4 = inscalar_MyApp0_c_1_4;
	mode_actions.inscalar_MyApp0_c_2_0 = inscalar_MyApp0_c_2_0;
	mode_actions.inscalar_MyApp0_c_2_1 = inscalar_MyApp0_c_2_1;
	mode_actions.inscalar_MyApp0_c_2_2 = inscalar_MyApp0_c_2_2;
	mode_actions.inscalar_MyApp0_c_2_3 = inscalar_MyApp0_c_2_3;
	mode_actions.inscalar_MyApp0_c_2_4 = inscalar_MyApp0_c_2_4;
	mode_actions.inscalar_MyApp0_c_3_0 = inscalar_MyApp0_c_3_0;
	mode_actions.inscalar_MyApp0_c_3_1 = inscalar_MyApp0_c_3_1;
	mode_actions.inscalar_MyApp0_c_3_2 = inscalar_MyApp0_c_3_2;
	mode_actions.inscalar_MyApp0_c_3_3 = inscalar_MyApp0_c_3_3;
	mode_actions.inscalar_MyApp0_c_3_4 = inscalar_MyApp0_c_3_4;
	mode_actions.inscalar_MyApp0_n1 = inscalar_MyApp0_n1;
	mode_actions.inscalar_MyApp0_n12 = inscalar_MyApp0_n12;
	mode_actions.inscalar_MyApp0_n2 = inscalar_MyApp0_n2;
	mode_actions.inscalar_MyApp0_n3 = inscalar_MyApp0_n3;
	mode_actions.instream_host2mgr = instream_host2mgr;
	mode_actions.instream_size_host2mgr = instream_size_host2mgr;
	mode_actions.outstream_mgr2host = outstream_mgr2host;
	mode_actions.outstream_size_mgr2host = outstream_size_mgr2host;
	(void) pthread_once(&slic_bs_is_initialised, SimBuilder_static_init);
	max_actions_t *actions = SimBuilder_convert(stored_maxfile, &mode_actions);
	if(actions == NULL) abort();
	max_validate(actions);
	max_run(stored_engine, actions);
	max_actions_free(actions);
}
void SimBuilder_run(
	max_engine_t *engine,
	SimBuilder_actions_t *mode_actions)
{
	max_file_t *maxfile = max_engine_get_max_file(engine); 
	max_actions_t *actions = SimBuilder_convert(maxfile, mode_actions);
	max_run(engine, actions);
	max_actions_free(actions);
}


/**
 * \brief Group run advanced static function for the mode 'default'
 * \param group group to use
 * \param mode_actions actions to run
 *
 * Run the actions on the first device available in the group.
 */
void SimBuilder_run_group(max_group_t *group, SimBuilder_actions_t *mode_actions)
{
	max_file_t *maxfile = max_group_get_max_file(group);
	max_actions_t *actions = SimBuilder_convert(maxfile, mode_actions);
	if(actions == NULL) return;
	if(!max_ok(actions->errors)) return;
	max_validate(actions);
	max_engine_t *engine = max_lock_any(group);
	if(engine == NULL) return;
	max_run(engine, actions);
	max_unlock(engine);
	max_actions_free(actions);
}

/**
 * \brief Array run advanced static function for the mode 'default'
 * \param engarray the array of devices to use
 * \param mode_actions the array of actions to run
 *
 * Run the array of actions on the array of engines.  The length of mode_actions
 * must match the size of engarray.
 */
void SimBuilder_run_array(max_engarray_t *engarray, SimBuilder_actions_t *mode_actions[])
{
	max_file_t *maxfile = max_engarray_get_max_file(engarray);
	max_actarray_t *actarray = max_actarray_init(maxfile, engarray->size);
	if(actarray == NULL) return;
	max_actions_t **a_actions = malloc(engarray->size * sizeof(max_actions_t*));
	int i;
	for(i=0; i < actarray->size; i++)
	{
		max_actions_t *actions = SimBuilder_convert(maxfile, mode_actions[i]);
		if(actions == NULL) return;
		a_actions[i] = actions;
		max_set_action(actarray, i, actions);
	}
	max_run_array(engarray, actarray);
	for(i=0; i < actarray->size; i++) max_actions_free(a_actions[i]);
	max_actarray_free(actarray);
	free(a_actions);
}

max_actions_t* SimBuilder_convert(max_file_t *maxfile, SimBuilder_actions_t *mode_actions)
{
	max_actions_t *actions = max_actions_init(maxfile, NULL);
	if(actions == NULL) return NULL;
	if(stored_use_debug_dir != 0) {
		char *name_Cmdhostwrite = "debug_Cmdhostwrite.out";
		char *path_Cmdhostwrite = malloc(strlen(name_Cmdhostwrite) + strlen(stored_debug_dir) + 2);
		sprintf(path_Cmdhostwrite, "%s/%s", stored_debug_dir, name_Cmdhostwrite);
		max_printto(actions, "Cmdhostwrite", path_Cmdhostwrite);
		max_debug_dir(actions, "Cmdhostwrite", stored_debug_dir);
		max_watch_range(actions, "Cmdhostwrite", 0, -1);
		free(path_Cmdhostwrite);
		char *name_Cmdwrite0 = "debug_Cmdwrite0.out";
		char *path_Cmdwrite0 = malloc(strlen(name_Cmdwrite0) + strlen(stored_debug_dir) + 2);
		sprintf(path_Cmdwrite0, "%s/%s", stored_debug_dir, name_Cmdwrite0);
		max_printto(actions, "Cmdwrite0", path_Cmdwrite0);
		max_debug_dir(actions, "Cmdwrite0", stored_debug_dir);
		max_watch_range(actions, "Cmdwrite0", 0, -1);
		free(path_Cmdwrite0);
		char *name_Cmdwrite1 = "debug_Cmdwrite1.out";
		char *path_Cmdwrite1 = malloc(strlen(name_Cmdwrite1) + strlen(stored_debug_dir) + 2);
		sprintf(path_Cmdwrite1, "%s/%s", stored_debug_dir, name_Cmdwrite1);
		max_printto(actions, "Cmdwrite1", path_Cmdwrite1);
		max_debug_dir(actions, "Cmdwrite1", stored_debug_dir);
		max_watch_range(actions, "Cmdwrite1", 0, -1);
		free(path_Cmdwrite1);
		char *name_Cmdread2 = "debug_Cmdread2.out";
		char *path_Cmdread2 = malloc(strlen(name_Cmdread2) + strlen(stored_debug_dir) + 2);
		sprintf(path_Cmdread2, "%s/%s", stored_debug_dir, name_Cmdread2);
		max_printto(actions, "Cmdread2", path_Cmdread2);
		max_debug_dir(actions, "Cmdread2", stored_debug_dir);
		max_watch_range(actions, "Cmdread2", 0, -1);
		free(path_Cmdread2);
		char *name_Cmdread3 = "debug_Cmdread3.out";
		char *path_Cmdread3 = malloc(strlen(name_Cmdread3) + strlen(stored_debug_dir) + 2);
		sprintf(path_Cmdread3, "%s/%s", stored_debug_dir, name_Cmdread3);
		max_printto(actions, "Cmdread3", path_Cmdread3);
		max_debug_dir(actions, "Cmdread3", stored_debug_dir);
		max_watch_range(actions, "Cmdread3", 0, -1);
		free(path_Cmdread3);
		char *name_Cmdread0 = "debug_Cmdread0.out";
		char *path_Cmdread0 = malloc(strlen(name_Cmdread0) + strlen(stored_debug_dir) + 2);
		sprintf(path_Cmdread0, "%s/%s", stored_debug_dir, name_Cmdread0);
		max_printto(actions, "Cmdread0", path_Cmdread0);
		max_debug_dir(actions, "Cmdread0", stored_debug_dir);
		max_watch_range(actions, "Cmdread0", 0, -1);
		free(path_Cmdread0);
		char *name_Cmdhostread = "debug_Cmdhostread.out";
		char *path_Cmdhostread = malloc(strlen(name_Cmdhostread) + strlen(stored_debug_dir) + 2);
		sprintf(path_Cmdhostread, "%s/%s", stored_debug_dir, name_Cmdhostread);
		max_printto(actions, "Cmdhostread", path_Cmdhostread);
		max_debug_dir(actions, "Cmdhostread", stored_debug_dir);
		max_watch_range(actions, "Cmdhostread", 0, -1);
		free(path_Cmdhostread);
		char *name_Cmdread1 = "debug_Cmdread1.out";
		char *path_Cmdread1 = malloc(strlen(name_Cmdread1) + strlen(stored_debug_dir) + 2);
		sprintf(path_Cmdread1, "%s/%s", stored_debug_dir, name_Cmdread1);
		max_printto(actions, "Cmdread1", path_Cmdread1);
		max_debug_dir(actions, "Cmdread1", stored_debug_dir);
		max_watch_range(actions, "Cmdread1", 0, -1);
		free(path_Cmdread1);
		char *name_MyApp0 = "debug_MyApp0.out";
		char *path_MyApp0 = malloc(strlen(name_MyApp0) + strlen(stored_debug_dir) + 2);
		sprintf(path_MyApp0, "%s/%s", stored_debug_dir, name_MyApp0);
		max_printto(actions, "MyApp0", path_MyApp0);
		max_debug_dir(actions, "MyApp0", stored_debug_dir);
		max_watch_range(actions, "MyApp0", 0, -1);
		free(path_MyApp0);
	}
	/* code for scalar Cmdhostread.run_cycle_count*/
	uint64_t ticks_Cmdhostread = mode_actions->ticks_Cmdhostread;
	max_set_ticks(actions, "Cmdhostread", ticks_Cmdhostread);
	/* end of code for scalar Cmdhostread.run_cycle_count*/
	
	/* code for scalar Cmdhostwrite.run_cycle_count*/
	uint64_t ticks_Cmdhostwrite = mode_actions->ticks_Cmdhostwrite;
	max_set_ticks(actions, "Cmdhostwrite", ticks_Cmdhostwrite);
	/* end of code for scalar Cmdhostwrite.run_cycle_count*/
	
	/* code for scalar Cmdread0.run_cycle_count*/
	uint64_t ticks_Cmdread0 = mode_actions->ticks_Cmdread0;
	max_set_ticks(actions, "Cmdread0", ticks_Cmdread0);
	/* end of code for scalar Cmdread0.run_cycle_count*/
	
	/* code for scalar Cmdread1.run_cycle_count*/
	uint64_t ticks_Cmdread1 = mode_actions->ticks_Cmdread1;
	max_set_ticks(actions, "Cmdread1", ticks_Cmdread1);
	/* end of code for scalar Cmdread1.run_cycle_count*/
	
	/* code for scalar Cmdread2.run_cycle_count*/
	uint64_t ticks_Cmdread2 = mode_actions->ticks_Cmdread2;
	max_set_ticks(actions, "Cmdread2", ticks_Cmdread2);
	/* end of code for scalar Cmdread2.run_cycle_count*/
	
	/* code for scalar Cmdread3.run_cycle_count*/
	uint64_t ticks_Cmdread3 = mode_actions->ticks_Cmdread3;
	max_set_ticks(actions, "Cmdread3", ticks_Cmdread3);
	/* end of code for scalar Cmdread3.run_cycle_count*/
	
	/* code for scalar Cmdwrite0.run_cycle_count*/
	uint64_t ticks_Cmdwrite0 = mode_actions->ticks_Cmdwrite0;
	max_set_ticks(actions, "Cmdwrite0", ticks_Cmdwrite0);
	/* end of code for scalar Cmdwrite0.run_cycle_count*/
	
	/* code for scalar Cmdwrite1.run_cycle_count*/
	uint64_t ticks_Cmdwrite1 = mode_actions->ticks_Cmdwrite1;
	max_set_ticks(actions, "Cmdwrite1", ticks_Cmdwrite1);
	/* end of code for scalar Cmdwrite1.run_cycle_count*/
	
	/* code for scalar MyApp0.run_cycle_count*/
	uint64_t ticks_MyApp0 = mode_actions->ticks_MyApp0;
	max_set_ticks(actions, "MyApp0", ticks_MyApp0);
	/* end of code for scalar MyApp0.run_cycle_count*/
	
	/* code for scalar Cmdhostread.Enable*/
	uint64_t inscalar_Cmdhostread_Enable = mode_actions->inscalar_Cmdhostread_Enable;
	max_set_uint64t(actions, "Cmdhostread", "Enable", inscalar_Cmdhostread_Enable);
	/* end of code for scalar Cmdhostread.Enable*/
	
	/* code for scalar Cmdhostread.iniBursts*/
	uint64_t inscalar_Cmdhostread_iniBursts = mode_actions->inscalar_Cmdhostread_iniBursts;
	max_set_uint64t(actions, "Cmdhostread", "iniBursts", inscalar_Cmdhostread_iniBursts);
	/* end of code for scalar Cmdhostread.iniBursts*/
	
	/* code for scalar Cmdhostread.totalBursts*/
	uint64_t inscalar_Cmdhostread_totalBursts = mode_actions->inscalar_Cmdhostread_totalBursts;
	max_set_uint64t(actions, "Cmdhostread", "totalBursts", inscalar_Cmdhostread_totalBursts);
	/* end of code for scalar Cmdhostread.totalBursts*/
	
	/* code for scalar Cmdhostread.wordsPerBurst*/
	uint64_t inscalar_Cmdhostread_wordsPerBurst = mode_actions->inscalar_Cmdhostread_wordsPerBurst;
	max_set_uint64t(actions, "Cmdhostread", "wordsPerBurst", inscalar_Cmdhostread_wordsPerBurst);
	/* end of code for scalar Cmdhostread.wordsPerBurst*/
	
	/* code for scalar Cmdhostwrite.Enable*/
	uint64_t inscalar_Cmdhostwrite_Enable = mode_actions->inscalar_Cmdhostwrite_Enable;
	max_set_uint64t(actions, "Cmdhostwrite", "Enable", inscalar_Cmdhostwrite_Enable);
	/* end of code for scalar Cmdhostwrite.Enable*/
	
	/* code for scalar Cmdhostwrite.iniBursts*/
	uint64_t inscalar_Cmdhostwrite_iniBursts = mode_actions->inscalar_Cmdhostwrite_iniBursts;
	max_set_uint64t(actions, "Cmdhostwrite", "iniBursts", inscalar_Cmdhostwrite_iniBursts);
	/* end of code for scalar Cmdhostwrite.iniBursts*/
	
	/* code for scalar Cmdhostwrite.iterations*/
	uint64_t inscalar_Cmdhostwrite_iterations = mode_actions->inscalar_Cmdhostwrite_iterations;
	max_set_uint64t(actions, "Cmdhostwrite", "iterations", inscalar_Cmdhostwrite_iterations);
	/* end of code for scalar Cmdhostwrite.iterations*/
	
	/* code for scalar Cmdhostwrite.totalBursts*/
	uint64_t inscalar_Cmdhostwrite_totalBursts = mode_actions->inscalar_Cmdhostwrite_totalBursts;
	max_set_uint64t(actions, "Cmdhostwrite", "totalBursts", inscalar_Cmdhostwrite_totalBursts);
	/* end of code for scalar Cmdhostwrite.totalBursts*/
	
	/* code for scalar Cmdhostwrite.wordsPerBurst*/
	uint64_t inscalar_Cmdhostwrite_wordsPerBurst = mode_actions->inscalar_Cmdhostwrite_wordsPerBurst;
	max_set_uint64t(actions, "Cmdhostwrite", "wordsPerBurst", inscalar_Cmdhostwrite_wordsPerBurst);
	/* end of code for scalar Cmdhostwrite.wordsPerBurst*/
	
	/* code for scalar Cmdread0.Enable*/
	uint64_t inscalar_Cmdread0_Enable = mode_actions->inscalar_Cmdread0_Enable;
	max_set_uint64t(actions, "Cmdread0", "Enable", inscalar_Cmdread0_Enable);
	/* end of code for scalar Cmdread0.Enable*/
	
	/* code for scalar Cmdread0.iniBursts*/
	uint64_t inscalar_Cmdread0_iniBursts = mode_actions->inscalar_Cmdread0_iniBursts;
	max_set_uint64t(actions, "Cmdread0", "iniBursts", inscalar_Cmdread0_iniBursts);
	/* end of code for scalar Cmdread0.iniBursts*/
	
	/* code for scalar Cmdread0.totalBursts*/
	uint64_t inscalar_Cmdread0_totalBursts = mode_actions->inscalar_Cmdread0_totalBursts;
	max_set_uint64t(actions, "Cmdread0", "totalBursts", inscalar_Cmdread0_totalBursts);
	/* end of code for scalar Cmdread0.totalBursts*/
	
	/* code for scalar Cmdread0.wordsPerBurst*/
	uint64_t inscalar_Cmdread0_wordsPerBurst = mode_actions->inscalar_Cmdread0_wordsPerBurst;
	max_set_uint64t(actions, "Cmdread0", "wordsPerBurst", inscalar_Cmdread0_wordsPerBurst);
	/* end of code for scalar Cmdread0.wordsPerBurst*/
	
	/* code for scalar Cmdread1.Enable*/
	uint64_t inscalar_Cmdread1_Enable = mode_actions->inscalar_Cmdread1_Enable;
	max_set_uint64t(actions, "Cmdread1", "Enable", inscalar_Cmdread1_Enable);
	/* end of code for scalar Cmdread1.Enable*/
	
	/* code for scalar Cmdread1.iniBursts*/
	uint64_t inscalar_Cmdread1_iniBursts = mode_actions->inscalar_Cmdread1_iniBursts;
	max_set_uint64t(actions, "Cmdread1", "iniBursts", inscalar_Cmdread1_iniBursts);
	/* end of code for scalar Cmdread1.iniBursts*/
	
	/* code for scalar Cmdread1.totalBursts*/
	uint64_t inscalar_Cmdread1_totalBursts = mode_actions->inscalar_Cmdread1_totalBursts;
	max_set_uint64t(actions, "Cmdread1", "totalBursts", inscalar_Cmdread1_totalBursts);
	/* end of code for scalar Cmdread1.totalBursts*/
	
	/* code for scalar Cmdread1.wordsPerBurst*/
	uint64_t inscalar_Cmdread1_wordsPerBurst = mode_actions->inscalar_Cmdread1_wordsPerBurst;
	max_set_uint64t(actions, "Cmdread1", "wordsPerBurst", inscalar_Cmdread1_wordsPerBurst);
	/* end of code for scalar Cmdread1.wordsPerBurst*/
	
	/* code for scalar Cmdread2.Enable*/
	uint64_t inscalar_Cmdread2_Enable = mode_actions->inscalar_Cmdread2_Enable;
	max_set_uint64t(actions, "Cmdread2", "Enable", inscalar_Cmdread2_Enable);
	/* end of code for scalar Cmdread2.Enable*/
	
	/* code for scalar Cmdread2.iniBursts*/
	uint64_t inscalar_Cmdread2_iniBursts = mode_actions->inscalar_Cmdread2_iniBursts;
	max_set_uint64t(actions, "Cmdread2", "iniBursts", inscalar_Cmdread2_iniBursts);
	/* end of code for scalar Cmdread2.iniBursts*/
	
	/* code for scalar Cmdread2.totalBursts*/
	uint64_t inscalar_Cmdread2_totalBursts = mode_actions->inscalar_Cmdread2_totalBursts;
	max_set_uint64t(actions, "Cmdread2", "totalBursts", inscalar_Cmdread2_totalBursts);
	/* end of code for scalar Cmdread2.totalBursts*/
	
	/* code for scalar Cmdread2.wordsPerBurst*/
	uint64_t inscalar_Cmdread2_wordsPerBurst = mode_actions->inscalar_Cmdread2_wordsPerBurst;
	max_set_uint64t(actions, "Cmdread2", "wordsPerBurst", inscalar_Cmdread2_wordsPerBurst);
	/* end of code for scalar Cmdread2.wordsPerBurst*/
	
	/* code for scalar Cmdread3.Enable*/
	uint64_t inscalar_Cmdread3_Enable = mode_actions->inscalar_Cmdread3_Enable;
	max_set_uint64t(actions, "Cmdread3", "Enable", inscalar_Cmdread3_Enable);
	/* end of code for scalar Cmdread3.Enable*/
	
	/* code for scalar Cmdread3.iniBursts*/
	uint64_t inscalar_Cmdread3_iniBursts = mode_actions->inscalar_Cmdread3_iniBursts;
	max_set_uint64t(actions, "Cmdread3", "iniBursts", inscalar_Cmdread3_iniBursts);
	/* end of code for scalar Cmdread3.iniBursts*/
	
	/* code for scalar Cmdread3.totalBursts*/
	uint64_t inscalar_Cmdread3_totalBursts = mode_actions->inscalar_Cmdread3_totalBursts;
	max_set_uint64t(actions, "Cmdread3", "totalBursts", inscalar_Cmdread3_totalBursts);
	/* end of code for scalar Cmdread3.totalBursts*/
	
	/* code for scalar Cmdread3.wordsPerBurst*/
	uint64_t inscalar_Cmdread3_wordsPerBurst = mode_actions->inscalar_Cmdread3_wordsPerBurst;
	max_set_uint64t(actions, "Cmdread3", "wordsPerBurst", inscalar_Cmdread3_wordsPerBurst);
	/* end of code for scalar Cmdread3.wordsPerBurst*/
	
	/* code for scalar Cmdwrite0.Enable*/
	uint64_t inscalar_Cmdwrite0_Enable = mode_actions->inscalar_Cmdwrite0_Enable;
	max_set_uint64t(actions, "Cmdwrite0", "Enable", inscalar_Cmdwrite0_Enable);
	/* end of code for scalar Cmdwrite0.Enable*/
	
	/* code for scalar Cmdwrite0.iniBursts*/
	uint64_t inscalar_Cmdwrite0_iniBursts = mode_actions->inscalar_Cmdwrite0_iniBursts;
	max_set_uint64t(actions, "Cmdwrite0", "iniBursts", inscalar_Cmdwrite0_iniBursts);
	/* end of code for scalar Cmdwrite0.iniBursts*/
	
	/* code for scalar Cmdwrite0.iterations*/
	uint64_t inscalar_Cmdwrite0_iterations = mode_actions->inscalar_Cmdwrite0_iterations;
	max_set_uint64t(actions, "Cmdwrite0", "iterations", inscalar_Cmdwrite0_iterations);
	/* end of code for scalar Cmdwrite0.iterations*/
	
	/* code for scalar Cmdwrite0.totalBursts*/
	uint64_t inscalar_Cmdwrite0_totalBursts = mode_actions->inscalar_Cmdwrite0_totalBursts;
	max_set_uint64t(actions, "Cmdwrite0", "totalBursts", inscalar_Cmdwrite0_totalBursts);
	/* end of code for scalar Cmdwrite0.totalBursts*/
	
	/* code for scalar Cmdwrite0.wordsPerBurst*/
	uint64_t inscalar_Cmdwrite0_wordsPerBurst = mode_actions->inscalar_Cmdwrite0_wordsPerBurst;
	max_set_uint64t(actions, "Cmdwrite0", "wordsPerBurst", inscalar_Cmdwrite0_wordsPerBurst);
	/* end of code for scalar Cmdwrite0.wordsPerBurst*/
	
	/* code for scalar Cmdwrite1.Enable*/
	uint64_t inscalar_Cmdwrite1_Enable = mode_actions->inscalar_Cmdwrite1_Enable;
	max_set_uint64t(actions, "Cmdwrite1", "Enable", inscalar_Cmdwrite1_Enable);
	/* end of code for scalar Cmdwrite1.Enable*/
	
	/* code for scalar Cmdwrite1.iniBursts*/
	uint64_t inscalar_Cmdwrite1_iniBursts = mode_actions->inscalar_Cmdwrite1_iniBursts;
	max_set_uint64t(actions, "Cmdwrite1", "iniBursts", inscalar_Cmdwrite1_iniBursts);
	/* end of code for scalar Cmdwrite1.iniBursts*/
	
	/* code for scalar Cmdwrite1.iterations*/
	uint64_t inscalar_Cmdwrite1_iterations = mode_actions->inscalar_Cmdwrite1_iterations;
	max_set_uint64t(actions, "Cmdwrite1", "iterations", inscalar_Cmdwrite1_iterations);
	/* end of code for scalar Cmdwrite1.iterations*/
	
	/* code for scalar Cmdwrite1.totalBursts*/
	uint64_t inscalar_Cmdwrite1_totalBursts = mode_actions->inscalar_Cmdwrite1_totalBursts;
	max_set_uint64t(actions, "Cmdwrite1", "totalBursts", inscalar_Cmdwrite1_totalBursts);
	/* end of code for scalar Cmdwrite1.totalBursts*/
	
	/* code for scalar Cmdwrite1.wordsPerBurst*/
	uint64_t inscalar_Cmdwrite1_wordsPerBurst = mode_actions->inscalar_Cmdwrite1_wordsPerBurst;
	max_set_uint64t(actions, "Cmdwrite1", "wordsPerBurst", inscalar_Cmdwrite1_wordsPerBurst);
	/* end of code for scalar Cmdwrite1.wordsPerBurst*/
	
	/* code for scalar MyApp0.ORDER*/
	uint64_t inscalar_MyApp0_ORDER = mode_actions->inscalar_MyApp0_ORDER;
	max_set_uint64t(actions, "MyApp0", "ORDER", inscalar_MyApp0_ORDER);
	/* end of code for scalar MyApp0.ORDER*/
	
	/* code for scalar MyApp0.c_0*/
	double inscalar_MyApp0_c_0 = mode_actions->inscalar_MyApp0_c_0;
	max_set_double(actions, "MyApp0", "c_0", inscalar_MyApp0_c_0);
	/* end of code for scalar MyApp0.c_0*/
	
	/* code for scalar MyApp0.c_1_0*/
	double inscalar_MyApp0_c_1_0 = mode_actions->inscalar_MyApp0_c_1_0;
	max_set_double(actions, "MyApp0", "c_1_0", inscalar_MyApp0_c_1_0);
	/* end of code for scalar MyApp0.c_1_0*/
	
	/* code for scalar MyApp0.c_1_1*/
	double inscalar_MyApp0_c_1_1 = mode_actions->inscalar_MyApp0_c_1_1;
	max_set_double(actions, "MyApp0", "c_1_1", inscalar_MyApp0_c_1_1);
	/* end of code for scalar MyApp0.c_1_1*/
	
	/* code for scalar MyApp0.c_1_2*/
	double inscalar_MyApp0_c_1_2 = mode_actions->inscalar_MyApp0_c_1_2;
	max_set_double(actions, "MyApp0", "c_1_2", inscalar_MyApp0_c_1_2);
	/* end of code for scalar MyApp0.c_1_2*/
	
	/* code for scalar MyApp0.c_1_3*/
	double inscalar_MyApp0_c_1_3 = mode_actions->inscalar_MyApp0_c_1_3;
	max_set_double(actions, "MyApp0", "c_1_3", inscalar_MyApp0_c_1_3);
	/* end of code for scalar MyApp0.c_1_3*/
	
	/* code for scalar MyApp0.c_1_4*/
	double inscalar_MyApp0_c_1_4 = mode_actions->inscalar_MyApp0_c_1_4;
	max_set_double(actions, "MyApp0", "c_1_4", inscalar_MyApp0_c_1_4);
	/* end of code for scalar MyApp0.c_1_4*/
	
	/* code for scalar MyApp0.c_2_0*/
	double inscalar_MyApp0_c_2_0 = mode_actions->inscalar_MyApp0_c_2_0;
	max_set_double(actions, "MyApp0", "c_2_0", inscalar_MyApp0_c_2_0);
	/* end of code for scalar MyApp0.c_2_0*/
	
	/* code for scalar MyApp0.c_2_1*/
	double inscalar_MyApp0_c_2_1 = mode_actions->inscalar_MyApp0_c_2_1;
	max_set_double(actions, "MyApp0", "c_2_1", inscalar_MyApp0_c_2_1);
	/* end of code for scalar MyApp0.c_2_1*/
	
	/* code for scalar MyApp0.c_2_2*/
	double inscalar_MyApp0_c_2_2 = mode_actions->inscalar_MyApp0_c_2_2;
	max_set_double(actions, "MyApp0", "c_2_2", inscalar_MyApp0_c_2_2);
	/* end of code for scalar MyApp0.c_2_2*/
	
	/* code for scalar MyApp0.c_2_3*/
	double inscalar_MyApp0_c_2_3 = mode_actions->inscalar_MyApp0_c_2_3;
	max_set_double(actions, "MyApp0", "c_2_3", inscalar_MyApp0_c_2_3);
	/* end of code for scalar MyApp0.c_2_3*/
	
	/* code for scalar MyApp0.c_2_4*/
	double inscalar_MyApp0_c_2_4 = mode_actions->inscalar_MyApp0_c_2_4;
	max_set_double(actions, "MyApp0", "c_2_4", inscalar_MyApp0_c_2_4);
	/* end of code for scalar MyApp0.c_2_4*/
	
	/* code for scalar MyApp0.c_3_0*/
	double inscalar_MyApp0_c_3_0 = mode_actions->inscalar_MyApp0_c_3_0;
	max_set_double(actions, "MyApp0", "c_3_0", inscalar_MyApp0_c_3_0);
	/* end of code for scalar MyApp0.c_3_0*/
	
	/* code for scalar MyApp0.c_3_1*/
	double inscalar_MyApp0_c_3_1 = mode_actions->inscalar_MyApp0_c_3_1;
	max_set_double(actions, "MyApp0", "c_3_1", inscalar_MyApp0_c_3_1);
	/* end of code for scalar MyApp0.c_3_1*/
	
	/* code for scalar MyApp0.c_3_2*/
	double inscalar_MyApp0_c_3_2 = mode_actions->inscalar_MyApp0_c_3_2;
	max_set_double(actions, "MyApp0", "c_3_2", inscalar_MyApp0_c_3_2);
	/* end of code for scalar MyApp0.c_3_2*/
	
	/* code for scalar MyApp0.c_3_3*/
	double inscalar_MyApp0_c_3_3 = mode_actions->inscalar_MyApp0_c_3_3;
	max_set_double(actions, "MyApp0", "c_3_3", inscalar_MyApp0_c_3_3);
	/* end of code for scalar MyApp0.c_3_3*/
	
	/* code for scalar MyApp0.c_3_4*/
	double inscalar_MyApp0_c_3_4 = mode_actions->inscalar_MyApp0_c_3_4;
	max_set_double(actions, "MyApp0", "c_3_4", inscalar_MyApp0_c_3_4);
	/* end of code for scalar MyApp0.c_3_4*/
	
	/* code for scalar MyApp0.n1*/
	uint64_t inscalar_MyApp0_n1 = mode_actions->inscalar_MyApp0_n1;
	max_set_uint64t(actions, "MyApp0", "n1", inscalar_MyApp0_n1);
	/* end of code for scalar MyApp0.n1*/
	
	/* code for scalar MyApp0.n12*/
	uint64_t inscalar_MyApp0_n12 = mode_actions->inscalar_MyApp0_n12;
	max_set_uint64t(actions, "MyApp0", "n12", inscalar_MyApp0_n12);
	/* end of code for scalar MyApp0.n12*/
	
	/* code for scalar MyApp0.n2*/
	uint64_t inscalar_MyApp0_n2 = mode_actions->inscalar_MyApp0_n2;
	max_set_uint64t(actions, "MyApp0", "n2", inscalar_MyApp0_n2);
	/* end of code for scalar MyApp0.n2*/
	
	/* code for scalar MyApp0.n3*/
	uint64_t inscalar_MyApp0_n3 = mode_actions->inscalar_MyApp0_n3;
	max_set_uint64t(actions, "MyApp0", "n3", inscalar_MyApp0_n3);
	/* end of code for scalar MyApp0.n3*/
	
	/* code for stream host2mgr */
	size_t instream_size_host2mgr = mode_actions->instream_size_host2mgr;
	max_queue_input(actions, "host2mgr", mode_actions->instream_host2mgr, instream_size_host2mgr);
	/* end of code for stream host2mgr */
	
	/* code for stream mgr2host */
	size_t outstream_size_mgr2host = mode_actions->outstream_size_mgr2host;
	max_queue_output(actions, "mgr2host", mode_actions->outstream_mgr2host, outstream_size_mgr2host);
	/* end of code for stream mgr2host */
	
	return actions;
}


void SimBuilder_debug(const char *debug_directory)
{
	if(stored_use_debug_dir) {
		fprintf(stderr, "Debug directory already set\n");
		abort();
	}
	stored_debug_dir = strdup(debug_directory);
	stored_use_debug_dir = 1;
}

#endif /* SLIC_USE_DEFINITIONS */

#ifdef SLIC_DYNAMIC_CODE
SLIC_MODE_START(default)	
SLIC_MODE_END(default)

#endif /* SLIC_DYNAMIC_CODE */

#ifdef PHOTON_NODE_ADD_DATA
#define PHOTON_NODE_ADD_DATA_PRESENT 1
PHOTON_NODE_ADD_DATA(Cmdhostread, 3, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 2, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 4, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 56, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 7, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 9, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 10, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 8, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 11, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 30, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 27, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 28, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 31, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 29, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 32, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 16, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 41, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 51, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 25, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 26, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 53, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 37, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 13, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 35, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 54, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 1, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 5, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 0, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 12, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 34, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 36, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 38, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 40, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 42, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 33, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 46, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 55, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 44, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 45, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 47, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 49, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 50, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostread, 48, "SquashFactor", 0.0)
#endif

#ifdef PHOTON_NODE_ADD_DATA
#define PHOTON_NODE_ADD_DATA_PRESENT 1
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 4, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 3, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 5, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 75, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 9, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 11, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 12, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 10, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 13, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 41, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 38, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 39, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 42, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 40, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 43, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 2, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 6, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 74, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 19, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 20, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 25, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 1, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 7, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 73, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 22, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 23, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 26, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 24, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 27, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 52, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 67, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 36, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 37, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 69, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 48, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 15, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 46, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 70, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 0, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 14, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 45, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 47, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 49, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 51, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 53, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 44, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 57, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 54, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 72, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 56, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 58, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 62, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 71, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 60, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 61, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 63, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 65, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 66, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdhostwrite, 64, "SquashFactor", 0.0)
#endif

#ifdef PHOTON_NODE_ADD_DATA
#define PHOTON_NODE_ADD_DATA_PRESENT 1
PHOTON_NODE_ADD_DATA(MyApp0, 155, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 159, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(MyApp0, 156, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 157, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(MyApp0, 160, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(MyApp0, 158, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(MyApp0, 161, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(MyApp0, 33, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 250, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 41, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 249, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 38, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 248, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 35, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 36, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 14, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 16, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 43, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 44, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 47, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 45, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 48, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 46, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 49, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 53, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 39, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 13, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 50, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 51, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 54, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 180, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 52, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 55, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 58, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 56, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 181, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 59, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 57, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 60, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 64, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 42, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 12, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 61, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 62, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 182, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 65, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 63, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 66, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 69, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 67, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 70, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 183, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 68, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 71, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 3, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 4, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(MyApp0, 5, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 212, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 217, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 218, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 219, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 220, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 221, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 222, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 223, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 224, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 225, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 226, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 227, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 228, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 229, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 230, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 231, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 232, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 233, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 234, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 235, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 236, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 237, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 238, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 179, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 6, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 7, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(MyApp0, 8, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 74, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 9, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 10, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(MyApp0, 11, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 75, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 0, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 1, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(MyApp0, 2, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 17, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 76, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 18, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 77, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 78, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 79, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 80, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 81, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 19, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 82, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 83, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 84, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 85, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 86, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 20, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 87, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 88, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 89, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 90, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 91, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 21, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 92, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 93, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 94, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 95, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 96, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 22, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 97, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 98, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 99, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 100, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 101, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 23, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 102, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 103, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 104, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 105, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 106, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 24, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 107, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 239, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 108, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 109, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 110, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 111, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 25, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 112, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 240, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 113, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 114, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 115, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 116, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 26, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 117, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 241, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 118, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 119, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 120, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 121, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 27, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 122, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 242, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 123, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 124, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 125, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 126, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 28, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 127, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 243, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 128, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 129, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 130, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 131, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 29, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 132, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 244, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 133, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 134, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 135, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 136, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 30, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 137, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 245, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 138, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 139, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 140, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 141, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 31, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 142, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 246, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 143, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 144, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 145, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 146, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 32, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 147, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 148, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 215, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 149, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 150, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 151, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 152, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 153, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 154, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 162, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 163, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 167, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(MyApp0, 164, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 165, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(MyApp0, 168, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(MyApp0, 166, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(MyApp0, 169, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(MyApp0, 170, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 174, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 247, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 172, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 173, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 175, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 177, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 178, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 176, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(MyApp0, 15, "SquashFactor", 0.0)
#endif

#ifdef PHOTON_NODE_ADD_DATA
#define PHOTON_NODE_ADD_DATA_PRESENT 1
PHOTON_NODE_ADD_DATA(Cmdread0, 3, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 2, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 4, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 56, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 7, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 9, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 10, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 8, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 11, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 30, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 27, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 28, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 31, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 29, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 32, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 16, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 41, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 51, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 25, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 26, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 53, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 37, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 13, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 35, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 54, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 1, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 5, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 0, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 12, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 34, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 36, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 38, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 40, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 42, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 33, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 46, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 55, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 44, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 45, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 47, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 49, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 50, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread0, 48, "SquashFactor", 0.0)
#endif

#ifdef PHOTON_NODE_ADD_DATA
#define PHOTON_NODE_ADD_DATA_PRESENT 1
PHOTON_NODE_ADD_DATA(Cmdread1, 3, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 2, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 4, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 56, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 7, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 9, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 10, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 8, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 11, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 30, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 27, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 28, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 31, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 29, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 32, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 16, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 41, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 51, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 25, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 26, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 53, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 37, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 13, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 35, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 54, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 1, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 5, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 0, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 12, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 34, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 36, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 38, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 40, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 42, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 33, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 46, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 55, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 44, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 45, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 47, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 49, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 50, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread1, 48, "SquashFactor", 0.0)
#endif

#ifdef PHOTON_NODE_ADD_DATA
#define PHOTON_NODE_ADD_DATA_PRESENT 1
PHOTON_NODE_ADD_DATA(Cmdread2, 3, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 2, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 4, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 56, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 7, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 9, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 10, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 8, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 11, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 30, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 27, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 28, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 31, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 29, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 32, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 16, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 41, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 51, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 25, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 26, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 53, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 37, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 13, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 35, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 54, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 1, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 5, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 0, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 12, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 34, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 36, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 38, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 40, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 42, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 33, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 46, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 55, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 44, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 45, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 47, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 49, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 50, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread2, 48, "SquashFactor", 0.0)
#endif

#ifdef PHOTON_NODE_ADD_DATA
#define PHOTON_NODE_ADD_DATA_PRESENT 1
PHOTON_NODE_ADD_DATA(Cmdread3, 3, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 2, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 4, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 56, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 7, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 9, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 10, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 8, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 11, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 30, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 27, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 28, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 31, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 29, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 32, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 16, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 41, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 51, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 25, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 26, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 53, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 37, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 13, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 35, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 54, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 1, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 5, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 0, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 12, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 34, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 36, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 38, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 40, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 42, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 33, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 46, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 55, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 44, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 45, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 47, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 49, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 50, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdread3, 48, "SquashFactor", 0.0)
#endif

#ifdef PHOTON_NODE_ADD_DATA
#define PHOTON_NODE_ADD_DATA_PRESENT 1
PHOTON_NODE_ADD_DATA(Cmdwrite0, 4, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 3, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 5, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 75, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 9, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 11, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 12, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 10, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 13, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 41, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 38, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 39, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 42, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 40, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 43, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 2, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 6, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 74, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 19, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 20, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 25, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 1, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 7, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 73, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 22, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 23, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 26, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 24, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 27, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 52, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 67, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 36, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 37, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 69, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 48, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 15, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 46, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 70, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 0, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 14, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 45, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 47, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 49, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 51, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 53, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 44, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 57, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 54, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 72, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 56, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 58, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 62, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 71, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 60, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 61, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 63, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 65, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 66, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite0, 64, "SquashFactor", 0.0)
#endif

#ifdef PHOTON_NODE_ADD_DATA
#define PHOTON_NODE_ADD_DATA_PRESENT 1
PHOTON_NODE_ADD_DATA(Cmdwrite1, 4, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 3, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 5, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 75, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 9, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 11, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 12, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 10, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 13, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 41, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 38, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 39, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 42, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 40, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 43, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 2, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 6, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 74, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 19, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 20, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 25, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 1, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 7, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 73, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 22, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 23, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 26, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 24, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 27, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 52, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 67, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 36, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 37, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 69, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 48, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 15, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 46, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 70, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 0, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 14, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 45, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 47, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 49, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 51, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 53, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 44, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 57, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 54, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 72, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 56, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 58, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 62, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 71, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 60, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 61, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 63, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 65, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 66, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(Cmdwrite1, 64, "SquashFactor", 0.0)
#endif

