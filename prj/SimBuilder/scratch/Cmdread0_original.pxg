<?xml version="1.0" encoding="UTF-8" ?>
<Graph version="2012.1" design_name="Cmdread0" compilation_phase="original">
	<Node group="[]" id="3" pipelineFactor="1.0" type="NodeInputMappedReg">
		<Output latency="0" name="Enable" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>Scalar input (Enable)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:21)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
		<Name>Enable</Name>
	</Node>
	<Edge dst_node_id="4" dst_node_input="enable" src_node_id="3" src_node_output="Enable" />
	<Edge dst_node_id="10" dst_node_input="input" src_node_id="3" src_node_output="Enable" />
	<Node group="[]" id="2" pipelineFactor="1.0" type="NodeInputMappedReg">
		<Output latency="0" name="wordsPerBurst" type="hwOffsetFix(32, 0, UNSIGNED)" />
		<Text>Scalar input (wordsPerBurst)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:20)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
		<Name>wordsPerBurst</Name>
	</Node>
	<Edge dst_node_id="4" dst_node_input="max" src_node_id="2" src_node_output="wordsPerBurst" />
	<Node group="[]" id="4" pipelineFactor="1.0" type="NodeCounterV1">
		<Input name="enable" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Input name="max" type="hwOffsetFix(32, 0, UNSIGNED)" />
		<Output latency="0" name="count" type="hwOffsetFix(32, 0, UNSIGNED)" />
		<Output latency="0" name="wrap" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:355)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:28)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
		<Increment>1</Increment>
		<WrapValue>0</WrapValue>
		<InitValue>0</InitValue>
		<CountMode>NUMERIC_INCREMENTING</CountMode>
		<WrapMode>COUNT_LT_MAX_THEN_WRAP</WrapMode>
	</Node>
	<Edge dst_node_id="7" dst_node_input="a" src_node_id="4" src_node_output="count" />
	<Edge dst_node_id="5" dst_node_input="enable" src_node_id="4" src_node_output="wrap" />
	<Node group="[]" id="6" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="hwUntypedConst()" />
		<Text>0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.eq(HWVar.java:498)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:38)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge dst_node_id="7" dst_node_input="b" src_node_id="6" src_node_output="value" />
	<Node group="[]" id="7" pipelineFactor="1.0" type="NodeEq">
		<Input name="a" type="hwOffsetFix(32, 0, UNSIGNED)" />
		<Input name="b" type="hwOffsetFix(32, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>==</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.eq(HWVar.java:498)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:38)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="9" dst_node_input="input" src_node_id="7" src_node_output="result" />
	<Node group="[]" id="9" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="hwBits(1)" />
		<Text>&lt;{HWRawBits:1}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:38)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="8" dst_node_input="a" src_node_id="9" src_node_output="output" />
	<Node group="[]" id="10" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="hwBits(1)" />
		<Text>&lt;{HWRawBits:1}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:38)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="8" dst_node_input="b" src_node_id="10" src_node_output="output" />
	<Node group="[]" id="8" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="hwBits(1)" />
		<Input name="b" type="hwBits(1)" />
		<Output latency="1" name="result" type="hwBits(1)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:38)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="11" dst_node_input="input" src_node_id="8" src_node_output="result" />
	<Node group="[]" id="11" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="hwBits(1)" />
		<Output latency="0" name="output" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:1, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.and(HWVar.java:441)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:38)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="30" dst_node_input="input" src_node_id="11" src_node_output="output" />
	<Node group="[]" id="30" pipelineFactor="0.0" type="NodeReinterpret">
		<Input name="input" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="hwBits(1)" />
		<Text>&lt;{HWRawBits:1}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:40)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="29" dst_node_input="a" src_node_id="30" src_node_output="output" />
	<Node group="[]" id="27" pipelineFactor="1.0" type="NodeInputMappedReg">
		<Output latency="0" name="io_dram_read_force_disabled" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>Scalar input (io_dram_read_force_disabled)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:40)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
		<Name>io_dram_read_force_disabled</Name>
	</Node>
	<Edge dst_node_id="28" dst_node_input="a" src_node_id="27" src_node_output="io_dram_read_force_disabled" />
	<Node group="[]" id="28" pipelineFactor="0.0" type="NodeNot">
		<Input name="a" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:40)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="31" dst_node_input="input" src_node_id="28" src_node_output="result" />
	<Node group="[]" id="31" pipelineFactor="0.0" type="NodeReinterpret">
		<Input name="input" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="hwBits(1)" />
		<Text>&lt;{HWRawBits:1}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:40)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="29" dst_node_input="b" src_node_id="31" src_node_output="output" />
	<Node group="[]" id="29" pipelineFactor="0.0" type="NodeAnd">
		<Input name="a" type="hwBits(1)" />
		<Input name="b" type="hwBits(1)" />
		<Output latency="0" name="result" type="hwBits(1)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:40)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="32" dst_node_input="input" src_node_id="29" src_node_output="result" />
	<Node group="[]" id="32" pipelineFactor="0.0" type="NodeReinterpret">
		<Input name="input" type="hwBits(1)" />
		<Output latency="0" name="output" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:1, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:40)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="33" dst_node_input="output_control" src_node_id="32" src_node_output="output" />
	<Node group="[]" id="16" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Constant.var(Constant.java:81)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:46)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
		<Value>0</Value>
	</Node>
	<Edge dst_node_id="41" dst_node_input="input" src_node_id="16" src_node_output="value" />
	<Node group="[]" id="41" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="hwBits(1)" />
		<Text>&lt;{HWRawBits:1}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:40)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="42" dst_node_input="in0" src_node_id="41" src_node_output="output" />
	<Node group="[]" id="23" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="hwOffsetFix(15, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:15, 0, UNSIGNED}\n0x0001; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:40)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
		<Value>000000000000001</Value>
	</Node>
	<Edge dst_node_id="24" dst_node_input="datain" src_node_id="23" src_node_output="value" />
	<Node group="[]" id="15" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="hwOffsetFix(4, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:4, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Constant.var(Constant.java:100)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:45)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
		<Value>0000</Value>
	</Node>
	<Edge dst_node_id="24" dst_node_input="shift" src_node_id="15" src_node_output="value" />
	<Node group="[]" id="24" pipelineFactor="1.0" type="NodeShift">
		<Input name="datain" type="hwOffsetFix(15, 0, UNSIGNED)" />
		<Input name="shift" type="hwOffsetFix(4, 0, UNSIGNED)" />
		<Output latency="2" name="dataout" type="hwBits(15)" />
		<Text>&lt;&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:40)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
		<Direction>Left</Direction>
		<Circular>false</Circular>
	</Node>
	<Edge dst_node_id="25" dst_node_input="input" src_node_id="24" src_node_output="dataout" />
	<Node group="[]" id="25" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="hwBits(15)" />
		<Output latency="0" name="output" type="hwOffsetFix(15, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:15, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:40)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="26" dst_node_input="input" src_node_id="25" src_node_output="output" />
	<Node group="[]" id="26" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="hwOffsetFix(15, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="hwBits(15)" />
		<Text>&lt;{HWRawBits:15}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:40)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="39" dst_node_input="input" src_node_id="26" src_node_output="output" />
	<Node group="[]" id="39" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="hwBits(15)" />
		<Output latency="0" name="output" type="hwBits(15)" />
		<Text>&lt;{HWRawBits:15}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:40)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="40" dst_node_input="in0" src_node_id="39" src_node_output="output" />
	<Node group="[]" id="13" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="hwOffsetFix(8, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:8, 0, UNSIGNED}\n0x01; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Constant.var(Constant.java:100)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:43)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
		<Value>00000001</Value>
	</Node>
	<Edge dst_node_id="18" dst_node_input="a" src_node_id="13" src_node_output="value" />
	<Edge dst_node_id="35" dst_node_input="input" src_node_id="13" src_node_output="value" />
	<Node group="[]" id="17" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="hwUntypedConst()" />
		<Text>0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:40)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge dst_node_id="18" dst_node_input="b" src_node_id="17" src_node_output="value" />
	<Node group="[]" id="18" pipelineFactor="1.0" type="NodeEq">
		<Input name="a" type="hwOffsetFix(8, 0, UNSIGNED)" />
		<Input name="b" type="hwOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>==</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:40)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="22" dst_node_input="sel" src_node_id="18" src_node_output="result" />
	<Node group="[]" id="14" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="hwOffsetFix(6, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:6, 0, UNSIGNED}\n0x01; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Constant.var(Constant.java:100)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:44)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
		<Value>000001</Value>
	</Node>
	<Edge dst_node_id="21" dst_node_input="i" src_node_id="14" src_node_output="value" />
	<Node group="[]" id="21" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="hwOffsetFix(6, 0, UNSIGNED)" />
		<Output latency="0" name="o" type="hwOffsetFix(8, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:8, 0, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:40)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="22" dst_node_input="option0" src_node_id="21" src_node_output="o" />
	<Node group="[]" id="19" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="hwBits(8)" />
		<Text>{HWRawBits:8}\n0x00</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:40)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
		<Value>00000000</Value>
	</Node>
	<Edge dst_node_id="20" dst_node_input="input" src_node_id="19" src_node_output="value" />
	<Node group="[]" id="20" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="hwBits(8)" />
		<Output latency="0" name="output" type="hwOffsetFix(8, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:8, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:40)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="22" dst_node_input="option1" src_node_id="20" src_node_output="output" />
	<Node group="[]" id="22" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="hwOffsetFix(8, 0, UNSIGNED)" />
		<Input name="option1" type="hwOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="hwOffsetFix(8, 0, UNSIGNED)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:40)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="37" dst_node_input="input" src_node_id="22" src_node_output="result" />
	<Node group="[]" id="37" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="hwOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="hwBits(8)" />
		<Text>&lt;{HWRawBits:8}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:40)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="38" dst_node_input="in0" src_node_id="37" src_node_output="output" />
	<Node group="[]" id="35" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="hwOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="hwBits(8)" />
		<Text>&lt;{HWRawBits:8}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:40)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="36" dst_node_input="in0" src_node_id="35" src_node_output="output" />
	<Node group="[]" id="1" pipelineFactor="1.0" type="NodeInputMappedReg">
		<Output latency="0" name="totalBursts" type="hwOffsetFix(32, 0, UNSIGNED)" />
		<Text>Scalar input (totalBursts)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:19)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
		<Name>totalBursts</Name>
	</Node>
	<Edge dst_node_id="5" dst_node_input="max" src_node_id="1" src_node_output="totalBursts" />
	<Node group="[]" id="5" pipelineFactor="1.0" type="NodeCounterV1">
		<Input name="enable" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Input name="max" type="hwOffsetFix(32, 0, UNSIGNED)" />
		<Output latency="0" name="count" type="hwOffsetFix(32, 0, UNSIGNED)" />
		<Output latency="0" name="wrap" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:355)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:35)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
		<Increment>1</Increment>
		<WrapValue>0</WrapValue>
		<InitValue>0</InitValue>
		<CountMode>NUMERIC_INCREMENTING</CountMode>
		<WrapMode>COUNT_LT_MAX_THEN_WRAP</WrapMode>
	</Node>
	<Edge dst_node_id="12" dst_node_input="a" src_node_id="5" src_node_output="count" />
	<Node group="[]" id="0" pipelineFactor="1.0" type="NodeInputMappedReg">
		<Output latency="0" name="iniBursts" type="hwOffsetFix(32, 0, UNSIGNED)" />
		<Text>Scalar input (iniBursts)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:886)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:18)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
		<Name>iniBursts</Name>
	</Node>
	<Edge dst_node_id="12" dst_node_input="b" src_node_id="0" src_node_output="iniBursts" />
	<Node group="[]" id="12" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="hwOffsetFix(32, 0, UNSIGNED)" />
		<Input name="b" type="hwOffsetFix(32, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="hwOffsetFix(32, 0, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.types.base.HWVar.add(HWVar.java:730)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:42)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="34" dst_node_input="input" src_node_id="12" src_node_output="result" />
	<Node group="[]" id="34" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="hwOffsetFix(32, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="hwBits(32)" />
		<Text>&lt;{HWRawBits:32}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:40)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="36" dst_node_input="in1" src_node_id="34" src_node_output="output" />
	<Node group="[]" id="36" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="hwBits(8)" />
		<Input name="in1" type="hwBits(32)" />
		<Output latency="0" name="result" type="hwBits(40)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:40)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="38" dst_node_input="in1" src_node_id="36" src_node_output="result" />
	<Node group="[]" id="38" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="hwBits(8)" />
		<Input name="in1" type="hwBits(40)" />
		<Output latency="0" name="result" type="hwBits(48)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:40)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="40" dst_node_input="in1" src_node_id="38" src_node_output="result" />
	<Node group="[]" id="40" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="hwBits(15)" />
		<Input name="in1" type="hwBits(48)" />
		<Output latency="0" name="result" type="hwBits(63)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:40)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="42" dst_node_input="in1" src_node_id="40" src_node_output="result" />
	<Node group="[]" id="42" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="hwBits(1)" />
		<Input name="in1" type="hwBits(63)" />
		<Output latency="0" name="result" type="hwBits(64)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:40)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="33" dst_node_input="data" src_node_id="42" src_node_output="result" />
	<Node group="[]" id="33" pipelineFactor="1.0" type="NodeOutput">
		<Input name="output_control" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Input name="data" type="hwBits(64)" />
		<Text>Output(dram_read)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.kernelcompiler.stdlib.DRAMCommandStream.makeKernelOutput(DRAMCommandStream.java:78)
MyApp_pkg.Cmdread.&lt;init&gt;(Cmdread.java:40)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
		<Name>dram_read</Name>
	</Node>
	<Node group="[]" id="46" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
		<Value>1</Value>
	</Node>
	<Edge dst_node_id="47" dst_node_input="load" src_node_id="46" src_node_output="value" />
	<Node group="[]" id="43" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="hwUntypedConst()" />
		<Text>1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge dst_node_id="45" dst_node_input="enable" src_node_id="43" src_node_output="value" />
	<Node group="[]" id="44" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="hwOffsetFix(49, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:49, 0, UNSIGNED}\n0x1000000000000; 2.81474976710656E14</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
		<Value>1000000000000000000000000000000000000000000000000</Value>
	</Node>
	<Edge dst_node_id="45" dst_node_input="max" src_node_id="44" src_node_output="value" />
	<Node group="[]" id="45" pipelineFactor="1.0" type="NodeCounterV1">
		<Input name="enable" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Input name="max" type="hwOffsetFix(49, 0, UNSIGNED)" />
		<Output latency="0" name="count" type="hwOffsetFix(48, 0, UNSIGNED)" />
		<Output latency="0" name="wrap" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
		<Increment>1</Increment>
		<WrapValue>0</WrapValue>
		<InitValue>0</InitValue>
		<CountMode>NUMERIC_INCREMENTING</CountMode>
		<WrapMode>COUNT_LT_MAX_THEN_WRAP</WrapMode>
	</Node>
	<Edge dst_node_id="50" dst_node_input="a" src_node_id="45" src_node_output="count" />
	<Edge dst_node_id="47" dst_node_input="data" src_node_id="45" src_node_output="count" />
	<Node group="[]" id="47" pipelineFactor="1.0" type="NodeOutputMappedReg">
		<Input name="load" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Input name="data" type="hwOffsetFix(48, 0, UNSIGNED)" />
		<Text>Scalar output (current_run_cycle_count)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
		<Name>current_run_cycle_count</Name>
	</Node>
	<Node group="[]" id="49" pipelineFactor="1.0" type="NodeInputMappedReg">
		<Output latency="0" name="run_cycle_count" type="hwOffsetFix(48, 0, UNSIGNED)" />
		<Text>Scalar input (run_cycle_count)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
		<Name>run_cycle_count</Name>
	</Node>
	<Edge dst_node_id="50" dst_node_input="b" src_node_id="49" src_node_output="run_cycle_count" />
	<Node group="[]" id="50" pipelineFactor="1.0" type="NodeEq">
		<Input name="a" type="hwOffsetFix(48, 0, UNSIGNED)" />
		<Input name="b" type="hwOffsetFix(48, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>==</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="48" dst_node_input="start" src_node_id="50" src_node_output="result" />
	<Node group="[]" id="48" pipelineFactor="1.0" type="NodeFlush">
		<Input name="start" type="hwOffsetFix(1, 0, UNSIGNED)" />
		<Text>Flush</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v1.managers.custom.CustomManager.addKernel(CustomManager.java:807)
MyApp_pkg.AppManager.&lt;init&gt;(AppManager.java:37)
MyApp_pkg.SimBuilder.main(SimBuilder.java:13)</OriginStackTrace>
	</Node>
</Graph>
