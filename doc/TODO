* Simple Passthrough example.

** The entire file should look like what is in examples/passthrough.c.
*** 1. How does the compiler know the difference between a normal function and a dataflow one? (pragma)
*** 2. What do we do with (int n vs no size)? How does the kernel know for how many cicles to run the design?
par
We want this example to compile as follows:
maxc passthrough.c -> generates a maxcompiler project containing:
   1. source code for CPU part
     device == simulation  | maxeler0 based on cl argument (-sim, -hw)
     kernel_cycles should be set based on n
   2. source code for kernel part
   3. source code for manager

* Reduce /tree type computations?

* Need to figure out what stencil computation is exactly and need to come up with simpler examples.


* General questions
** How do we handle multiple kernels?
*** The problem is not having multiple kernels, but specifying how they relate to each other.
** How do we handle managers?
*** One solution would be to disallow multiple kernels.
*** However, it is possible we will have problems (.i.e. may not be possible to express certain things).
For example consider the case with RTM. It's quite important that the
DRAM kernel is able to operate asynchronously with the compute
kernel. (Are there any other cases?)  These links can't always be
inferred unless we assume in/out pairs must match exactly.  In this
case it's not unlikely that we loose code reuse possibility, since we
will eed one implementation for each design.

* Evaluation
** LINPACK
** Sorting Networks
** Matrix Multiply


* Demo
** DONE aspect dir to store aspects
** DONE script to run the deom
** any binaries?
** may want to improve output formatting to make it look more interesting
** also run it in simulation  == REQUIRES Fixing Offsets, maybe postpone ?

* Code Wrap-up
** make submission target
** update readme
** add aspects from asap paper, presentation, report etc

* Presentation
** phone things
** rehearse it + time it once
** consider when to do demo (probably best at the end?)


* Demo Plan:
** Demo the generation of dataflow kernels
** Use two examples: RTM and AdPrediction
** Use two aspects: design space exploration and vary some parameters
** Run the script, show that it generates different configurations (try to name accordingly)
** Show what the differences are between the generated designs
** Show how fastcc can generate deigns for both kernels
** Run in Simulation? may take long to get it to work, but it does show we're serious about it working
** Show some metrics for the generated/original/manual designs -> API calls, LOC,
** try to fetch build data from maxfile directories? Show performance ?
